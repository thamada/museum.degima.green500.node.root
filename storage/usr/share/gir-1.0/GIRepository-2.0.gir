<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="gobject-introspection-1.0"/>
  <c:include name="girepository.h"/>
  <namespace name="GIRepository"
             version="2.0"
             shared-library="libgirepository-1.0.so.0"
             c:prefix="g">
    <union name="Argument" c:type="GArgument">
      <field name="v_boolean" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="v_int8" writable="1">
        <type name="int8" c:type="gint8"/>
      </field>
      <field name="v_uint8" writable="1">
        <type name="uint8" c:type="guint8"/>
      </field>
      <field name="v_int16" writable="1">
        <type name="int16" c:type="gint16"/>
      </field>
      <field name="v_uint16" writable="1">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="v_int32" writable="1">
        <type name="int32" c:type="gint32"/>
      </field>
      <field name="v_uint32" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="v_int64" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="v_uint64" writable="1">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="v_float" writable="1">
        <type name="float" c:type="gfloat"/>
      </field>
      <field name="v_double" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
      <field name="v_short" writable="1">
        <type name="short" c:type="gshort"/>
      </field>
      <field name="v_ushort" writable="1">
        <type name="ushort" c:type="gushort"/>
      </field>
      <field name="v_int" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="v_uint" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="v_long" writable="1">
        <type name="long" c:type="glong"/>
      </field>
      <field name="v_ulong" writable="1">
        <type name="ulong" c:type="gulong"/>
      </field>
      <field name="v_ssize" writable="1">
        <type name="ssize_t" c:type="gssize"/>
      </field>
      <field name="v_size" writable="1">
        <type name="size_t" c:type="gsize"/>
      </field>
      <field name="v_string" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="v_pointer" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </union>
    <record name="IArgInfo" c:type="GIArgInfo">
    </record>
    <record name="IAttributeIter" c:type="GIAttributeIter">
      <field name="data" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="data2" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="data3" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="data4" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <record name="IBaseInfo" c:type="GIBaseInfo">
    </record>
    <record name="ICallableInfo" c:type="GICallableInfo">
    </record>
    <record name="ICallbackInfo" c:type="GICallbackInfo">
    </record>
    <record name="IConstantInfo" c:type="GIConstantInfo">
    </record>
    <enumeration name="IDirection" c:type="GIDirection">
      <member name="in" value="0" c:identifier="GI_DIRECTION_IN"/>
      <member name="out" value="1" c:identifier="GI_DIRECTION_OUT"/>
      <member name="inout" value="2" c:identifier="GI_DIRECTION_INOUT"/>
    </enumeration>
    <record name="IEnumInfo" c:type="GIEnumInfo">
    </record>
    <record name="IErrorDomainInfo" c:type="GIErrorDomainInfo">
    </record>
    <record name="IFieldInfo" c:type="GIFieldInfo">
    </record>
    <bitfield name="IFieldInfoFlags" c:type="GIFieldInfoFlags">
      <member name="readable" value="1" c:identifier="GI_FIELD_IS_READABLE"/>
      <member name="writable" value="2" c:identifier="GI_FIELD_IS_WRITABLE"/>
    </bitfield>
    <record name="IFunctionInfo" c:type="GIFunctionInfo">
    </record>
    <bitfield name="IFunctionInfoFlags" c:type="GIFunctionInfoFlags">
      <member name="is_method" value="1" c:identifier="GI_FUNCTION_IS_METHOD"/>
      <member name="is_constructor"
              value="2"
              c:identifier="GI_FUNCTION_IS_CONSTRUCTOR"/>
      <member name="is_getter" value="4" c:identifier="GI_FUNCTION_IS_GETTER"/>
      <member name="is_setter" value="8" c:identifier="GI_FUNCTION_IS_SETTER"/>
      <member name="wraps_vfunc"
              value="16"
              c:identifier="GI_FUNCTION_WRAPS_VFUNC"/>
      <member name="throws" value="32" c:identifier="GI_FUNCTION_THROWS"/>
    </bitfield>
    <enumeration name="IInfoType" c:type="GIInfoType">
      <member name="invalid" value="0" c:identifier="GI_INFO_TYPE_INVALID"/>
      <member name="function" value="1" c:identifier="GI_INFO_TYPE_FUNCTION"/>
      <member name="callback" value="2" c:identifier="GI_INFO_TYPE_CALLBACK"/>
      <member name="struct" value="3" c:identifier="GI_INFO_TYPE_STRUCT"/>
      <member name="boxed" value="4" c:identifier="GI_INFO_TYPE_BOXED"/>
      <member name="enum" value="5" c:identifier="GI_INFO_TYPE_ENUM"/>
      <member name="flags" value="6" c:identifier="GI_INFO_TYPE_FLAGS"/>
      <member name="object" value="7" c:identifier="GI_INFO_TYPE_OBJECT"/>
      <member name="interface"
              value="8"
              c:identifier="GI_INFO_TYPE_INTERFACE"/>
      <member name="constant" value="9" c:identifier="GI_INFO_TYPE_CONSTANT"/>
      <member name="error_domain"
              value="10"
              c:identifier="GI_INFO_TYPE_ERROR_DOMAIN"/>
      <member name="union" value="11" c:identifier="GI_INFO_TYPE_UNION"/>
      <member name="value" value="12" c:identifier="GI_INFO_TYPE_VALUE"/>
      <member name="signal" value="13" c:identifier="GI_INFO_TYPE_SIGNAL"/>
      <member name="vfunc" value="14" c:identifier="GI_INFO_TYPE_VFUNC"/>
      <member name="property" value="15" c:identifier="GI_INFO_TYPE_PROPERTY"/>
      <member name="field" value="16" c:identifier="GI_INFO_TYPE_FIELD"/>
      <member name="arg" value="17" c:identifier="GI_INFO_TYPE_ARG"/>
      <member name="type" value="18" c:identifier="GI_INFO_TYPE_TYPE"/>
      <member name="unresolved"
              value="19"
              c:identifier="GI_INFO_TYPE_UNRESOLVED"/>
    </enumeration>
    <record name="IInterfaceInfo" c:type="GIInterfaceInfo">
    </record>
    <record name="IObjectInfo" c:type="GIObjectInfo">
    </record>
    <record name="IPropertyInfo" c:type="GIPropertyInfo">
    </record>
    <record name="IRegisteredTypeInfo" c:type="GIRegisteredTypeInfo">
    </record>
    <class name="IRepository"
           c:type="GIRepository"
           parent="GObject.Object"
           glib:type-name="GIRepository"
           glib:get-type="g_irepository_get_type"
           glib:type-struct="IRepositoryClass">
      <function name="get_default"
                c:identifier="g_irepository_get_default"
                doc="Returns the singleton process-global default #GIRepository.  It is
not currently supported to have multiple repositories in a
particular process, but this function is provided in the unlikely
eventuality that it would become possible, and as a convenience for
higher level language bindings to conform to the GObject method
call conventions.
All methods on #GIRepository also accept %NULL as an instance
parameter to mean this default repository, which is usually more
convenient for C.">
        <return-value transfer-ownership="none"
                      doc="The global singleton #GIRepository">
          <type name="IRepository" c:type="GIRepository*"/>
        </return-value>
      </function>
      <function name="prepend_search_path"
                c:identifier="g_irepository_prepend_search_path">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="directory" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_search_path"
                c:identifier="g_irepository_get_search_path"
                doc="Returns the search path the GIRepository will use when looking for typelibs.
The string is internal to GIRespository and should not be freed, nor should
the elements.">
        <return-value transfer-ownership="none" doc="list of strings">
          <type name="GLib.SList" c:type="GSList*">
            <type name="filename"/>
          </type>
        </return-value>
      </function>
      <function name="get_option_group"
                c:identifier="g_irepository_get_option_group">
        <return-value transfer-ownership="full">
          <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
        </return-value>
      </function>
      <function name="dump" c:identifier="g_irepository_dump" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="arg" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </function>
      <method name="load_typelib"
              c:identifier="g_irepository_load_typelib"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="typelib" transfer-ownership="none">
            <type name="Typelib" c:type="GTypelib*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="IRepositoryLoadFlags" c:type="GIRepositoryLoadFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_registered"
              c:identifier="g_irepository_is_registered"
              doc="Check whether a particular namespace (and optionally, a specific
version thereof) is currently loaded.  This function is likely to
only be useful in unusual circumstances; in order to act upon
metadata in the namespace, you should call #g_irepository_require
instead which will ensure the namespace is loaded, and return as
quickly as this function will if it has already been loaded.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="version"
                     transfer-ownership="none"
                     allow-none="1"
                     doc="Required version, may be %NULL for latest">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_by_name"
              c:identifier="g_irepository_find_by_name"
              doc="Searches for a particular entry in a namespace.  Before calling
this function for a particular namespace, you must call
#g_irepository_require once to load the namespace, or otherwise
ensure the namespace has already been loaded.">
        <return-value transfer-ownership="full">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="require"
              c:identifier="g_irepository_require"
              doc="Force the namespace @namespace_ to be loaded if it isn&apos;t already.
If @namespace_ is not loaded, this function will search for a
&quot;.typelib&quot; file using the repository search path.  In addition, a
version @version of namespace may be specified.  If @version is
not specified, the latest will be used."
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Typelib" c:type="GTypelib*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="version"
                     transfer-ownership="none"
                     allow-none="1"
                     doc="Version of namespace, may be %NULL for latest">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="IRepositoryLoadFlags" c:type="GIRepositoryLoadFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dependencies"
              c:identifier="g_irepository_get_dependencies"
              doc="Return an array of all (transitive) dependencies for namespace
form &lt;code&gt;namespace-version&lt;/code&gt;.
such as #g_irepository_require before calling this function.">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_loaded_namespaces"
              c:identifier="g_irepository_get_loaded_namespaces">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="find_by_gtype"
              c:identifier="g_irepository_find_by_gtype"
              doc="Searches all loaded namespaces for a particular #GType.  Note that
in order to locate the metadata, the namespace corresponding to
the type must first have been loaded.  There is currently no
mechanism for determining the namespace which corresponds to an
arbitrary GType - thus, this function will operate most reliably
when you know the GType to originate from be from a loaded namespace.">
        <return-value transfer-ownership="full">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </return-value>
        <parameters>
          <parameter name="gtype" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_infos"
              c:identifier="g_irepository_get_n_infos"
              doc="This function returns the number of metadata entries in
given namespace @namespace_.  The namespace must have
already been loaded before calling this function.">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="g_irepository_get_info"
              doc="This function returns a particular metadata entry in the
given namespace @namespace_.  The namespace must have
already been loaded before calling this function.">
        <return-value transfer-ownership="full">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_typelib_path"
              c:identifier="g_irepository_get_typelib_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_shared_library"
              c:identifier="g_irepository_get_shared_library"
              doc="This function returns the full path to the shared C library
associated with the given namespace @namespace_. There may be no
shared library path associated, in which case this function will
return %NULL.
such as #g_irepository_require before calling this function.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_c_prefix" c:identifier="g_irepository_get_c_prefix">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="g_irepository_get_version"
              doc="This function returns the loaded version associated with the given
namespace @namespace_.
such as #g_irepository_require before calling this function.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="namespace_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="IRepositoryPrivate" c:type="GIRepositoryPrivate*"/>
      </field>
    </class>
    <record name="IRepositoryClass"
            c:type="GIRepositoryClass"
            glib:is-gtype-struct-for="IRepository">
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="IRepositoryError" c:type="GIRepositoryError">
      <member name="typelib_not_found"
              value="0"
              c:identifier="G_IREPOSITORY_ERROR_TYPELIB_NOT_FOUND"/>
      <member name="namespace_mismatch"
              value="1"
              c:identifier="G_IREPOSITORY_ERROR_NAMESPACE_MISMATCH"/>
      <member name="namespace_version_conflict"
              value="2"
              c:identifier="G_IREPOSITORY_ERROR_NAMESPACE_VERSION_CONFLICT"/>
      <member name="library_not_found"
              value="3"
              c:identifier="G_IREPOSITORY_ERROR_LIBRARY_NOT_FOUND"/>
    </enumeration>
    <bitfield name="IRepositoryLoadFlags" c:type="GIRepositoryLoadFlags">
      <member name="irepository_load_flag_lazy"
              value="1"
              c:identifier="G_IREPOSITORY_LOAD_FLAG_LAZY"/>
    </bitfield>
    <record name="IRepositoryPrivate" c:type="GIRepositoryPrivate">
    </record>
    <enumeration name="IScopeType" c:type="GIScopeType">
      <member name="invalid" value="0" c:identifier="GI_SCOPE_TYPE_INVALID"/>
      <member name="call" value="1" c:identifier="GI_SCOPE_TYPE_CALL"/>
      <member name="async" value="2" c:identifier="GI_SCOPE_TYPE_ASYNC"/>
      <member name="notified" value="3" c:identifier="GI_SCOPE_TYPE_NOTIFIED"/>
    </enumeration>
    <record name="ISignalInfo" c:type="GISignalInfo">
    </record>
    <record name="IStructInfo" c:type="GIStructInfo">
    </record>
    <enumeration name="ITransfer" c:type="GITransfer">
      <member name="nothing" value="0" c:identifier="GI_TRANSFER_NOTHING"/>
      <member name="container" value="1" c:identifier="GI_TRANSFER_CONTAINER"/>
      <member name="everything"
              value="2"
              c:identifier="GI_TRANSFER_EVERYTHING"/>
    </enumeration>
    <record name="ITypeInfo" c:type="GITypeInfo">
    </record>
    <enumeration name="ITypeTag" c:type="GITypeTag">
      <member name="void" value="0" c:identifier="GI_TYPE_TAG_VOID"/>
      <member name="boolean" value="1" c:identifier="GI_TYPE_TAG_BOOLEAN"/>
      <member name="int8" value="2" c:identifier="GI_TYPE_TAG_INT8"/>
      <member name="uint8" value="3" c:identifier="GI_TYPE_TAG_UINT8"/>
      <member name="int16" value="4" c:identifier="GI_TYPE_TAG_INT16"/>
      <member name="uint16" value="5" c:identifier="GI_TYPE_TAG_UINT16"/>
      <member name="int32" value="6" c:identifier="GI_TYPE_TAG_INT32"/>
      <member name="uint32" value="7" c:identifier="GI_TYPE_TAG_UINT32"/>
      <member name="int64" value="8" c:identifier="GI_TYPE_TAG_INT64"/>
      <member name="uint64" value="9" c:identifier="GI_TYPE_TAG_UINT64"/>
      <member name="short" value="10" c:identifier="GI_TYPE_TAG_SHORT"/>
      <member name="ushort" value="11" c:identifier="GI_TYPE_TAG_USHORT"/>
      <member name="int" value="12" c:identifier="GI_TYPE_TAG_INT"/>
      <member name="uint" value="13" c:identifier="GI_TYPE_TAG_UINT"/>
      <member name="long" value="14" c:identifier="GI_TYPE_TAG_LONG"/>
      <member name="ulong" value="15" c:identifier="GI_TYPE_TAG_ULONG"/>
      <member name="ssize" value="16" c:identifier="GI_TYPE_TAG_SSIZE"/>
      <member name="size" value="17" c:identifier="GI_TYPE_TAG_SIZE"/>
      <member name="float" value="18" c:identifier="GI_TYPE_TAG_FLOAT"/>
      <member name="double" value="19" c:identifier="GI_TYPE_TAG_DOUBLE"/>
      <member name="time_t" value="20" c:identifier="GI_TYPE_TAG_TIME_T"/>
      <member name="gtype" value="21" c:identifier="GI_TYPE_TAG_GTYPE"/>
      <member name="utf8" value="22" c:identifier="GI_TYPE_TAG_UTF8"/>
      <member name="filename" value="23" c:identifier="GI_TYPE_TAG_FILENAME"/>
      <member name="array" value="24" c:identifier="GI_TYPE_TAG_ARRAY"/>
      <member name="interface"
              value="25"
              c:identifier="GI_TYPE_TAG_INTERFACE"/>
      <member name="glist" value="26" c:identifier="GI_TYPE_TAG_GLIST"/>
      <member name="gslist" value="27" c:identifier="GI_TYPE_TAG_GSLIST"/>
      <member name="ghash" value="28" c:identifier="GI_TYPE_TAG_GHASH"/>
      <member name="error" value="29" c:identifier="GI_TYPE_TAG_ERROR"/>
    </enumeration>
    <record name="IUnionInfo" c:type="GIUnionInfo">
    </record>
    <record name="IUnresolvedInfo" c:type="GIUnresolvedInfo">
    </record>
    <record name="IVFuncInfo" c:type="GIVFuncInfo">
    </record>
    <bitfield name="IVFuncInfoFlags" c:type="GIVFuncInfoFlags">
      <member name="chain_up" value="1" c:identifier="GI_VFUNC_MUST_CHAIN_UP"/>
      <member name="override" value="2" c:identifier="GI_VFUNC_MUST_OVERRIDE"/>
      <member name="not_override"
              value="4"
              c:identifier="GI_VFUNC_MUST_NOT_OVERRIDE"/>
    </bitfield>
    <record name="IValueInfo" c:type="GIValueInfo">
    </record>
    <enumeration name="InvokeError" c:type="GInvokeError">
      <member name="failed" value="0" c:identifier="G_INVOKE_ERROR_FAILED"/>
      <member name="symbol_not_found"
              value="1"
              c:identifier="G_INVOKE_ERROR_SYMBOL_NOT_FOUND"/>
      <member name="argument_mismatch"
              value="2"
              c:identifier="G_INVOKE_ERROR_ARGUMENT_MISMATCH"/>
    </enumeration>
    <record name="Typelib" c:type="GTypelib">
      <constructor name="new_from_memory"
                   c:identifier="g_typelib_new_from_memory">
        <return-value transfer-ownership="full">
          <type name="Typelib" c:type="GTypelib*"/>
        </return-value>
        <parameters>
          <parameter name="memory" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_const_memory"
                   c:identifier="g_typelib_new_from_const_memory">
        <return-value transfer-ownership="full">
          <type name="Typelib" c:type="GTypelib*"/>
        </return-value>
        <parameters>
          <parameter name="memory" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_mapped_file"
                   c:identifier="g_typelib_new_from_mapped_file">
        <return-value transfer-ownership="full">
          <type name="Typelib" c:type="GTypelib*"/>
        </return-value>
        <parameters>
          <parameter name="mfile" transfer-ownership="none">
            <type name="GLib.MappedFile" c:type="GMappedFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="g_typelib_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="symbol" c:identifier="g_typelib_symbol">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="symbol_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="symbol" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_namespace" c:identifier="g_typelib_get_namespace">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <function name="arg_info_get_closure"
              c:identifier="g_arg_info_get_closure">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_get_destroy"
              c:identifier="g_arg_info_get_destroy">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_get_direction"
              c:identifier="g_arg_info_get_direction">
      <return-value transfer-ownership="full">
        <type name="IDirection" c:type="GIDirection"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_get_ownership_transfer"
              c:identifier="g_arg_info_get_ownership_transfer">
      <return-value transfer-ownership="full">
        <type name="ITransfer" c:type="GITransfer"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_get_scope" c:identifier="g_arg_info_get_scope">
      <return-value transfer-ownership="full">
        <type name="IScopeType" c:type="GIScopeType"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_get_type" c:identifier="g_arg_info_get_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_is_dipper" c:identifier="g_arg_info_is_dipper">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_is_optional"
              c:identifier="g_arg_info_is_optional">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_is_return_value"
              c:identifier="g_arg_info_is_return_value">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="arg_info_may_be_null"
              c:identifier="g_arg_info_may_be_null">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IArgInfo" c:type="GIArgInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_attribute"
              c:identifier="g_base_info_get_attribute">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_container"
              c:identifier="g_base_info_get_container">
      <return-value transfer-ownership="full">
        <type name="IBaseInfo" c:type="GIBaseInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_name" c:identifier="g_base_info_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_namespace"
              c:identifier="g_base_info_get_namespace">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_type" c:identifier="g_base_info_get_type">
      <return-value transfer-ownership="full">
        <type name="IInfoType" c:type="GIInfoType"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_get_typelib"
              c:identifier="g_base_info_get_typelib">
      <return-value transfer-ownership="full">
        <type name="Typelib" c:type="GTypelib*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_is_deprecated"
              c:identifier="g_base_info_is_deprecated">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_iterate_attributes"
              c:identifier="g_base_info_iterate_attributes">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
        <parameter name="iterator" transfer-ownership="none">
          <type name="IAttributeIter" c:type="GIAttributeIter*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_ref" c:identifier="g_base_info_ref">
      <return-value transfer-ownership="full">
        <type name="IBaseInfo" c:type="GIBaseInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_info_unref" c:identifier="g_base_info_unref">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="callable_info_get_arg"
              c:identifier="g_callable_info_get_arg">
      <return-value transfer-ownership="full">
        <type name="IArgInfo" c:type="GIArgInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ICallableInfo" c:type="GICallableInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="callable_info_get_caller_owns"
              c:identifier="g_callable_info_get_caller_owns">
      <return-value transfer-ownership="full">
        <type name="ITransfer" c:type="GITransfer"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ICallableInfo" c:type="GICallableInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="callable_info_get_n_args"
              c:identifier="g_callable_info_get_n_args">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ICallableInfo" c:type="GICallableInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="callable_info_get_return_type"
              c:identifier="g_callable_info_get_return_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ICallableInfo" c:type="GICallableInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="callable_info_may_return_null"
              c:identifier="g_callable_info_may_return_null">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ICallableInfo" c:type="GICallableInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="constant_info_get_type"
              c:identifier="g_constant_info_get_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IConstantInfo" c:type="GIConstantInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="constant_info_get_value"
              c:identifier="g_constant_info_get_value">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IConstantInfo" c:type="GIConstantInfo*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_info_get_n_values"
              c:identifier="g_enum_info_get_n_values">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IEnumInfo" c:type="GIEnumInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_info_get_storage_type"
              c:identifier="g_enum_info_get_storage_type">
      <return-value transfer-ownership="full">
        <type name="ITypeTag" c:type="GITypeTag"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IEnumInfo" c:type="GIEnumInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_info_get_value" c:identifier="g_enum_info_get_value">
      <return-value transfer-ownership="full">
        <type name="IValueInfo" c:type="GIValueInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IEnumInfo" c:type="GIEnumInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_domain_info_get_codes"
              c:identifier="g_error_domain_info_get_codes">
      <return-value transfer-ownership="full">
        <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IErrorDomainInfo" c:type="GIErrorDomainInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_domain_info_get_quark"
              c:identifier="g_error_domain_info_get_quark">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IErrorDomainInfo" c:type="GIErrorDomainInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_get_field"
              c:identifier="g_field_info_get_field">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="field_info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
        <parameter name="mem" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_get_flags"
              c:identifier="g_field_info_get_flags">
      <return-value transfer-ownership="full">
        <type name="IFieldInfoFlags" c:type="GIFieldInfoFlags"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_get_offset"
              c:identifier="g_field_info_get_offset">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_get_size" c:identifier="g_field_info_get_size">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_get_type" c:identifier="g_field_info_get_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="field_info_set_field"
              c:identifier="g_field_info_set_field">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="field_info" transfer-ownership="none">
          <type name="IFieldInfo" c:type="GIFieldInfo*"/>
        </parameter>
        <parameter name="mem" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
      </parameters>
    </function>
    <function name="function_info_get_flags"
              c:identifier="g_function_info_get_flags">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfoFlags" c:type="GIFunctionInfoFlags"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="function_info_get_property"
              c:identifier="g_function_info_get_property">
      <return-value transfer-ownership="full">
        <type name="IPropertyInfo" c:type="GIPropertyInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="function_info_get_symbol"
              c:identifier="g_function_info_get_symbol">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="function_info_get_vfunc"
              c:identifier="g_function_info_get_vfunc">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="function_info_invoke"
              c:identifier="g_function_info_invoke"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
        </parameter>
        <parameter name="in_args" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
        <parameter name="n_in_args" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="out_args" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
        <parameter name="n_out_args" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="Argument" c:type="GArgument*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gi_cclosure_marshal_generic"
              c:identifier="gi_cclosure_marshal_generic">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_gvalue" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="info_new" c:identifier="g_info_new">
      <return-value transfer-ownership="full">
        <type name="IBaseInfo" c:type="GIBaseInfo*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="IInfoType" c:type="GIInfoType"/>
        </parameter>
        <parameter name="container" transfer-ownership="none">
          <type name="IBaseInfo" c:type="GIBaseInfo*"/>
        </parameter>
        <parameter name="typelib" transfer-ownership="none">
          <type name="Typelib" c:type="GTypelib*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_find_method"
              c:identifier="g_interface_info_find_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_find_vfunc"
              c:identifier="g_interface_info_find_vfunc">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_constant"
              c:identifier="g_interface_info_get_constant">
      <return-value transfer-ownership="full">
        <type name="IConstantInfo" c:type="GIConstantInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_iface_struct"
              c:identifier="g_interface_info_get_iface_struct">
      <return-value transfer-ownership="full">
        <type name="IStructInfo" c:type="GIStructInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_method"
              c:identifier="g_interface_info_get_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_constants"
              c:identifier="g_interface_info_get_n_constants">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_methods"
              c:identifier="g_interface_info_get_n_methods">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_prerequisites"
              c:identifier="g_interface_info_get_n_prerequisites">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_properties"
              c:identifier="g_interface_info_get_n_properties">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_signals"
              c:identifier="g_interface_info_get_n_signals">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_n_vfuncs"
              c:identifier="g_interface_info_get_n_vfuncs">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_prerequisite"
              c:identifier="g_interface_info_get_prerequisite">
      <return-value transfer-ownership="full">
        <type name="IBaseInfo" c:type="GIBaseInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_property"
              c:identifier="g_interface_info_get_property">
      <return-value transfer-ownership="full">
        <type name="IPropertyInfo" c:type="GIPropertyInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_signal"
              c:identifier="g_interface_info_get_signal">
      <return-value transfer-ownership="full">
        <type name="ISignalInfo" c:type="GISignalInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="interface_info_get_vfunc"
              c:identifier="g_interface_info_get_vfunc">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_find_method"
              c:identifier="g_object_info_find_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_find_vfunc"
              c:identifier="g_object_info_find_vfunc">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_abstract"
              c:identifier="g_object_info_get_abstract">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_class_struct"
              c:identifier="g_object_info_get_class_struct">
      <return-value transfer-ownership="full">
        <type name="IStructInfo" c:type="GIStructInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_constant"
              c:identifier="g_object_info_get_constant">
      <return-value transfer-ownership="full">
        <type name="IConstantInfo" c:type="GIConstantInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_field"
              c:identifier="g_object_info_get_field">
      <return-value transfer-ownership="full">
        <type name="IFieldInfo" c:type="GIFieldInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_interface"
              c:identifier="g_object_info_get_interface">
      <return-value transfer-ownership="full">
        <type name="IInterfaceInfo" c:type="GIInterfaceInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_method"
              c:identifier="g_object_info_get_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_constants"
              c:identifier="g_object_info_get_n_constants">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_fields"
              c:identifier="g_object_info_get_n_fields">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_interfaces"
              c:identifier="g_object_info_get_n_interfaces">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_methods"
              c:identifier="g_object_info_get_n_methods">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_properties"
              c:identifier="g_object_info_get_n_properties">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_signals"
              c:identifier="g_object_info_get_n_signals">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_n_vfuncs"
              c:identifier="g_object_info_get_n_vfuncs">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_parent"
              c:identifier="g_object_info_get_parent">
      <return-value transfer-ownership="full">
        <type name="IObjectInfo" c:type="GIObjectInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_property"
              c:identifier="g_object_info_get_property">
      <return-value transfer-ownership="full">
        <type name="IPropertyInfo" c:type="GIPropertyInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_signal"
              c:identifier="g_object_info_get_signal">
      <return-value transfer-ownership="full">
        <type name="ISignalInfo" c:type="GISignalInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_type_init"
              c:identifier="g_object_info_get_type_init">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_type_name"
              c:identifier="g_object_info_get_type_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_info_get_vfunc"
              c:identifier="g_object_info_get_vfunc">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IObjectInfo" c:type="GIObjectInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_info_get_flags"
              c:identifier="g_property_info_get_flags">
      <return-value transfer-ownership="full">
        <type name="GObject.ParamFlags" c:type="GParamFlags"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IPropertyInfo" c:type="GIPropertyInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="property_info_get_type"
              c:identifier="g_property_info_get_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IPropertyInfo" c:type="GIPropertyInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="registered_type_info_get_g_type"
              c:identifier="g_registered_type_info_get_g_type">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IRegisteredTypeInfo" c:type="GIRegisteredTypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="registered_type_info_get_type_init"
              c:identifier="g_registered_type_info_get_type_init">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IRegisteredTypeInfo" c:type="GIRegisteredTypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="registered_type_info_get_type_name"
              c:identifier="g_registered_type_info_get_type_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IRegisteredTypeInfo" c:type="GIRegisteredTypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="signal_info_get_class_closure"
              c:identifier="g_signal_info_get_class_closure">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ISignalInfo" c:type="GISignalInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="signal_info_get_flags"
              c:identifier="g_signal_info_get_flags">
      <return-value transfer-ownership="full">
        <type name="GObject.SignalFlags" c:type="GSignalFlags"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ISignalInfo" c:type="GISignalInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="signal_info_true_stops_emit"
              c:identifier="g_signal_info_true_stops_emit">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ISignalInfo" c:type="GISignalInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_find_method"
              c:identifier="g_struct_info_find_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_alignment"
              c:identifier="g_struct_info_get_alignment">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_field"
              c:identifier="g_struct_info_get_field">
      <return-value transfer-ownership="full">
        <type name="IFieldInfo" c:type="GIFieldInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_method"
              c:identifier="g_struct_info_get_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_n_fields"
              c:identifier="g_struct_info_get_n_fields">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_n_methods"
              c:identifier="g_struct_info_get_n_methods">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_get_size"
              c:identifier="g_struct_info_get_size">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="struct_info_is_gtype_struct"
              c:identifier="g_struct_info_is_gtype_struct">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IStructInfo" c:type="GIStructInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_array_fixed_size"
              c:identifier="g_type_info_get_array_fixed_size">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_array_length"
              c:identifier="g_type_info_get_array_length">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_error_domain"
              c:identifier="g_type_info_get_error_domain">
      <return-value transfer-ownership="full">
        <type name="IErrorDomainInfo" c:type="GIErrorDomainInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_interface"
              c:identifier="g_type_info_get_interface">
      <return-value transfer-ownership="full">
        <type name="IBaseInfo" c:type="GIBaseInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_n_error_domains"
              c:identifier="g_type_info_get_n_error_domains">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_param_type"
              c:identifier="g_type_info_get_param_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_get_tag" c:identifier="g_type_info_get_tag">
      <return-value transfer-ownership="full">
        <type name="ITypeTag" c:type="GITypeTag"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_is_pointer"
              c:identifier="g_type_info_is_pointer">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_info_is_zero_terminated"
              c:identifier="g_type_info_is_zero_terminated">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="ITypeInfo" c:type="GITypeInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_tag_to_string" c:identifier="g_type_tag_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="ITypeTag" c:type="GITypeTag"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_find_method"
              c:identifier="g_union_info_find_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_alignment"
              c:identifier="g_union_info_get_alignment">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_discriminator"
              c:identifier="g_union_info_get_discriminator">
      <return-value transfer-ownership="full">
        <type name="IConstantInfo" c:type="GIConstantInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_discriminator_offset"
              c:identifier="g_union_info_get_discriminator_offset">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_discriminator_type"
              c:identifier="g_union_info_get_discriminator_type">
      <return-value transfer-ownership="full">
        <type name="ITypeInfo" c:type="GITypeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_field"
              c:identifier="g_union_info_get_field">
      <return-value transfer-ownership="full">
        <type name="IFieldInfo" c:type="GIFieldInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_method"
              c:identifier="g_union_info_get_method">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
        <parameter name="n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_n_fields"
              c:identifier="g_union_info_get_n_fields">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_n_methods"
              c:identifier="g_union_info_get_n_methods">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_get_size" c:identifier="g_union_info_get_size">
      <return-value transfer-ownership="none">
        <type name="size_t" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="union_info_is_discriminated"
              c:identifier="g_union_info_is_discriminated">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IUnionInfo" c:type="GIUnionInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_info_get_value"
              c:identifier="g_value_info_get_value">
      <return-value transfer-ownership="none">
        <type name="long" c:type="glong"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IValueInfo" c:type="GIValueInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vfunc_info_get_flags"
              c:identifier="g_vfunc_info_get_flags">
      <return-value transfer-ownership="full">
        <type name="IVFuncInfoFlags" c:type="GIVFuncInfoFlags"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vfunc_info_get_invoker"
              c:identifier="g_vfunc_info_get_invoker">
      <return-value transfer-ownership="full">
        <type name="IFunctionInfo" c:type="GIFunctionInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vfunc_info_get_offset"
              c:identifier="g_vfunc_info_get_offset">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vfunc_info_get_signal"
              c:identifier="g_vfunc_info_get_signal">
      <return-value transfer-ownership="full">
        <type name="ISignalInfo" c:type="GISignalInfo*"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <type name="IVFuncInfo" c:type="GIVFuncInfo*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
