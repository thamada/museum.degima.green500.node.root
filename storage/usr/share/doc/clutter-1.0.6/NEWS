Clutter 1.0.6 (22/09/2009)
===============================================================================

  * List of changes since 1.0.4

    o Various documentation improvements including a new ClutterPath migration
      guide, a Glossary and objects index

    o A couple of new unit tests for: initial actor sizing, preferred actor
      size and ClutterGroup depth sorting

    o Fix ClutterGroup depth sorting

    o Fix double to float type conversions in ClutterScript and update
      test-script.json so it doesn't refer to old Actor types such as
      ClutterLabel.

    o Do not attempt to free empty ClutterModel column names

    o Fix the BlendString parser so numbers can be part of function names
      allowing use of DOT3_RGB

    o Fix the parsing of special "signal-" property names available when
      using the ClutterAnimation vararg API

    o Adds a "use-markup" property getter for ClutterText

    o Account for clock roll backs between frames so timelines don't simply
      hang

    o Disable mipmap filters before checking framebuffer object completeness
      since some drivers consider texture objects incomplete if a mipmap
      filter is set but the mipmap data hasn't yet been uploaded.

    o Various Makefile fixes, including fixes for the %.c: %.glsl codegen rules
      for GLES2, use AM_SILENT_RULES for automake > 1.11, use a shared set of
      defines for silencing make rules (Makefile.am.silent) and cleanup some
      misuse of CLUTTER_MAJORMINOR.

    o Fix cogl_clear so the alpha component isn't ignored

    o Fix for the GLES 2.0 Cogl backend and the eglx Clutter backend

Many thanks to:

    Damien Lespiau
    Emmanuele Bassi
    Neil Roberts
    Øyvind Kolås
    Samuel Degrande
    Zhou Jiangwei

Clutter 1.0.4 (25/08/2009)
===============================================================================

  * List of changes since 1.0.2

    o Depend on GObject-Introspection 0.6.4, to fix the generation of
      introspection data from uninstalled libraries

    o Fix a crash when closing multiple stages

    o Help gtk-doc pick up ClutterInterval as an object

    o Do not premultiply the color twice inside the CoglPango renderer

    o Fix keyboard navigation of works inside ClutterText

    o Allow key events to bubble up to its parent container if the
      event contains the control modifier is detected

Many thanks to:

  Jonas Bonn
  Jussi Kukkonen
  Owen W. Taylor

Clutter 1.0.2 (14/08/2009)
===============================================================================

  * List of changes since 1.0.0

    o Documentation fixes

    o Build fixes

    o Update the MingW script for building Clutter on Windows

    o Update the build instructions for OS X

    o On X11, make sure to destroy the stage Window when switching to
      a foreign one

    o Fix a bug where clutter_actor_apply_relative_transform() was no
      using the right vertex to perform the transformation

Many thanks to:

  Damien Lespiau
  Colin Walters
  Joshua Lock
  Xu Li

Clutter 1.0.0 (28/07/2009)
===============================================================================

  * List of changes since 0.9.8

    o Allow per-stage disabling of motion event throttling; this should allow
      platforms or applications that require all the motion events not for
      drawing purposes to get them exactly like Clutter gets them from the
      windowing system.

    o Various documentation fixes.

    o Add per-word key navigation inside ClutterText.

    o Fix the RGB<->HLS conversion.

    o Various fixes for the OSX backend.

    o Various build-related fixes.

Many thanks to:

  Geoff Gustafson
  Michael Mortensen
  Owen W. Taylor

Clutter 0.9.8 (17/07/2009)
===============================================================================

  * List of changes since 0.9.6

    o Add more introspection annotations for language bindings.

    o Fix a bug in clutter_animation_set_alpha(), which also broke the
      clutter_actor_animate_with_alpha() function.

    o Check if the stage requires a relayout before showing it; this fixes
      a bug in the X11-based backends, especially under compositing window
      managers, where a 640x480 window would flicker before the default
      stage was shown for the first time.

    o Performance fixes for Cogl.

    o Sliced textures were broken by the COGL journalling.

    o Use the redraw cycle when asynchronously loading textures from
      files.

    o Miscellaneous compilation fixes for the OS X and Windows backends.

    o Allow querying from within the paint function of an Actor whether
      the actor is currently being directly painted or by a Clone actor.

    o In the GLX backend, when using the non-implicit sync-to-vblank inside
      glXSwapBuffers(), call glFinish() to avoid potential tearing.

Many thanks to:

  Colin Walters
  Evan Martin
  Marcos
  Owen W. Taylor
  Xu Li

Clutter 0.9.6 (01/07/2009)
===============================================================================

  * List of changes since 0.9.4:

    o Allow the manipulation of the actor's transformation matrix, so that is
      is possible to apply additional transformations in a way that is
      compatible with the transformations already applied by the scene graph.

    o Fix a race in the X11 backend that happened between resizing the stage
      drawable and the call to glViewport().

    o Merge the cogl-journal-batching branch; this branch implements batching
      the geometry of the elements of the scene graph before sending it to
      OpenGL, thus minimizing the number of state changes and improving the
      overall performance of Clutter-based applications.

    o Add more debugging states for Clutter and COGL, which allow the developer
      to track the state of the journal; to check the VBO fallback paths; to
      disable picking for reliable profiling; to disable software-side matrix
      transformations in favour of the driver/GPU ones.

    o Improve the ability to "break out" of COGL by using gl_begin/gl_end
      semantics; applications that drop into raw GL are, though, ignoring all
      the caching performed by COGL and might incur in performance issues.

    o Fixed the :load-async and :load-data-async properties of Texture by
      removing the unneeded G_PARAM_CONSTRUCT flag.

    o Added an initial migration guide that shows the porting process from
      older releases of Clutter to the 1.0 API; the first chapter deals with
      the migration from ClutterEffect to the new implicit animations API.

    o Fixed MT-safety for the master clock.

Many thanks to:

  Ole André Vadla Ravnås
  Tim Horton

Clutter 0.9.4 (19/06/2009)
===============================================================================

  * List of changes since 0.9.2:

    o Set the layout height in ClutterText, so that wrapping and ellipsization
      work correctly to fill all the allocated area.

    o Remove all the units-based API, and migrate all the positional and
      dimensional accessors to use floating point values when dealing with
      pixels. All the properties dealing with pixels now that a floating
      point value as well.

    o Add the ability to track wether an actor is going to be painted or not,
      using the "mapped" flag. This also allows Clutter to be more strict
      in the handling of the scenegraph, ensuring correctness and avoiding
      wasting resources on nodes that won't be painted.

    o Add debugging facilities for COGL, similar to those of Clutter; through
      them is also possible to have an on screen debugging mode that shows the
      boundaries of each rectangle sent to the GPU.

    o Rework "units" into real logical distance units that can be converted
      between millimeters, typographic points and ems into pixels.

    o Simplify the Animation class to avoid redundancy and the possibility
      of it going out of sync with the Timeline and Alpha instances it uses.

    o Move every operation into a single "master clock" source that advances
      the timelines, dispatches events and redraws the stages in a predictable
      sequence, thus avoiding unneeded redraws. The default is to follow the
      sync-to-vblank cycle, if it is supported by the drivers.

    o Cache the glyphs geometry into a vertex buffer object to avoid
      resubmitting too much information to the GPU.

    o Rework the behaviour of ClutterModel when a filter is applied.

    o Allow submitting premultiplied texture data; this removes the need
      for unpremultiplying data in CairoTexture.

    o Add a simple API for submitting blending and texture combining modes
      through a string description.

    o Move Timelines to pure time-based objects.

    o Lots of performance improvements.

    o Removal of all the deprecated API.

    o Removal of all the fixed point entry points.

    o Lots of documentation fixes - the coverage is now 99% of the exported
      1600 symbols for Clutter and 80%+ of the 300 exported symbols for COGL.

    o Generate the GObject Introspection data for both Clutter and COGL
      at build time.

    o Build environment fixes.

Many thanks to:

    Owen W. Taylor <otaylor@fishsoup.net>
    Thomas Wood <thomas.wood@intel.com>
    Havoc Pennington <hp@pobox.com>
    Bastian Winkler <buz@netbuz.org>
    Chris Lord <chris@linux.intel.com>
    Garry Bodsworth <gjb@camvine.com>
    Rob Bradford <rob@linux.intel.com>
    Johan Bilien <jobi@litl.com>
    Jonas Bonn <jonas@southpole.se>
    Raymond Liu <raymond.liu@intel.com>
    Damien Lespiau <damien.lespiau@gmail.com>
    Dan Winship <danw@gnome.org>
    Marc-André Lureau <marcandre.lureau@gmail.com>
    Robert Staudinger <robsta@gnome.org>
    Tommi Komulainen <tko@litl.com>

Clutter 0.9.2 (16/03/2009)
===============================================================================

Bastian Winkler (2):
      [media] Fix the interface cast macro
      Remove redundant declaration in clutter-text.h

Chris Lord (1):
      [actor] Force a relayout on set_parent()

Christian Persch (1):
      Bug 1429 - Redundant declaration in clutter-x11.h

Colin Walters (3):
      Bug 1491 - Fix hardcoded lib path in .pc files
      Typo in clutter-win32.pc.in introduced by commit 24ce19383
      [animation] Enhance the bind API

Damien Lespiau (6):
      [gitignore] update gitignore files for tests/
      [build] Beautify autotools' output
      [build] Add dolt
      [build] Fix interaction between shave, gtk-doc and libtool 1.x
      [build] Fix dist for the newly introduced m4 macro directory
      Update shave

Emmanuele Bassi (111):
      Post-release bump to 0.9.1
      [text] Merge the attributes with markup enabled
      [tests] Update the text-field interactive test
      Add Actor::create_pango_layout()
      [docs] Add clutter_text_set_markup()
      [clone] Allow cloning unparented actors
      [text] Use create_pango_layout()
      [text] Rename :alignment to :line-alignment
      [texture] Consolidate the quality to filter conversions
      [texture] Check if the material is valid
      [event] Extend KeyEvent for multi-input support
      [actor] Check out parameters before setting them
      [list-model] Make ClutterListModel subclassable
      Bug 1440 - Add clutter_get_current_event_time()
      [tests] Add TEST_CONFORM_SKIP() macro
      [tests] Add conformance tests for ClutterModel
      [ignore] Add the newly created conformance units
      [actor] Revert part of commit 402e022c
      [animation] Do not bind construct-only properties
      [x11] Add backend-specific get_current_event_time()
      Initialize a variable to avoid warnings
      [cogl] Add cogl_is_material to cogl-material.h
      [cogl] Provide GTypes for COGL types
      [texture] Use COGL_TYPE_HANDLE for the handle properties
      [docs] Clarify the set_cogl_texture() documentation
      Merge branch 'build-enhancements'
      [docs] Add a missing "return" annotation
      [build] Pass the -s switch to cmp
      Remove type functions for removed types
      [docs] Update the sections file
      [tests] Add TEST_CONFORM_TODO macro
      [build] Show pkg-config file being generated
      [build] Reference the headers with their full path
      [docs] Update build for COGL API reference
      [build] Update the EXTRA_DIST list
      [build] Fix the ChangeLog generation rule
      [build] Do not overwrite BUILT_SOURCES
      [behaviour] Do not notify empty behaviours
      [path] Do not accept NULL descriptions
      [timeline] Set the n_markers out paramater
      Do not use GL types in Clutter headers
      [docs] Require gtk-doc 1.11
      [docs] Use the --name-space option
      [docs] Add the 1.0 symbols index
      [docs] Rename cogl-docs from sgml to xml
      Add build machinery for gobject-introspection data
      [backend] Update the viewport when updating the GL context
      [build] Move all the compiler flags to AM_CFLAGS
      [ignore] Update with the introspection files
      Add runtime debug messages for COGL
      [actor] Remove usage of ClutterFixed
      Make disable text mipmapping a command line switch
      Make fuzzy picking a command line switch
      [docs] Document envvars and command line switches
      Remove stray fixed point macro usage
      Use a dynamic array for the actors when delivering events
      [media] Add sub-second resolution for the duration
      [build] Put the X11 pc dependencies in another variable
      [build] Do not shave typelib generation
      Intern the ClutterScriptable type name
      [backend] Constify font options
      [cogl] Add a PANGO debug flag for CoglPango use
      Clean up of the ClutterColor API
      [shader] Unify code paths
      Add pkg-config file for COGL
      [build] Various fixes for distcheck
      [docs] Clarify clutter_actor_animate() behaviour
      [docs] Note that grabs are evil
      [cogl-fixed] Add a double-to-fixed conversion macro
      Move BehaviourScale to CoglFixed
      Move ClutterBehaviourEllipse to CoglFixed
      Move ClutterBehaviourRotate to CoglFixed
      Move ClutterTimeline to CoglFixed
      [cogl-fixed] Implement the CoglFixed fundamental GType
      [tests] Test CoglFixed, not ClutterFixed
      [interval] Update fixed-point handling
      [stage] Coalesce fog and perspective API
      [texture] Fix ClutterFixed usage
      [text] Convert units to the right type
      [tests] Use floats, not ClutterFixed
      [units] Add more conversion functions
      [fixed] Remove ClutterFixed API
      [cogl] Fix hardcoded paths in the pc file
      [docs] Remove ClutterFixed from the documentation
      [docs] Update API reference
      [animation] Add vector variants for ::animate()
      [cogl] Initialize boolean flag in CoglContext
      [cogl] Initialize all members of CoglContext
      [color] Fixed HLS to RGB conversion
      [docs] Calling g_object_ref() will not dispose an object
      [docs] Document the commit message format
      [tests] Animate the color during easing
      [docs] Reword some of the coding practices
      [docs] Add a bindings coding practices
      Add more deprecation notices
      [deprecated] Add Effect deprecation
      Do not cause more size requisitions than necessary
      [cogl] Avoid shadowing math.h symbols
      [docs] Clarify Animation memory management
      [animation] Add an emitter for ::completed
      [animation] Add Animation getter
      [tests] Remove unused variables
      [docs] Add description of queue_redraw
      [docs] Update after Animation API changes
      [animation] Enhance consistency of the Animation API
      [docs] Bring down the undocumented symbols to 2%
      Fix release date of 0.9.0
      Update release notes
      [docs] Fix naming of the interval parameter
      [docs] Ignore the TimeoutInterval internal API
      Update release notes

Geoff Gustafson (1):
      [animation] Broken fixed:: properties

Gordon Williams (1):
      [group] Output the group name when debugging paint

Havoc Pennington (4):
      Virtualize GL matrix operations and use a client-side matrix when GL is indirect
      [actor] Add :clip-to-allocation property
      [actor] Add ::queue-redraw signal
      [cogl] Flush matrix before clip planes

Jonathan Matthew (1):
      Declare the EnumValues for PixelFormat static

Neil Roberts (36):
      [cogl-material] Always bind the new texture handle
      Fix building GLES 2 after the material branch merge
      [cogl-texture] Fix the count for the number of enabled arrays
      [cogl-gles2-wrapper] Remove the FIXME to adjust the fragment color
      [clutter-clone] Override the parent opacity to self not self->parent
      [clutter-texture] Release the temporary ref taken when setting a texture
      [clutter-texture] Unref the Cogl material on dispose
      [clutter-texture] Fix the no_slice property
      [cogl-texture] Fix offset to next quad when flushing the log
      [cogl-texture] Move the destruction of the material to _finalize
      [cogl-texture] Fix uninitialised priv var in texture_finalize
      Added a test for non-power-of-two sized textures
      Emit CLUTTER_LEAVE events when the pointer leaves the stage
      Call glActiveTexture and glClientActiveTexture through cogl_get_proc_address
      [win32] Track mouse leave messages
      [clutter-main] Fix the input device passed to set_motion_last_actor
      Override the opacity when painting a clone instead of combining
      Allow rotation angle properties to be negative
      [ClutterBehaviourRotate] Fix up some breakage from the cogl-float branch merge
      [tests/conform] Copy in redhand.png
      Replaced ClutterFixed constants in color_{darken,lighten} with float
      [cogl-gles2-wrapper] Convert texture unit settings to be a static sized array
      [cogl-gles2-wrapper] Actually call glActiveTexture
      Add an environment variable to disable mipmapped text
      [tests/tools] Don't install libdisable-npots.so
      [clutter-texture] Use a GThreadPool for loading async textures
      [cogl-pango-glyph-cache] Fix compiler warning on 64-bit
      Fix warning in clutter-backend-sdl
      [eglnative] Add -I flags for the clutter dir in the src and build dirs
      Set the mapped flag on the stage in the SDL and eglnative backends
      Fix out of tree builds
      Remove use of $(builddir)
      [README] Small typo fix
      Change cogl_path_rectangle and cogl_path_round_rectangle to take x1,y1,x2,y2
      [cogl-path] Minor fix to gtk-doc
      Count timeline frames using the FPS instead of an integer interval

Owen W. Taylor (7):
      Honor ACLOCAL_FLAGS in autogen.sh
      Add gobject-introspection annotations
      Fix x/y confusion for GL_TEXTURE_RECTANGLE_ARB
      Use COGL to establish GL state for ClutterGLXTexturePixmap
      Add (out) annotations for ClutterActor
      Allow NULL for clutter_text_set_text()
      Avoid drawing twice if relayout queues a draw

Raymond Liu (2):
      [text] Crash when multi-byte utf8 text exceeds max_length
      [text] Insertion of multi-byte characters broken

Robert Bragg (28):
      [Cogl] Renames cogl_fog_set to cogl_set_fog for consistency
      [cogl-material] Fixes some dirty flag checks
      [cogl-vertex-buffer] Some fixes for texturing and color arrays
      [docs] Various gtk-doc updates for Cogl
      [tests] Some improvements for test-pixmap
      [Cogl] cogl_clip_{set*,unset} renamed to cogl_clip_{push*,pop}
      [Cogl] Renames cogl_paint_init to cogl_clear and adds a cogl_disable_fog function
      [cogl-color.c] #include fix for the cogl_set_source_color prototype
      [Cogl] the cogl_get_*_matrix functions now work with CoglMatrix types
      [Cogl] Fixes automatic handling of the GL blend enable state.
      [cogl-material] Always glBindTexture when flushing material state
      [Cogl] Remove a debugging assert that was triggering on false positives
      [test-vertex-buffer-contiguous] Improves the texturing test
      [cogl-matrix] Adds padding to CoglMatrix
      [cogl-matrix] Documents that CoglMatrix members should be considered read only
      Removes need for casting (const float *) to (GLfloat *) in _cogl_set_clip_planes
      80 char fix
      Avoid casting CoglMatrix to a GLfloat * when calling glGetFloatv
      Explicitly make the modelview-matrix current in cogl_{rotate,transform,etc}
      Use Cogl enum when making modelview-matrix current in cogl_{rotate,transform,etc}
      Finish GLES{1,2} support for client side matrix stacks
      Maintain the Cogl assumption that the modelview matrix is normally current
      Merge branch 'cogl-client-matrix-stacks'
      [cogl-vertex-buffer] Add a flush of attribute changes in the *_draw() functions
      [cogl-vertex-buffer] Allow querying back the number of vertices a buffer represents
      [cogl-vertex-buffer] fix cogl_vertex_buffer_draw_elements prototype
      [tests] Adds an interactive cogl vertex buffer unit test
      [cogl] Don't endlessly print the same warning regarding layer fallbacks

Robert Staudinger (1):
      [build] Add cogl.h to the built sources list

Shane Bryan (1):
      Bug 1434 - _NET_WM_NAME not set before realize

Tomas Frydrych (3):
      Fixed handling of enter and leave events in clutter_x11_handle_event()
      Fix clutter_x11_texture_pixmap_get/set_property() following change of PROP_WINDOW type
      [x11] Only update cached last event time if we have a real timestamp.

Øyvind Kolås (11):
      Added a mutex for clutter asynchronous textures threads.
      Bail early in clutter_texture_paint if opacity == 0
      Add a warning for recursive emit_event
      Change the default size of thread pool from 3 to 1
      [tests] Added test-texture-async
      [clutter-texture] add option to not block on size for loaded images
      [clutter-texture] remove load-size-async property
      Merge commit 'origin/async-texture-thread-pool' into async-size
      [clutter-texture] updated documentation.
      [clutter-texture] fixed gtk-doc formatting, and init threads in test.
      Merge branch 'async-texture-thread-pool'

Clutter 0.9.0 (30/01/2009)
===============================================================================

 * List of changes between 0.8.6 and 0.9.0

   o ClutterText is a new actor allowing text display, text editing
     both in multi-line and single-line modes, and text selection using
     the pointer devices and the keyboard. ClutterText supercedes both
     ClutterLabel and ClutterEntry.
   o ClutterClone is a new actor that allows cloning of other actors,
     both simple and composite. ClutterClone supercedes ClutterCloneTexture.
   o ClutterBindingPool is a new API that allows to easily add key bindings
     to an actor.
   o ClutterAnimation is a new API for implicit animations, similar to
     the tweening API used in toolkits like jQuery, Tween and Flash. This
     new API supercedes the ClutterEffect API.
   o ClutterAlpha uses "animation modes" instead of raw function
     pointers; it is still possible to pass alpha functions. The alpha
     functions provided by Clutter have been removed from the public
     API. It is possible to register global alpha functions and use
     them though a logical id.
   o The interval of the ClutterAlpha:alpha property has been changed
     to a floating point value in the [ -1.0, 2.0 ] range; this allowed
     the addition of "overshooting" easing modes.
   o COGL now supports backface culling.
   o The COGL-based Pango renderer is public API and it is accessible
     to developers. It is also possible to access the PangoContext used
     by Clutter in order to create PangoLayouts to render text.
   o The ClutterFixed API has been moved to COGL.
   o COGL does not depend on Clutter data types anymore.
   o The ClutterMedia interface has been overhauled: implementations
     now must only override the interface properties. The ranges of
     some properties have been changed to normalized values.
   o COGL now exposes only floating point entry points, and reserves
     the eventual conversion to fixed point only when needed. The
     fixed point type and macros are publicly available for developers
     concerned about floating point operations.
   o COGL has a new Vertex Attribues API that allows submitting an
     extensible number of vertex attributes to OpenGL in a way that
     does not require format conversions and allows fast re-use.
   o COGL has a new Material API that decouples paths from fills; it
     is possible to create an arbitrary path and fill it with a COGL
     texture. The Material API also allows setting multiple texture
     layers and defining the blend modes and colors.
   o ClutterTexture has the ability to use a worker thread to asynchronously
     load an image from a file, as long as the GLib threading support has
     been enabled prior to calling clutter_init().
   o Clutter now supports localization of the help output, and it
     also supports globally setting the text direction for non left to
     right locales.
   o ClutterCairoTexture is a new actor that allows using Cairo
     to draw on a ClutterTexture; since Cairo does not have an OpenGL
     backend, the drawing is not hardware accelerated.
   o Clutter has a unit testing suite, based on the GLib unit test
     framework, which can be used to track regressions.
   o A ClutterPath object has been added, and it is used by the
     BehaviourPath. The Path object allows defining paths using a set
     of coordinates and operations. A Path can be "painted" either using
     COGL primitives or using Cairo primitives, allowing an easier way
     to paint non-rectangular shaped actors.
   o ClutterInterval is a simple object, used by ClutterAnimation, that
     describes an interval between two values, and interpolates between
     the initial and final values of the interval.

 * List of bugs fixed since 0.8.6

   o #835 - Optimize clutter_actor_real_pick()
   o #851 - setting anchor point causes picking problem
   o #883 - Outstanding COGL merge issues
   o #1003 - Add clutter_actor_take_key_focus
   o #1014 - Clutter Animation API Improvements.
   o #1049 - Clutter doesn't support most GLSL uniforms
   o #1051 - WebKit/Clutter product/component?
   o #1058 - Build clutter-box2d with Clutter 0.8
   o #1066 - Clipping regression in 0.8
   o #1086 - virtualize stage_queue_redraw
   o #1105 - low level access to PangoClutter
   o #1106 - ClutterText instead of ClutterLabel and ClutterEntry
   o #1108 - Enter/Leave events logics wrt. skipped motion events
   o #1109 - clutter-0.8.0 fails to compile
   o #1123 - Crash when FBO actor is used and the stage is MINIMIZED
   o #1144 - Provide an option to load images asynchronously in ClutterTexture
   o #1162 - Add unit testing for Clutter
   o #1164 - Mesh API
   o #1172 - Disjoint paths and clip to path
   o #1189 - Backface culling
   o #1209 - Move fixed point API in COGL
   o #1210 - Add CoglColor API
   o #1211 - Drop ClutterFeatureFlags usage from COGL
   o #1212 - Allow only a single include file for Clutter
   o #1215 - Move the Pango renderer to the public API
   o #1219 - Clean up cogl.h
   o #1231 - Build fails in gles flavour in revision 3442
   o #1233 - CLUTTER_ALPHA_SINE_INC is broken in trunk
   o #1251 - Merge the Cairo texture actor in core
   o #1252 - Merge ClutterBehaviourPath and ClutterBehaviourBspline
   o #1261 - [patch] Minimize differences between gl/cogl-texture.c and
     gles/cogl-texture.c
   o #1269 - mingw32 building failed at clutter-media.c
   o #1270 - Update to mingw-cross-compile.sh
   o #1271 - mingw compiling failed:  undefined reference to
     `_glDrawRangeElements@24'
   o #1284 - Return something reasonable from clutter_x11_handle_event()
   o #1300 - clutter_score_remove and clutter_score_remove_all  are different
     in object remove
   o #1310 - font rendering problem
   o #1313 - Fix computation of camera distance
   o #1314 - clutter_sinx() is more inaccurate than it needs to be
   o #1321 - Get Matrix in float
   o #1323 - ClutterBehaviorDepth conflicts with other behaviors
   o #1325 - ClutterPath to cairo_path_t conversion functions
   o #1330 - We should not queue redraw for non-visible actors
   o #1334 - Default value for ClutterLabel::text should be "" instead of NULL
   o #1344 - clutter_actor_transform_stage_point gives invalid coordinates
     for big actors
   o #1352 - Weird cogl-pango.h includes in clutter-[entry|label].c
   o #1354 - Floating point exception when set fps>1000 and start timeline
   o #1361 - Unused ClutterStage::get_resolution() methods
   o #1365 - ClutterEntry doesn't get the cursor when it should
   o #1366 - disable-npots fails to build on mac
   o #1380 - Return booleans from CLUTTER_ACTOR_IS_* macros
   o #1386 - Wrong clipping dimensions for larger actors
   o #1387 - Clarify new-frame signal emission with advance()
   o #1388 - Clarify signal emission for advance_to_marker()
   o #1395 - behaviour_apply and behaviour_get_nth_actor are opposite on
     actors sequence
   o #1397 - clutter command line is not localized.
   o #1402 - Change default tile-waste from 64 to 63
   o #1403 - ClutterMedia::get_uri() should return allocated string
   o #1404 - ClutterMedia issues
   o #1405 - Fix properties that have X11 types to be 'long'
   o #1409 - Use G_SIGNAL_RUN_LAST with ::queue-redraw signal
   o #1410 - [patch] Implements a generic ClutterActorClone class without fbos
   o #1414 - avoid relayout of ClutterTexture if not syncing size
   o #1415 - short-circuit setting same clip again

Clutter 0.8.2 (25/09/2008)
===============================================================================

 * List of changes between 0.8.0 and 0.8.2

   o Add constructor-only properties for the :container and :actor
     properties of ClutterChildMeta
   o Resync the Clutter keysyms with X.org ones.
   o Documentation fixes and improvements
   o Allow defining ClutterColor as an object or an array inside
     ClutterScript UI definitions
   o Added the missing :perspective property to ClutterStage
   o Fixed the upper and lower boundaries for ClutterUnit and
     ClutterFixed properties
   o Fix a bug that prevented disabling sorting on ClutterModel
   o Fix a bug in clutter_timeline_list_markers()
   o Queue a redraw when the clip is changed
   o Optimize calls to push and pop the matrix when painting
   o Add a variable to the pkgconfig file for extracting the
     COGL backend, for configure-time checks
   o Fix a typo in cogl_path_rel_curve_to()
   o Fix showing the cursor after it being hidden once
   o Add a function for obtaining Clutter's option group without
     initializing Clutter

 * List of bugs fixed since 0.8.0

   o #856 - Teardown sequence is borked
   o #945 - Clipping+fbo cloning bugs
   o #1010 - ClutterLabel does not update the layout (again)
   o #1020 - TFP resyncing on MapNotify/ConfigureNotify [Andy Wingo]
   o #1033 - Manually parsing command line options prevents
     initializing clutter
   o #1034 - Picking doesn't work on Eee PC
   o #1038 - Clutter 0.8 won't build due to redefined functions
   o #1044 - cogl_get_viewport error
   o #1047 - API documentation from release tarball is not
     installed by "make install" [Mirco Müller]
   o #1048 - SIGFPE in cogl_texture_set_region() with
     nvidia [Gwenole Beauchesne]
   o #1062 - clutter_actor_query_coords() replacement in
     0.8 [Gwenole Beauchesne]
   o #1069 - Warnings with ClutterScore
   o #1071 - clutter_timeline_get_duration doesn't always work
   o #1075 - Difficult to bind clutter_stage_new
   o #1080 - clutter_stage_read_pixels has upside-down y coordinate
   o #1082 - Texture bitmap is destroyed in wrong way
   o #1085 - Cursor is in wrong position on ClutterEntry if set
     x-align property
   o #1090 - Label somtimes returns natural_width < min_width [Johan Bilien]
   o #1091 - WM_MOUSEWHEEL (scroll-event) not handled
     correctly [Roman Yazmin]
   o #1099 - No ClutterScript API to get a list of IDs in a given
     file [Noah Gibbs]
   o #1100 - WM_SIZE not handled correctly, user_resize and
     window_style correction
   o #1103 - Two typos in clutter documentation
   o #1121 - Setting anchor point doesn't work if set too early
   o #1124 - Clutter causes an additional size request in each
     allocation [Johan Bilien]
   o #1125 - Save an extra pango_layout_get_size in many
     cases [Johan Bilien]
   o #1130 - CLUTTER_MOTION is not emitted when time goes
     backwards. [Pierce Liu]
   o #1137 - Setting the anchor point does not trigger a re-paint
   o #1145 - Flicker on resize the window
   o #1154 - clutter_timeout_pool_new() documentation doesn't say
     how to free [Murray Cumming]

Clutter 0.8.0 (10/07/2008)
===============================================================================

 * List of changes between 0.7.6 and 0.8.0

   o Assume that non-power-of-two sized textures are always supported
     if texture-from-pixmap support is present.

   o Increase documentation coverage.

   o Disable the XINPUT support by default.

   o Improve the behaviour of clutter_actor_get_transformed_size().

   o Fix a copy-and-paste bug which broke the vertex shaders.

 * List of bugs fixed since 0.7.6

   o #983 - cogl-bitmap-fallback.c compiler error/warning due to cast issue
   o #985 - MSC math.h / M_PI issue
   o #998 - clutter always captures X input events
   o #1000 - clutter-x11 should define gtypes for its enumerations
   o #1004 - Fix "edge-detect" shader
   o #1007 - Fix TFP fallback mechanism
   o #1008 - tfp still a bit borked
   o #1010 - ClutterLabel does not update the layout
   o #1011 - Fix TFP fallback mechanism (take 2)
   o #1012 - clutter_stage_read_pixels() has incorrect alpha data
             on some (most?) cards"
   o #1013 - Per device grabs are not obeyed in pointer device propagation.
   o #1015 - Cloning unparented actors with FBOs doesn't work with new
             layout code
   o #1016 - Changing window-redirect-automatic property after creating
             ClutterX11TexturePixmap doesn't work
   o #1019 - clutter-frame-source.h not included by clutter.h
   o #1022 - extern inline functions in clutter-fixed.h
   o #1033 - Manually parsing command line options prevents initializing
             Clutter

Clutter 0.7.6 (27/06/2008)
===============================================================================

 * List of changes between 0.7.4 and 0.7.6

   o Removed the ClutterBackend::get_display_size() and wrappers.

   o Verify that the vertex shaders are successfully compiled when binding
     them.

   o Increase safety of the ClutterGLXTexturePixmap

 * List of bugs fixed since 0.7.4

   o #993 - Underline colors are sometimes wrong

Clutter 0.7.4 (25/06/2008), "Killer Koi"
===============================================================================

 * List of changes between 0.7.2 and 0.7.4

   o Fix the ClutterEntry actor after the clip API changes in COGL.

   o Update the shaders generated for GLES 2.0.

   o Add the ability to add search paths and look up files from
     ClutterScript. This allows defining directories to store the
     images to be loaded by a ClutterTexture.

   o Fix the GLES 1.1 support.

   o Warn if no usable pointer device are available on X11 backends.

   o Improve the request for the best pixel format on win32.

   o Fix a regression when sizing the ClutterStage on backends that
     only support fixed size stages; now setting any size will result
     in Clutter ignoring the request, like it happened in Clutter 0.6.

   o Add a method to ClutterBackend to retrieve the display size.

   o Fix clutter_sinx() for angles > CFX_2PI - CFX_ONE.

 * List of bugs fixed

   o #833 - ClutterEntry should clip glyphs rather than itself
   o #858 - Support for multiple devices (using XINPUT)
   o #879 - sampler2DRect used by test-shader.c doen't work with non-rect textures
   o #979 - Wrong call convension for SwapIntervalProc in win32 backend
   o #987 - clutter-event.c c99 variable declaration
   o #988 - cursor position wrong with multibyte invisible char
   o #989 - Add a search path for clutter script assets

Clutter 0.7.2 (23/06/2008), "Kedoke"
===============================================================================

 * List of changes between 0.7.0 and 0.7.2

   o ClutterTexture has a new :keep-aspect-ratio property; when it is set
     to TRUE the texture will return a preferred width maintaining the
     aspect ratio with the given height and a preferred height maintaining
     the aspect ratio with the given width. This allows to set the width or
     the height and have the texture automatically request the height or the
     width respectively while maintaining the aspect ratio of the original
     image.

   o Added XINPUT support on the X11 backends; this provides an initial
     support for multiple input devices. The API is X11-specific, and
     provides support for querying at run-time support for XINPUT, for
     getting a list of input devices and for getting the type of each
     input device. 
 
   o The 'fruity' backend also features multiple device support.

 * List of bugs fixed

   o #816 - clutter_actor_request_coords() should take a const box.
   o #836 - Optimize clutter_label_query_coords()
   o #905 - Paint cursor directly
   o #918 - Group doesn't clip if it's children are clipped
   o #953 - Actors are not hidden before unrealized or disposed
   o #960 - PangoContext creation code should not be duplicated
   o #970 - clutter_actor_get_paint_area confusion
   o #971 - Minor ClutterActor cleanups
   o #972 - Better parenting
   o #973 - unreffing ClutterScore may segfault
   o #981 - clutter_stage_read_pixels temprow fix
   o #982 - __COGL_GET_CONTEXT MS compiler issue
   o #984 - pango_clutter_render_layout() declared void

Clutter 0.7.0 (13/06/2008), "Booska"
===============================================================================

 * List of changes between 0.6 and 0.7.0

   o COGL, the underlying GL abstraction layer in Clutter, has been
     completely rewritten from the ground up. Its no longer a conceptual
     hack but a documented, fully featured library pretty much in its
     own right. COGL abstracts over Open GL, Open GL ES 1.1 and now
     OpenGL ES 2.0, providing a smart uniform API over these libraries
     with various utility features such as texture tiling abstractions,
     paths and primitive rendering, FBO, shaders, etc.

   o Clutter now provides an experimental backend for the Apple(tm)
     iPhone and iPod Touch families of products.

   o The Windows platform is now natively supported instead of
     relying on the SDL libraries. The win32 backend is still
     experimental.

   o The X11 based backends now feature support for Actors that wrap
     external X drawables (i.e the texture-from-pixmap extension and
     fallbacks)

   o Clutter now seamlessly supports multiple stages on the backends
     that allow this feature.

   o The custom Pango renderer has been completely rewritten, now using
     the more modern and maintained PangoCairo (instead of FT2), and avoids
     nasty subclassing hacks, supports smooth fast scaling of text, has
     many edge case issues fixed and it still is very efficient (using
     a texture glyph cache). It is even a little bit faster.

   o Better texture support, timeline improvements, ClutterLabel and
     ClutterEntry improvements, and container child properties are among
     the new features - too many to fit in the NEWS file.

 * List of bug fixes

   o #358 - "window resizing doesn't show scaled stage"
   o #425 - "COGL enhancements"
   o #439 - "timing related pong lockup due to timeline_rewind somtimes
            being ignored by timeline_timeout_func"
   o #450 - "ClutterScore API enhancements"
   o #641 - "add markers to timelines"
   o #666 - "Large font size leads to missing ""W"" and wrong ""J"" character"
   o #713 - "texture from pixmap"
   o #791 - "default actors to visible"
   o #800 - "CLUTTER_ALPHA_EXP_INC overflows"
   o #804 - "clutter_actor_get_opacity returns composited alpha"
   o #810 - "100 % CPU load with clutter_main()"
   o #815 - "Split up request
   o #816 - "clutter_actor_request_coords() should take a const box."
   o #822 - "Fix clutter_actor_lower()"
   o #823 - "Clean-up GLism's in clutter-core (below cogl)"
   o #824 - "ClutterEntry should handle its own key events"
   o #825 - "Removes GLisms from clutter-main.c"
   o #831 - "configure.ac missing osx flavour help"
   o #834 - "add ability to set anchor in json"
   o #836 - "Optimize clutter_label_query_coords()"
   o #839 - "Crash if put cursor over topmost pixel"
   o #840 - "Implement prepare-paint and finish-paint signals."
   o #848 - "Events dispatch doesn't work in GLX Xephyr"
   o #850 - "Impossible to set ClutterRectangle border opacity to a value
            different from the surface opacity"
   o #857 - "cogl_color doesn't work in PowerVR PC Viewer"
   o #860 - "ClutterAlpha leaks"
   o #864 - "Allow instantiating and subclassing of ClutterStage"
   o #871 - "Two problems with closing stages"
   o #873 - "clutter_x11/glx_texture_pixmap issues"
   o #874 - "Clipping on GL ES"
   o #875 - "Clutter Label Issues"
   o #881 - "Timelines require precise system timing"
   o #882 - "Allow child properties for containers implementing the
            ClutterContainer interface"
   o #884 - "Add clutter_alpha_set_closure"
   o #889 - "Error when building clutter-ivan with eglx"
   o #891 - "assertion failed when test-behave exits"
   o #892 - "Incorrect results using  rotation-[center|angle] properties"
   o #894 - "Artifacts with the pango renderer"
   o #900 - "clutter_actor_lower() and friends do not queue redraw"
   o #906 - "Implement timing of the events"
   o #908 - "Support transform from G_TYPE_INT to ClutterUnit"
   o #909 - "OSX: missing NULL pointer handling"
   o #910 - "OSX: missing memory pool"
   o #911 - "OSX: add multistage support"
   o #912 - "Invalid use of int* as parameter for glGetIntegerv"
   o #913 - "cogl fails to build on OSX"
   o #914 - "ClutterEntry is confused about characters vs. bytes"
   o #915 - "clutter_entry_set_max_length(-1) misbehaves"
   o #916 - "ClutterKeyEvent:unicode_value is ignored"
   o #919 - "Replacement pango renderer"
   o #927 - "Created ports for clutter
   o #928 - "Reparenting a child that itself is a container doesn't work"
   o #930 - "add support for quartz imagebackend"
   o #931 - "suspicious size allocation for pixel data"
   o #933 - ""X Error of failed request" when attempting to call
            clutter_actor_request_coords()"
   o #934 - "Update clutter-tutorial to build with clutter from svn trunk."
   o #947 - "Destroying a stage is messy"
   o #948 - "Remove texture rectangle support"
   o #950 - "AltGr not handled"
   o #951 - "Fix clutter_entry_init() in trunk"
   o #952 - "Fix test-textures in trunk"
   o #953 - "Actors are not hidden before unrealized or disposed"
   o #955 - "ClutterLabel is missing fallback resolution handling"
   o #959 - "Multiple minor improvements"
   o #960 - "PangoContext creation code should not be duplicated"
   o #961 - "Fails to build on OSX (query/request_coords is gone)"
   o #964 - """unrealized"" signal of ClutterActor wrongly named"

Clutter 0.6.0 (18/02/2008)
==========================

 * List of changes between 0.5.6 and 0.6.0

   o New documentation sections inside the API reference, describing
     the animation framework.

   o New API in ClutterActor for computing the actor's vertices in
     the plane of a given ancestor and accessors to query whether an
     actor is scaled or rotated

 * List of bug fixed

   o #613 - Extend point transformation API
   o #779 - Rounding error in ClutterBehaviourScale [Havoc Pennington]
   o #787 - tiled textures are broken
   o #796 - segmentation fault when setting label text

Clutter 0.5.6 (11/02/2008)
==========================

 * List of changes between 0.5.4 and 0.5.6

   o Reverted a last minute change in the depth sorting function of
     ClutterGroup.

   o Added the clutter_actor_move_anchor_point() family of functions,
     which will set the anchor point at the given coordinates while
     adjusting the actor postion so that the relative position of the
     actor toward its parent remains the same.

   o Provide a fallback for finding the Clutter alpha functions inside
     a UI definition for ClutterScript in case g_module_open() fails.

   o Add initial Frame Buffer Objects support in ClutterTexture; using
     FBOs, where supported by the hardware and drivers, it's possible to
     create a ClutterTexture from any actor.

 * List of bugs fixed

   o #386 - Stage is white unless a timeline is present
   o #439 - timing related pong lockup due to timeline rewind...
   o #440 - 1 pixel line flickering
   o #442 - Shader support
   o #451 - Improve font rendering quality (Pango)
   o #452 - Textures are shown with distortion on Solaris/SPARC
   o #526 - OSX backend
   o #533 - Clutter stage is not shown under some conditions
   o #540 - ClutterStage isn't always respecting requests to change size
   o #549 - Backend offscreen API is broken
   o #613 - Extend point transformation API
   o #635 - Fix buffer overflow in clutter_texture_get_pixbuf() [Gwenole
     Beauchesne]
   o #643 - Superfluous "filter-quality" setting in texture_upload_data()?
     [Gwenole Beauchesne]
   o #689 - Rotating actor through layers does not handle opacity
     correctly [Josh Stewart]
   o #710 - Make "box-blur" test shader work in some way [Gwenole Beauchesne]
   o #719 - X11 backend does not check window field in events [Havoc
     Pennington]
   o #724 - ClutterLabel reports wrong height when lines > 1
   o #749 - "reactive" property does not change
   o #751 - missing XSync in clutter-event-x11.c:xembed_set_info() [Havoc
     Pennington]
   o #756 - clutter_actor_get_abs_size returns bogus values
   o #769 - OSX backend fails to build
   o #770 - OSX: passing incompatible pointer type

Clutter 0.5.4 (25/01/2008)
==========================

 * List of changes between 0.5.2 and 0.5.4

   o A clutter-x11-<major>.<minor> pkg-config file is installed along
     with the clutter-<major>.<minor> and clutter-<backend>-<major>.<minor>
     ones, for libraries and applications depending on the X11-based
     backends (GLX and EGLX).

   o Textures are correctly unrealized before changing and freeing the
     main GL context.

   o It is now possible to block the automatic call to clutter_main_quit()
     when closing the stage window using the frame controls by connecting
     an handler for the ::event signal on the Clutter stage and checking
     for the CLUTTER_DELETE event type and returning TRUE. This allows
     the usage of other main loops with GLib reactors (like Python's twisted)
     with Clutter without triggering assertions by closing the stage window.

 * List of bugs fixed

   o #564 - Add more precise clutter_qdivx() [Gwenole Beauchesne]
   o #614 - ClutterActor API inconsistencies
   o #640 - ClutterTexture unrealized with no GL context
   o #654 - Under heavy load clutter sometimes drops the last frame of
     a timeline [Johan Bilien]
   o #672 - Event handling in osx backend is broken [Tommi Komulainen]
   o #684 - Improve test-scale by also using anchor point [Jaap A. Haitsma]
   o #695 - clutter-shader: Invalid format string for
     gssize [Tommi Komulainen]
   o #696 - cogl_get_proc_address requires GLX [Tommi Komulainen]
   o #709 - clutter_effect_scale inconsistent with clutter_actor_set_scale
   o #714 - clutter_event_copy for enter/leave event generates
     extra unref [Neil Roberts]
   o #715 - Type errors in test-shader
   o #720 - BehaviourScale not working in python after recent
     API change [Josh Stewart]

Clutter 0.5.2 (14/01/2008)
==========================

 * List of changes between 0.5.0 and 0.5.2

   o ClutterModelDefault has been renamed to ClutterListModel

   o ClutterModel now has vector-based variants for append, prepend and
     insert methods; these methods are useful for bindings

   o Add units-based variant for clutter_actor_move_by()

 * List of bugs fixed

   o #694 - Handle GLhandleARB on OS X [Tommi Komulainen]
   o #700 - Fix for clutter_effect_rotate() [Neil Roberts]

Clutter 0.5.0 (02/01/2008)
==========================

 * List of changes between 0.4.2 and 0.5.0

   o New event handling system: every actor with the CLUTTER_ACTOR_REACTIVE
     flag set will receive events from the underlying backend; the event
     propagation chain will be walked in two directions (from the actor to
     the top-level container and back) with the ability to block it in
     both phases.

   o ClutterShader, an abstraction over the programmable OpenGL pipeline.

   o ClutterScore, an object for controlling timelines; using a score
     instance is possible to start multiple timelines at once, or start
     a timeline after another has emitted the ::complete signal.

   o ClutterScript, an object for parsing a scene from an external file or
     a buffer; the scene is described using JSON (JavaScript Object Notation):
     every object is defined using its class and properties, and container
     objects can have their children defined as well. It is also possible
     do describe top-level objects such as timelines and behaviours, and to
     automatically connect signal handlers to signal names.

   o ClutterTimelines duration can now be set in milliseconds using the
     :duration property; the default framerate will be used to compute the
     actual duration in frames. The default framerate will be set by the
     backend, and can be overridden by the application.

   o ClutterTimelines direction can now be set using the :direction
     property; a timeline can be set to proceed forward or backward,
     and the direction can also be change while the timeline is still
     running.

   o New, experimental OSX backend.

   o Build environment for MS VisualStudio 2005.

   o ClutterModel, a generic list-based model object that can be used to
     implement actors following the Model-Viewer-Controller design pattern.
     Clutter provides a default implementation of ClutterModel, called
     ClutterModelDefault and using the GSequence data structure from GLib
     to optimize insertion and look up.

   o Add the ability to grab pointer and keyboard events: if an actor
     is set to have a grab it'll be the only one receiving events until
     it releases the grab.

   o Add the ability for an actor to receive the key focus; an actor
     with key focus will always receive the key events, even if it did
     not acquire the keyboard grab.

   o It is now possible to set the GL "fog" (also known as "depth cueing")
     effect on the ClutterStage; if the fog is enabled, actors farther
     away from the view point will fade into the stage background color.

   o Each actor now has an "anchor point", a point defined in the actor's
     coordinate space that will be used as the origin when scaling and
     rotation transformations.

   o Every pixel-based API has been doubled with a corresponding
     ClutterUnits-based function (postfixed with a '-u'), for instance:

       clutter_actor_set_position() - clutter_actor_set_positionu()
       clutter_actor_set_size()     - clutter_actor_set_sizeu()
       clutter_actor_set_depth()    - clutter_actor_set_depthu()

     This allows sub-pixel precision and device independence.

   o The ClutterLabel actor now tries very hard to provide a sane
     default size, if no bounding box has been requested; this fixes
     the :alignment property and allows the addition of the :justify
     property.

   o The SDL backend can now be compiled under win32 with MingW; this
     backend is still marked as experimental.

   o The OSX backend allows the compilation of Clutter under OS X; this
     backend is experimental.

 * List of bugs fixed

   o #423 - All actors should emit events rather than just the stage
   o #424 - Interface definition files
   o #443 - ClutterModel implementation
   o #480 - Uninitialized variable in
     path_alpha_to_position() [Gwenole Beauchesne]
   o #511 - clutter_stage_get_actor_at_pos problem
   o #512 - clutter window moves when stage actor is scaled
   o #518 - XEMBED not supported in eglx backend
   o #519 - Should have an Atom cache initialized on start up
   o #520 - Delete after multibyte unicode chars in
     ClutterEntry [Tommi Komulainen]
   o #522 - Array out of bounds indexing [Tommi Komulainen]
   o #523 - cogl portability fixes [Tommi Komulainen]
   o #524 - missing config.h includes [Tommi Komulainen]
   o #525 - Redundant include in cogl/gl [Tommi Komulainen]
   o #531 - Extraneous "new-frame" signal generated
   o #532 - clutter_actor_set_scale_with_gravityx()
     precision [Gwenole Beauchesne]
   o #544 - clutter_color_to_hlsx is broken [Neil Roberts]
   o #546 - ClutterStageState doesn't make sense
   o #550 - Wanted: Set Actor's position based on center or other
     edges/corners of quadrangle
   o #557 - ClutterScript should support complex properties for third
     party classes
   o #558 - Unmerge UI definitions
   o #566 - ClutterEntry does not scroll the text to the
     right [Gwenole Beauchesne]
   o #577 - Inconsistent naming of behaviour properties
   o #580 - Fix call to cogl_enable() [Gwenole Beauchesne]
   o #582 - api naming inconsistence between
            clutter_behaviour_path_append_knots and
            clutter_behaviour_bspline_append
   o #584 - Typo on clutter_effect_rotate_x documentation page
   o #592 - Fix build on trunk [Gwenole Beauchesne]
   o #596 - ClutterTexture tileing logic is a little borked 
   o #597 - ClutterGroups not pickable
   o #600 - fix ClutterLabel layout computing when no box has been set
   o #604 - Color param for Label constructor should be
     const [Jonathon Jongsma]
   o #606 - enable depth test in GL
   o #608 - Control motion events frequency
   o #614 - ClutterActor API inconsistencies
   o #616 - ClutterTexture doesn't respect width set from clutterscript
   o #617 - ClutterEffect Improvements
   o #618 - ClutterScript name/id confusion
   o #619 - clutter_behavior_rotate angle properties should accept
     negative values
   o #628 - clutter_actor_rotate_x() is a setter, not a modifier
   o #629 - There is no clutter_actor_get_position()
   o #634 - clutter_behaviour_path_new() documentation unclear
   o #637 - add depth cueing support to the stage
   o #645 - Fix crash in clutter_label_new_full() [Gwenole Beauchesne]
   o #647 - Cannot hide the stage
   o #648 - Hidden fullscreen stage doesn't come back as fullscreen
   o #652 - reference needed on actor being source of last motion_event
   o #661 - clutter_actor_set_width() documentation is vague
   o #662 - clutter_actor_set_opacity() documentation doesn't describe values
   o #665 - ClutterBehaviourEllipse tilts are broken
   o #670 - Fix clutter_container_lower_child() [Gwenole Beauchesne]
   o #673 - ClutterActor "captured-events" signal documentation wrong
   o #674 - ClutterActor::get_depth() and set_depth() vfuncs not
     used [Murray Cumming]
   o #675 - update subregions of cluttertextures
   o #678 - ClutterLabel size allocation still bogus

Clutter 0.4.0 (07/08/2007)
========================

 * List of changes between 0.3.1 and 0.4.0

   o Many documentation additions and improvements.

   o Display DPI now honours on backends its can be queried.

   o Various big endian related fixes.

   o ClutterBehaviourEllipse and ClutterBehaviourRotate API and
   internals improvements.

   o Add basic tslib support to eglnative backend (for touchscreen events)

   o clutter_stage_get_actor_at_pos should now work on 16bpp displays.

   o New ClutterEffect rotation calls.

   o Allowing user resizing of the stage now optional.
    (implemented by glx backend only currently)

   o ClutterEntry UTF8 fixes and improved automatic initial sizing.

   o Make ClutterActor GInitiallyUnowned.

   o New ClutterBox API: each box has now a colour and a margin (distance
     between the inner-border and the children); plus, each packed child
     has a padding. Margins and paddings are expressed in ClutterUnits,
     to ease the transition to the device independent units. You can use
     clutter_box_set_default_padding() if you want the same padding for
     each child.

 * List of bug fixed
   o #390 - clutter_stage_get_actor_at_pos broken on 16bpp displays.
   o #398 - inconsistent type for return value of clutter_event_get_state
   o #403 - Critical error when removing texture actor
   o #404 - Solaris build error with OpenGL, missing
            GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB and GL_TEXTURE_RECTANGLE_ARB
   o #409 - depth mismatch between visual (32) and window (24)
   o #407 - metadata-available signal #ifdef'ed out
   o #413 - Clutter compile error with Sun Studio C compiler
   o #426 - typo in sdl_backend
   o #414 - ClutterEntry invisible if size not set
   o #434 - clutter_color_from_pixel incorrectly interprets alpha value
   o #435 - clutter_color_subtract does the opposite of its documentation
   o #436 - clutter-behaviour-depth always perform "from deep to shallow"

Clutter 0.3.1 (06/07/2007)
========================

 * List of changes between 0.3 and 0.3.1
   o EGL. There are now 2 experimental EGL backends;
     - 'eglx', the former EGL on X11 implementation (now renamed)
     - 'eglnative', a new EGL 'native' backend which supporting non
       X11 EGL implementations (i.e framebuffer).

   o ClutterGroup now returns correct size when a child is removed.

   o Missing redhand.png added to distro tarball (fixing tests that require
     it)

   o Fix picking in ClutterBox

   o Rectangle border creation fixed.

   o Fix overflow in Exponential Alpha funcs.

   o Many API documentation fixes and improvements.

   o ClutterEffect cleanups.

   o ClutterEntry cleanups.

   o Check for versioned XFixes library (GLX backend).

   o More X error traps in GLX backend.

Clutter 0.3 (29/06/2007)
========================

 * List of changes between 0.2.3 and 0.3
   o Clutter now supports both switchable windowing system and GL backends.
     Window systems supported include GLX, EGL and SDL.

     GL support includes OpenGL 1.2+ and OpenGL ES 1.1. This is
     provided by a small basic abstraction layer 'cogl.h'. Cogl is not
     yet documented - usage external to Clutter is not yet advised.

     Backends may provide specific command line options.

     Notes;

     GLX
     ---
     The GLX backend is built by default and is currently the most
     developed, supported and featured windowing system backend. Only
     OpenGL is supported via GLX.

     SDL
     ---
     Clutter has experimental support for using SDL. Open GL is supported as
     is OpenGL ES via Dogles (very experimental).

     EGL
     ---
     Clutter has experimental support for using EGL. Only Open GL ES
     is supported by EGL.

     EGL support assumes an EGL implementation running atop X Windows.

     Open GL ES.
     -----------

     Clutter now has experimental support for Open GL ES.
     Current known issues;

     + Unrealising a ClutterTexture will not move pixel data from video
       into system memory but simply destroy it.
     + BGRA, YUV Texture data not currently supported.

     (Use the clutter_feature API to probe for above at runtime)

     Open Source ES implementations this has been tested against
     include `Vincent' and `dgles'.  Support for commerical
     implementations may require modifications to the configure.ac
     script.

     vincent: http://ogl-es.sourceforge.net/
              (Also see: http://svn.o-hand.com/repos/misc/trunk/ogles/ )

     dgles: http://developer.hybrid.fi/dgles/index.html

   o New ClutterEffect class provides a simplified (and thus less flexible)
     API wrapping around behaviours, alphas and timelines.
   o New Behaviours - bspline, ellipsis, rotation.
   o New built in Alpha functions;
      CLUTTER_ALPHA_SINE_INC
      CLUTTER_ALPHA_SINE_DEC
      CLUTTER_ALPHA_SINE_HALF
      CLUTTER_ALPHA_SQUARE
      CLUTTER_ALPHA_SMOOTHSTEP_INC
      CLUTTER_ALPHA_SMOOTHSTEP_DEC
      CLUTTER_ALPHA_EXP_INC
      CLUTTER_ALPHA_EXP_DEC
   o New Actors and interfaces
     + ClutterLayout, for writing extended layout support in actors
     + ClutterContainer, for generic container actors
     + ClutterBox, ClutterVBox and ClutterHBox layout actors.
     + ClutterEntry, text entry actor
   o ClutterTexture now handles BGRA, YUV and premultiplied alpha data.
   o All internal math now fixed point based.
   o Clutter now has it own internal event queue.
   o ClutterStage new features;
     + Title property for naming in window decorations.
     + Perspective setting - The stages perspective can now be modified.
   o New Clutter_actor *project API calls allow for querying of tranformed
     actor vertices and points.
   o New Clutter Feature checks.
   o Initial ClutterUnit implementation for device independant positioning.
 * List of Bugs fixed
   o Various issues with very poor performance and Intel drivers.
   o #138 Fix typo in x rotation transform.

Clutter 0.2.3 (2007-04-11)
==========================

 * List of changed between 0.2.2 and 0.2.3
   o Fixes to tile based textures and again clutter_texture_get_pixbuf(). [Matthew]
   o Implement Gravity for ClutterScaleBehaviour. [Matthew, Rob]

Clutter 0.2.2 (2007-03-22)
==========================

 * List of changed between 0.2.1 and 0.2.2
   o Addition of basic XEMBED support for clutter stage. [Matthew]
   o Fixes to clutter_texture_get_pixbuf(). [Matthew]
   o Export clutter_group_remove_all and add associated fixes. [Matthew]

Clutter 0.2.1 (2007-02-07)
==========================

 * List of changed between 0.2.0 and 0.2.1
   o Add even faster double to integer (and back) conversion
     functions. [Tomas]
   o Fix some errors in the fixed point sine waveform
     function. [Tomas]
   o Use fixed point math in the Pango renderer. [Tomas]
   o Improve the GL version check. [Matthew]
   o Add a square waveform function. [Emmanuele]
 * List of bugs fixed
   o #215 - macro CLUTTER_MARK() not disabled for non-debug builds

Clutter 0.2 (18-01-2007)
========================

 * List of changes between 0.2 and 0.1
   o Bindings, GStreamer and GTK+ dependencies moved out of tree:
     now Clutter strictly depends on Xlibs, OpenGL and GdkPixbuf only.
   o Actors now have an initial floating reference; this means you
     don't have to explicitely unref them: every memory an actor
     allocates will be freed when the group containing the actor will
     be destroyed.
   o Add basic run-time detection of GL features.
     + Use GL_TEXTURE_RECTANGLE_ARB if available.
     + Attempt to set up sync to vblank (set CLUTTER_VBLANK=none to disable)
   o Add API for behaviours. A ClutterBehaviour is an object which
     drives a set of actors using one or more properties depending
     on the value of an "alpha" function.
     + Provide simple behaviours: ClutterBehaviourOpacity,
       ClutterBehaviourPath and ClutterBehaviourScale.
     + Provide simple alpha functions for ramps and sine waveforms.
   o Add fixed point API for embedded platforms with no FPU.
   o Add support for command line switches to Clutter, like debug
     flags and abort on warnings; also allow application to hook up
     into the initialisation sequence to add their own command line
     switches.
   o Add Pango GL renderer for Clutter, and use it to render text
     inside the ClutterLabel actor; this decrease texture memory
     usage.
   o Redo Clutter Label widget, using the new Pango renderer.
   o Clutter Textures do not store local pixbuf copy (of texture).
   o Redo group and actor scale/sizing API and functionality.
   o Add memory management API for ClutterColor, and string parsing.
 * List of bug fixed
   o #199 - Little group handling fix?
   o #198 - Detect NPOT support on more systems
   o #197 - Tiled textures are broken
   o #196 - Rebuild the examples when the library changes
   o #156 - clutter_actor_set_position not using the absolute size
   o #155 - Don't test for XInitThreads [Bastien Nocera]
   o #154 - Key presses not working in super-oh example [Bastien Nocera]
   o #152 - Misc fixes [Bastien Nocera]
   o #143 - Faulty ref-counting in clutter_group_remove [Frederic Riss]
   o #141 - Copy-pasto in clutter_media_set_volume [Frederic Riss]
   o #101 - No package 'x11' found -- wrong configure [Tomasz Torcz]
   o  #98 - Enabling trails in super-oh crashes

Clutter 0.1 (22/06/2006)
========================

 * First 'official' release, expect bugs aplenty.
 * Contains:
   o Hopefully enough functionality to build things.
   o Basic gstreamer 0.10 video playback support.
   o Fairly stable API, though in no way totally stable.
     Expect CHANGES in future versions.
   o Some simple examples ( also see OPT ).
   o An experimental GTK-Clutter widget.
   o Fairly complete Python bindings.
   o Non complete but hopefully useful API documentation.
 * If you want to help out see the TODO file.
