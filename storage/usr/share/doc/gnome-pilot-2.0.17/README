Gnome-Pilot
-----------

This is a ultra short thingie about Gnome-Pilot.

Gnome-Pilot is a package with a daemon (gpilotd) that monitor for
pilot connects on one or more devices (cradles/XCopilots/xxx). It has
an API for creating conduits as well as a couple of default conduits,
including one for backing up files, and one for installing files.

Other packages exist that provide additional conduits, most notably
gnome-pilot-conduits, and the Evolution mail/calendar/memo PIM
application suite.

Requirements
------------

gnome-pilot requires the pilot-link library and header files.  See
http://www.pilot-link.org for newest .tar.gz of pilot-link.

To compile the latest development version in cvs of this software, you may
need to get pilot-link from cvs:

1) pilot-link
cvs -d :pserver:anonymous@cvs.gnu-designs.com:/cvs/pilot-link login
The password is just <ENTER>.
cvs -d :pserver:anonymous@cvs.gnu-designs.com:/cvs/pilot-link co pilot-link
./configure --prefix=<pilot-link-prefix>
make
make install

You want to disable some of the languages to get it to build, 
./configure --help  for the appropriate options.

Compiling from CVS
------------------

As other gnome software, run autogen.sh with appropriate flags and
then "make".

For users with RedHat systems, who have used precompiled GNOME rpms, you'll
probably want to run autogen.sh like this
 $ ./autogen.sh --prefix=`gnome-config --prefix` --sysconfdir=`gnome-config --sysconfdir`
Or use the build.sh script in the gnome-pilot dir. 

* NOTE: Currently theres a buildorder bug betweet libgpilotdCM and
* gpilotd. If you get a compiletime error in libgpilotdCM that file
* "gpilotd/gnome-pilot-conduit.h" is missing, do a make -k and then
* make again. 

Compiling from tar.gz
---------------------

There should be a configure script included, run with appropriate
flags and then "make". 

Again, you might want to add "--prefix=`gnome-config --prefix`"
and "--sysconfdir=`gnome-config --sysconfdir`" to the configure flags.

* NOTE: if you do a make clean or maintainer-clean, you may delete
* files generated by gob. If you do not have gob installed, you should
* reunpack the tarball to get the files.

Installing
----------

If you installed from a rpm, you're already past this, if from source;
after a successfull make, run "make install".

Setting up
----------

You can start gnome-pilot by starting the PilotSync applet found under
utils (or pilot_applet from commandline). If it's a first time
install, this will fire up a druid that will help you through the
installation.

Later configuration can be done by running gnomecc (the
control-center), and under Peripherals->PalmPilot choose "Pilot Link".



Advanced:SyncId:

Your machine is assigned a random SyncId number, this number isn't
important, it just has to be unique for each machine that you sync
with (so no, it doesn't have to be a unique number in the world).

Choose a device, typically /dev/pilot, which is a link to
eg. /dev/ttyS0 or another serial port, can also be a device used by
XCopilot for testing.

Click "Try", the "get from pilot" and "send to pilot" buttons in the
pilot info box should now activate, plus gpilotd is restarted with the
new device. 

UserId:

If you have used your pilot with windows software, the pilot will
probably already have a ID number and a name. If, click "get from
pilot" to retrieve. A box should pop up, asking you to press do, do
this. Note "Pilot Name" is a symbolic name to reference your pilot,
leave it as "My Pilot" or whatever, its like the name of your machine.

If you haven't used the pilot under windows, you can use the default
settings, which are your uid as Pilot ID and your name as in
/etc/passwd as user name. Clicking "send to pilot" stores the settings
in the pilot.

Should you try "get from pilot", and an ID of 0 is the result, please
enter another value, as ID=0 carries a special meaning, such as
new/reset pilot. The value is not important, it does not have to be
your uid.

XCopilot testing
----------------

XCopilot is a pilot emulator for X Windows. It can be found at
http://xcopilot.cuspy.com/. To use XCopilot, you'll need a copy of
your pilots rom image. In the pilot-link package, there is a small
utility called getrom, and a Pilot program to extract the rom.

Run XCopilot with the -serial option, it will write something like
"Serial I/O on /dev/ptyqe". Now set gpilotd to use /dev/ttyqe for
device (or "ln -sf /dev/ttyqe /dev/copilot"). You can now sync your
XCopilot, great for testing/debugging.

Conduit configuring
-------------------

You can now configure the conduits. Each capplet should at least show
a "Enabled" button. If the conduit has a combobutton with sync options,
you're often well off by just choosing the "Synchronize" option.

Something is wrong...
---------------------

Report bugs using the bugzilla at http://bugzilla.gnome.org, product
"gnome-pilot".

To get additional info for the bugreport, do a 

	$ killall -9 gpilotd;rm ~/.gpilotd.pid

This should really kill gpilotd (NOTE: killall may differ from unix to
unix, be cautious if not using linux). Now run gpilotd from a console,
and capture the output, great help for the author. 

Now retry the capplet/applets/whatever, and at least now the gpilotd
output will be visible. Please include the output and your
configuration files (in ~/.gnome/gnome-pilot.d) in the bug report.

Also, check the wiki page at http://live.gnome.org/GnomePilot

Even more important, if you have problems, check the gnome-pilot
mailing list, address and subscription info can be found at
http://mail.gnome.org/mailman/listinfo/gnome-pilot-list
Asking for help on this list rather then mailing the authors list may
be a quicker way of getting a response.

Thats it for now...

Eskil - 2001.
