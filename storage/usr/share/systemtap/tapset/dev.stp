// Device tapset
// Copyright (C) 2008, 2010 Red Hat Corp.
//
// This file is part of systemtap, and is free software.  You can
// redistribute it and/or modify it under the terms of the GNU General
// Public License (GPL); either version 2, or (at your option) any
// later version.

%{
#include <linux/kdev_t.h>
%}

function MAJOR:long(dev:long)
%{ /* pure */
    THIS->__retvalue = MAJOR(THIS->dev);
%}


function MINOR:long(dev:long)
%{ /* pure */
    THIS->__retvalue = MINOR(THIS->dev);
%}


function MKDEV:long(major:long, minor:long)
%{ /* pure */
    THIS->__retvalue = MKDEV(THIS->major,THIS->minor);
%}

function usrdev2kerndev:long(dev:long)
%{ /* pure */
    THIS->__retvalue = new_decode_dev(THIS->dev);
%}

function bdevname:string(bdev:long)
{
	if (bdev == 0)
		return "N/A"

	hd = @cast(bdev, "block_device")->bd_disk

	if (@cast(bdev, "block_device")->bd_part)
		partno = @cast(bdev, "block_device")->bd_part->partno
	else
		partno = MINOR(@cast(bdev, "block_device")->bd_dev)
			- @cast(bdev, "block_device")->bd_disk->first_minor;

	if (!partno)
		return kernel_string(@cast(hd, "gendisk")->disk_name)
	disk_name = kernel_string(@cast(hd, "gendisk")->disk_name)
	if (isdigit(substr(disk_name, strlen(disk_name) - 1, 1)))
		return sprintf("%sp%d", disk_name, partno)
	else
		return sprintf("%s%d", disk_name, partno)
}
