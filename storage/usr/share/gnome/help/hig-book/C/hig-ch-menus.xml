<?xml version="1.0" encoding="UTF-8"?>
  <chapter id="menus">
    <title>Menus</title>

<remark> Tear| off menus? (These are controlled by gconf in 2.0, so nothing app developer needs to do?)</remark>
<remark> Menu bar position </remark>
<remark> Menu bar hiding </remark>

    <para>Menus present the whole range of an application's commands to the user, and often a subset of its preferences.  When designing a new application, place common menu items in the same locations as they appear in other applications, as this makes it much easier for the user to learn.</para>
  
    <para>In most applications, only primary windows should have a menubar. <link linkend="windows-utility">Utility windows</link> and <link linkend="windows-dialog">dialogs</link> should be simple enough that their functions can be provided by controls such as buttons placed within the window.</para>

    <para>Occasionally, however, a utility window or dialog is so complex that there would be too many such controls. In this case, you may use a menubar provided that:</para>

    <itemizedlist>
      <listitem><para>the menus follow the same standard layout as described in <xref linkend="menus-standard" /></para></listitem>
      <listitem><para>the window does not include a dialog button area or any buttons that dismiss it, such as <guibutton>OK</guibutton>, <guibutton>Close</guibutton> or <guibutton>Cancel</guibutton>.  Place these commands on the <guimenu>File</guimenu> menu or equivalent instead.</para></listitem>
    </itemizedlist>

	<itemizedlist><title>Guidelines</title>
      <listitem><para>Label menu items with verbs for commands and adjectives for settings, according to the rules in <xref linkend="layout-capitalization"/>.</para></listitem>

	<listitem><para>Make a menu item insensitive when its command is unavailable. For example, the <menuchoice><guimenu>Edit</guimenu> <guimenuitem>Copy</guimenuitem></menuchoice> item, which issues the command to copy selected data to the clipboard, should not be active when there is no data selected.</para></listitem>

    <listitem><para>Provide an access key for every menu item.  You may use the same access key on different menus in your application, but avoid duplicating access keys on the same menu.  Note that unlike other controls, once a menu is displayed, its access keys may be used by just typing the letter; it is not necessary to press the <keysym>Alt</keysym> key at the same time.</para></listitem>

      <listitem><para>Design your menu structure to avoid more than one level of submenus.  Deep menu hierarchies are harder to memorize and physically difficult to navigate.</para></listitem>

	<listitem><para>Do not have menus with less than three items on them (except the standard <guimenu>Help</guimenu> menu, which has only two items by default).  If you have a submenu with fewer than three items on it, move them into their parent menu.  If you have a top-level menu with fewer than three items on it, find another suitable menu to add them to, or find suitable items from other menus to add to it.</para></listitem>

	</itemizedlist>


	<sect1 id="menus-menubar">
	  <title>The Menubar</title>

	<figure id="example-menu-bar">
	<title>A typical menubar</title>
	<mediaobject>
	<imageobject><imagedata fileref="images/menus-application.png" width="454" depth="27" format="PNG"/></imageobject>
	<imageobject><imagedata fileref="images/menus-application.eps" format="EPS"/></imageobject>
	<textobject><phrase>A typical application menubar, showing File, Edit, View, Insert, Format, Go, Bookmarks, Tools, Windows and Help menus</phrase></textobject>
	</mediaobject>
      </figure>

	  <para>The menubar provides a number of drop-down menus.  Only the menu titles are displayed, until the user clicks on one of them.</para>

	<para>The menubar is normally visible at all times and is always accessible from the keyboard, so make all the commands available in your application available on the menubar.</para>

	<note><title>Full screen mode</title><para>When your application is running in full screen mode, hide the menubar by default.  However, make its menus and items accessible from the keyboard as usual. Pressing <keycap>ESC</keycap> should cause the application to leave full screen mode. A <guibutton>Leave Fullscreen</guibutton> button should be placed in the upper right hand corner of the window. The button should disappear after the mouse is unused for 5 seconds, and should appear again when the moused is moved. Alternately, in applications where the mouse is used frequently in full screen mode, all but a two pixel row of the button may be slid off the top of the screen. The button should slide back on the screen when the mouse moves near it.</para></note>

	<itemizedlist><title>Guidelines</title>

		<listitem><para>Provide a menubar in each primary application window, containing at least a <guimenu>File</guimenu> and a <guimenu>Help</guimenu> menu.</para></listitem>

      		<listitem><para>Organize menu titles in the standard order— see <xref linkend="menus-standard"/></para></listitem>

		 <listitem><para>Do not disable menu titles. Allow the user to explore the menu, even though there might be no available items on it at that time.</para></listitem>

		  <listitem><para>Menu titles on a menubar are single words with their first letter capitalized.  Do not use spaces in menu titles, as this makes them easily-mistaken for two separate menu titles.  Do not use compound words (such as <guimenu>WindowOptions</guimenu>) or hyphens (such as <guimenu>Window-Options</guimenu>) to circumvent this guideline.</para></listitem>

		<listitem><para>Do not provide a mechanism for hiding the menubar, as this may be activated accidentally. Some users will not be able to figure out how to get the menu bar back in this case.</para></listitem>
	
	</itemizedlist>

	</sect1>

   <sect1 id="menus-types">
      <title>Types of Menu</title>


	<sect2 id="menu-type-drop-down">
	  <title>Drop-down Menus</title>
	<figure id="drop-down-menu">
	<title>A typical drop-down menu</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-dropdown.png" format="PNG" width="166" depth="300"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-dropdown.eps" format="EPS"/></imageobject>
	  <textobject><phrase>Screenshot of a typical drop-down menu</phrase></textobject>
	</mediaobject>
      </figure>

	  <para>A drop-down menu appears when the user clicks on its title in a menubar, or focuses the title and presses <keycap>Return</keycap>.</para>

<remark> CB-Ed/Fig: Define "post," as no-brainer-ish as it may seem, and also add a figure to show what it means.  A simple menu being shown at the user clicking on a menu title on a menubar, or "posted," makes sense.  </remark>
<remark> CFB: I've just reworded everything to avoid the use of "post" </remark>

    <itemizedlist><title>Guidelines</title>

	<listitem><para>Only place items on a menu that relate to that menu's title.</para></listitem>

      <listitem><para>Organize menu items in the standard order— see <xref linkend="menus-standard" />.  For application-specific items where there is no standard order, arrange in numerical or other logical order (for example, <guimenuitem>50%</guimenuitem>, <guimenuitem>100%</guimenuitem>, <guimenuitem>200%</guimenuitem>), task order (for example, <guimenuitem>Compile</guimenuitem> followed by <guimenuitem>Debug</guimenuitem>) or by expected frequency of use.</para></listitem>

      <listitem><para>Limit top-level menus to a maximum of about 15 items. If you have any more items than this, consider moving a functionally-related subset of the items into a submenu or a new top-level menu.</para></listitem>

      <listitem><para>Do not add or remove individual menu items while the application is running, make them insensitive instead. Entire menus may be added or removed from the menubar at runtime, however, for example in component-based applications.</para></listitem>

      <listitem><para>Immediately update menu items that are edited directly or indirectly by the user, such as those on the <guisubmenu>Open Recent</guisubmenu> submenu and the <guimenu>Bookmarks</guimenu> menu.</para></listitem>


    </itemizedlist>
  <remark> CB-Ed: As in JLFDG AT p. 33, perhaps provide a table of common access keys, or "mnemonics." </remark>
  <remark> CFB: the keyboard navigation chapter already does so </remark>


	</sect2>

	<sect2 id="menu-type-submenu">
	  <title>Submenus</title>

	<figure id="submenu">
	<title>A drop-down menu with a submenu</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-submenu.png" format="PNG" width="352" depth="264"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-submenu.eps" format="EPS"/></imageobject>
	  <textobject><phrase>Screenshot of a drop-down menu with a submenu</phrase></textobject>
	</mediaobject>
      </figure>

	  <para>A submenu appears when the user clicks its title, which is indicated by a small arrow symbol beside its label.  You can save space on long menus by grouping related commands onto a single submenu.</para>

	<itemizedlist><title>Guidelines</title>

		<listitem><para>Use submenus sparingly, as they are physically difficult to navigate and make it harder to find and reach the items they contain.</para></listitem>

		<listitem><para>Do not create submenus with fewer than three items, unless the items are added dynamically (for example the <menuchoice><guimenu>File</guimenu><guimenuitem>New Tab</guimenuitem></menuchoice> submenu in <application>gnome-terminal</application>).</para></listitem>

		<listitem><para>Do not nest submenus within submenus.  More than two levels of hierarchy are difficult to memorize and navigate.</para></listitem>
		
	</itemizedlist>

<remark> CB-Ed/Fig: In JLFDG AT, p. 41, the Most Recently Used (MRU) list is recommended to contain no more than 10 items. Add a figure here, with callouts to point out this rule, among others, if any are developed.  </remark> 

	</sect2>

	<sect2 id="menu-type-popup">
	  <title>Popup Menus</title>

	<figure id="popup-menu">
	<title>A popup menu for a mail folder</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-popup.png" format="PNG" width="251" depth="233"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-popup.eps" format="EPS"/></imageobject>
	  <textobject><phrase>Screenshot of a popup menu for a mail folder, listing the actions that can be performed on that folder</phrase></textobject>
	</mediaobject>
      </figure>

	<para>Popup menus provide shortcuts to those menu items that are applicable only to the currently selected object.  As such, they are sometimes known as &quot;context menus&quot; or &quot;shortcut menus&quot;.  A popup menu is shown when the user right-clicks on an object, or selects the object and presses <keycombo><keycap>Shift</keycap><keycap>F10</keycap></keycombo>.</para>

	<para>Be aware that popup menus are used primarily by intermediate and advanced users.  Even some users who have used graphical desktops for many years do not know about popup menus until somebody shows them.</para>

	<itemizedlist><title>Guidelines</title>
		<listitem><para>Provide a popup menu for every object, selectable part, and text input target such as entry fields.</para></listitem>
		<listitem><para>Provide an access key for each item.  However, to enhance their spatial efficiency and readability, do not show keyboard shortcuts in popup menus.</para></listitem>
		
		<listitem><para>Since the user may not be aware of their presence, do not provide functions that are only accessible from popup menus unless you are confident that your target users will know how to use popup menus.</para>
		<remark>But see http://bugzilla.mozilla.org/show_bug.cgi?id=34357</remark>
		</listitem>

		<listitem><para>Order items on a popup menu as follows:</para>
		<itemizedlist>
			<listitem><para>the double-click action for object, when it exists</para></listitem>
			<listitem><para>other commands and settings in expected frequency-of-use order</para></listitem>
			<listitem><para>transfer commands such as <command>Cut</command>, <command>Copy</command>, and <command>Paste</command></para></listitem>
			<listitem><para><guimenuitem>Input Methods</guimenuitem>, where applicable. <guimenuitem>Input Methods</guimenuitem> is provided by GTK+ for supporting alternatives to the keyboard for input (such as used for Japanese, Chinese, and some accessibility technologies).</para></listitem>
		</itemizedlist>
		</listitem>

	 	<listitem><para>Popup menus need to be as simple as possible to maximize their efficiency.  Do not place more than about ten items on a popup menu, and do avoid submenus.</para></listitem>

	</itemizedlist>

<remark> CB-Ed: In the previous note, define the Input Methods menu and why it is an exception, for scalability reasons (other items may fall into the same category).  It also sounds like a pretty low-level command; should this be exposed to the user? </remark>
<remark> SN-Ed: No, it should not be exposed to the user. I'm not really sure what possessed the GTK guys to put this in every right click menu for text boxes. I suppose in this case having it be a submenu is good (if they insist on it existing) because it makes it maximally invisible </remark>
<remark> GJM: To make this worse, they've added "Insert Unicode control character".</remark>
	</sect2>
	</sect1>

	<sect1 id="menus-design">
	<title>Designing a Menu</title>

	<sect2 id="menu-grouping">
	  <title>Grouping Menu Items</title>

	<figure id="menu-separators">
	<title>Items grouped on a menu with separators</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-dropdown.png" format="PNG" width="166" depth="300"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-dropdown.eps" format="EPS"/></imageobject>
	  <textobject><phrase>Screenshot of a menu divided into five logical groups with menu separators</phrase></textobject>
	</mediaobject>
      </figure>

	  <para>Menu separators are the horizontal dividing lines that visually separate groups of related items on a drop-down menu, submenu, or popup menu.  For example, the separators in <xref linkend="menu-separators"/> divide the menu into five functionally-related groups.  Good use of separators helps to &quot;chunk&quot; the information on a menu and make it easier to scan and memorize.</para>
	  
	  <itemizedlist><title>Guidelines</title>

	    <listitem><para>The best size for a group is around 2-5 items.  Single-item groups are best placed at the top or bottom of a menu, otherwise try to group them with other single items of the same type on the same menu.</para></listitem>

	    <listitem><para>Order items within a group logically, numerically, in task order or by expected frequency of use, as appropriate.</para></listitem>

	    <listitem><para>Only place one type of menu item in each group— <link linkend="menu-item-type-command">command</link>, <link linkend="menu-item-type-mutable">mutable</link>, <link linkend="menu-item-type-check">check box</link> or <link linkend="menu-item-type-radio">radio button</link>.  For example, do not place commands (such as <menuchoice><guimenu>View</guimenu><guimenuitem>Reload</guimenuitem></menuchoice>) and settings (such as. <menuchoice><guimenu>View</guimenu><guimenuitem>Toolbar</guimenuitem></menuchoice>) in the same group.</para></listitem>

	    </itemizedlist>	  
	</sect2>

	<sect2 id="menu-item-types">
	<title>Types of menu item</title>
	
	<sect3 id="menu-item-type-command">
	  <title>Command Items</title>

	<figure id="command-items-figure"><title>A group of command items on a menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-command-group.png" format="PNG" width="253" depth="105"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-command-group.eps" format="EPS"/></imageobject>
	    <textobject><phrase>Screenshot of a group on a menu containing only command items: Save, Save As, and Revert</phrase></textobject>
	  </mediaobject>
	</figure>

	  <para>Command items are menu items that initiate a command or perform an action, such as <guimenuitem>Save</guimenuitem>, <guimenuitem>Print</guimenuitem> or <guimenuitem>Quit</guimenuitem>. They may act on the currently active document in a document based application, or on the application itself.</para>

	<itemizedlist><title>Guidelines</title>

		<listitem><para>Provide a keyboard shortcut for standard or frequently used command items.  See <xref linkend="shortcuts"/> for more information on choosing shortcut keys.</para></listitem>
	  <!-- <para>Shortcuts consist of the <keysym>Control</keysym> key and an alphanumeric key, or of one of the keys <keysym>F1</keysym>-<keysym>F12</keysym>, <keysym>Insert</keysym>, <keysym>Delete</keysym>, <keysym>Home</keysym>, <keysym>End</keysym>, <keysym>Page Up</keysym> or <keysym>Page Down</keysym>. The <keysym>Shift</keysym> key may be used as an additional modifier for commands which are related to or the opposite of the command accessed without the <keysym>Shift</keysym> key.  See <xref linkend="shortcuts"/> for more information.</para> -->
	  
	<listitem><para>Do not remove command items from the menu when they are unavailable, make them insensitive instead.  This allows the user to infer what functionality the application provides even if it is not currently available, and keeping the menu structure static makes it easier to memorize.</para></listitem>

	  <listitem><para>Label the menu item with a trailing ellipsis ("...")  only if the command requires further input from the user before it can be performed. Do not add an ellipsis to items that only present a confirmation dialog (such as <guimenuitem>Delete</guimenuitem>), or that do not <emphasis>require</emphasis> further input (such as <guimenuitem>Properties</guimenuitem>, <guimenuitem>Preferences</guimenuitem> or <guimenuitem>About</guimenuitem>).</para></listitem>

	</itemizedlist>
	<remark>
	  Should we reserve <keysym>Alt</keysym> as a modifier for window manager operations? Should we state this here?
	</remark>


<remark> CB-Ed/Fig: Figure would be nice here. </remark>
	</sect3>

	<sect3 id="menu-item-type-mutable">
	  <title>Mutable Command Items</title>
	  <para>A mutable command item changes its label when selected.  For example, <menuchoice><guimenu>View</guimenu><guimenuitem>Reload</guimenuitem></menuchoice> in a browser may change to <guimenuitem>Stop</guimenuitem> to allow the user to interrupt the operation if it is taking a long time.</para>

	  <para>Note that mutable menu items can be problematic because the user never sees the menu item changing, so it is not obvious that a different function has become available. </para>

	<itemizedlist><title>Guidelines</title>
		<listitem><para>If your mutable menu items are <link linkend="menu-item-type-command">command items</link>, and you have sufficient space on your menu, consider providing two adjacent menu items for the commands instead.  Then make the items sensitive or insensitive as the situation demands.  This also makes it easier for the user to tell when different shortcuts are available for each of the commands, for example <keycombo><keycap>Ctrl</keycap><keycap>R</keycap></keycombo> for <guimenuitem>Reload</guimenuitem>, and <keycap>Esc</keycap> for <guimenuitem>Stop</guimenuitem>.</para></listitem>

		<listitem><para>Do not use mutable menu items to toggle a two-state setting (for example, <guimenuitem>Show Toolbar</guimenuitem> and <guimenuitem>Hide Toolbar</guimenuitem>).  Present such items as a single <link linkend="menu-item-type-check">check box item</link> instead.</para></listitem>
	</itemizedlist>

	</sect3>
	<sect3 id="menu-item-type-check">
	  <title>Checkbox Items</title>

	<figure id="checkbox-items-figure"><title>A group of check box items on a menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-checkbox-group.png" format="PNG" width="231" depth="112"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-checkbox-group.eps" format="EPS"/></imageobject>
	    <textobject><phrase>Screenshot of group on a View menu containing four check box items: Main Toolbar, Side Pane, Location Bar and Status Bar</phrase></textobject>
	  </mediaobject>
	</figure>

	  <para>A check box menu item shows the current state of a two-state setting, and allows the user to toggle it by selecting the menu item.</para>

	<itemizedlist><title>Guidelines</title>
	  
	  	<listitem><para>Use a check box menu item only when it is obvious from the label what the set and unset states mean.  This usually means that the two states are logical or natural opposites, such as &quot;on&quot; and &quot;off&quot;.  If this is not the case, use two <link linkend="menu-item-type-radio">radio button items</link> instead.</para></listitem>
		  <listitem><para>Never change the label of a check box menu item in response to the user selecting the item.</para></listitem>

	</itemizedlist>

	</sect3>
	<sect3 id="menu-item-type-radio">
	  <title>Radio Button Items</title>

	<figure id="radiobutton-items-figure"><title>A group of radiobutton items on a menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-radiobutton-group.png" format="PNG" width="167" depth="117"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-radiobutton-group.eps" format="EPS"/></imageobject>
	    <textobject><phrase>Screenshot of group on a menu containing three radiobutton items: view as icons, view as list and view details</phrase></textobject>
	  </mediaobject>
	</figure>

	  <para>Radio button menu items show which of two or more mutually-exclusive settings are currently selected, and allow the user to choose a different setting by selecting its menu item.</para>

	<itemizedlist>

	  	<listitem><para>If you need to offer a choice of two mutually-exclusive settings to the user,  use a group of two radio button items instead of a single check box menu item if the settings are not clearly opposites.  For example, represent <guimenuitem>View as Icons</guimenuitem> and <guimenu>View as List</guimenu> as two radio button items.</para></listitem>

	  <listitem><para>Never change the label of a radio button menu item in response to the user selecting or deselecting the item.</para></listitem>

	</itemizedlist>

<remark>
	Adam notes that this whole section can be a significant source of
	nastiness in a UI. We need explicit recommendations here on how to
	represent different states of a toggled menu item via icons in the UI.
	We also need to make recommendations to avoid some common mistakes,
	including:
	
	* Confusing menu items acting as radio buttons in a group with menu
          items acting as check boxes.
	* Ambiguous names for check box/toggle menu items which make it
	  difficult to establish the current system state by looking at
	  the menu.
</remark>

	</sect3>
	
      </sect2>

    </sect1>

    <sect1 id="menus-standard">
      <title>Standard Menus</title>
      <para>Most applications have many functions in common, such as <guimenu>Cut</guimenu>, <guimenu>Copy</guimenu>, <guimenu>Paste</guimenu> and <guimenu>Quit</guimenu>.  To aid learning and memorability, these menu items, and the menus on which they appear, must appear with the same labels and in the same order in every application.  The same commands must also behave the same way in different applications, to avoid surprising the user.</para>

	<para>This section details the most common menus, menu items and their behaviors.  You will not need all of these menus or menu items in every application you write, but do preserve the order of the menu titles and of the menu items that you do use.</para>

	<itemizedlist><title>Guidelines</title>
		<listitem><para>Place application-specific menus after the <guimenu>Format</guimenu> menu and before the <guimenu>Go</guimenu> menu</para></listitem>

		<listitem><para>Place application-specific menu items towards the middle of a standard menu, unless they logically fit with one of the standard groups already on the menu.</para></listitem>

	</itemizedlist>

        
    <remark>What is the best way to present menus given the known variants? Multiple shots? Segments?</remark>

      <figure id="generic-menu-bar">
	<title>A menubar showing all the standard menu titles in their correct order</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-application.png" width="454" depth="27" format="PNG"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-application.eps" format="EPS"/></imageobject>
	  <textobject>
	    <simplelist type="horiz" columns="9">
	      <member><guimenu><accel>F</accel>ile</guimenu></member>
	      <member><guimenu><accel>E</accel>dit</guimenu></member>
	      <member><guimenu><accel>V</accel>iew</guimenu></member>
	      <member><guimenu><accel>I</accel>nsert</guimenu></member>
	      <member><guimenu>For<accel>m</accel>at</guimenu></member>
	      <member><guimenu><accel>G</accel>o</guimenu></member>
	      <member><guimenu><accel>B</accel>ookmarks</guimenu></member>
	      <!--<member><guimenu><accel>T</accel>ools</guimenu></member>-->
	      <member><guimenu><accel>W</accel>indows</guimenu></member>
	      <member><guimenu><accel>H</accel>elp</guimenu></member>
	    </simplelist>
	  </textobject>
	</mediaobject>
      </figure>
      
      <sect2 id="the-file-menu">
	<title>File</title>
		<para>The <guimenu>File</guimenu> menu contains commands that operate on the current document. It is the left-most item in the menubar because of its importance and frequency of use, and because it is a relevant menu in many applications. Historically, because most applications already had this menu, and because the distinction between closing documents and closing windows became blurred over time, the <guimenu>File</guimenu> menu has also become the standard location for <guimenuitem>Quit</guimenuitem>.</para>

		  <para>The items on the <guimenu>File</guimenu> menu are generally ordered by locality, closest first.  That is, items to save or load from file, followed by printing, followed by sending to a remote user.  Try to maintain this ordering if you have to add new items to the menu.</para>

	        <para>If your application does not operate on documents, name this item for the type of object it displays.  For example, many games should have a <guimenu>Game</guimenu> instead of a <guimenu>File</guimenu> menu.  However, place the <guimenuitem>Quit</guimenuitem> menu item last on this menu nonetheless.</para>
		
<remark>GJM: Quit should be deprecated. Close is often sufficient; especially when
the application saves state as it should.</remark>

	<figure id="generic-file-menu"><title>A generic File menu</title>
	<mediaobject>
	  <imageobject><imagedata fileref="images/menus-file.png" width="290" depth="454" format="PNG"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-file.eps" format="EPS"/></imageobject>
	  <textobject>
<literallayout>
<guimenu>File</guimenu>
<guimenuitem><accel>N</accel>ew                  Ctrl+N</guimenuitem>
<guimenuitem><accel>O</accel>pen...              Ctrl+O</guimenuitem>
<!--<guimenuitem>Recent <accel>F</accel>iles              &gt; </guimenuitem>-->
---
<guimenuitem><accel>S</accel>ave                 Ctrl+S</guimenuitem>
<guimenuitem>Save <accel>A</accel>s...     Shift+Ctrl+S</guimenuitem>
<guimenuitem>Sa<accel>v</accel>e a Copy...               </guimenuitem>
<guimenuitem><accel>R</accel>evert                     </guimenuitem>
---
<guimenuitem>Page Set<accel>u</accel>p                 </guimenuitem>
<guimenuitem>Print Previe<accel>w</accel>  Shift+Ctrl+P</guimenuitem>
<guimenuitem><accel>P</accel>rint...             Ctrl+P</guimenuitem>
<guimenuitem><accel>S</accel>end To...              Ctrl+M</guimenuitem>
---
<guimenuitem>Proper<accel>t</accel>ies                 </guimenuitem>
---
<guimenuitem><accel>1</accel>. Recent Document                 </guimenuitem>
<guimenuitem><accel>2</accel>. Recent Document                </guimenuitem>
<guimenuitem><accel>3</accel>. Recent Document                </guimenuitem>
<guimenuitem><accel>4</accel>. Recent Document                </guimenuitem>
---
<guimenuitem><accel>C</accel>lose               Ctrl+W</guimenuitem>
<guimenuitem><accel>Q</accel>uit                 Ctrl+Q</guimenuitem>
</literallayout>
	    </textobject>
	  </mediaobject>
	</figure>

        
	<sect3>
	  <title>Creation and Opening Operations</title>
	<remark>Adam noted in the last review that we don't make any suggestions for applications  that do not edit document/files. In an OOUI, the Game
	  menu would have items such as (modulo phraeseology) Open New Game, Open Game Settings, High Scores.</remark>
	<remark>>For non-game UI there would be at the very least, Open as ... and Open Settings.</remark>

	<table frame="all"> 
	  <title>Creation and Opening operation menu items </title> 

	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
	      	<entry><guimenuitem><accel>N</accel>ew</guimenuitem></entry>
	       <entry><keycombo><keycap>Ctrl</keycap><keycap>N</keycap></keycombo></entry>
		<entry>Creates a new document. Open a new primary window, with the title <replaceable>Document name</replaceable>, containing a blank document.  How this window is displayed, e.g. as a tab or a separate window, is up to the window manager.
			<para>If your application can create a number of different types of document, you can make the <guimenuitem><accel>N</accel>ew</guimenuitem> item a submenu, containing a menu item for each type. Label these items <guimenuitem>New <replaceable>document type</replaceable></guimenuitem>, make the first entry in the submenu the most commonly used document type, and give it the <keycombo><keycap>Ctrl</keycap><keycap>N</keycap></keycombo> shortcut.</para>
			<para>Note: A blank document will not necessarily be completely blank. For example, a document created from a template may already contain some data.<!-- FIXME: More on templates --></para>
		</entry>
		</row>

		<row>
		      <entry><guimenuitem><accel>O</accel>pen...</guimenuitem></entry>
	      		<entry><keycombo><keycap>Ctrl</keycap><keycap>O</keycap></keycombo></entry>
			<entry>Opens an existing document in a new window. Present the user with a standard Open File dialog <!-- Ref this elsewhere --> from which they can choose an existing file. If the chosen file is already open in the application, raise that window instead of opening a new one. <!-- If the current window contains a blank untitled document then replace it with the selected file. Otherwise open the file in a new window. -->
		<remark>If your application provides more than two ways to open an object, place all the Open ... items in a submenu, including Recent Files. This keeps the menu less cluttered and in some ways presents a better inteface as the list of recent files is presented in the same menu, and near, the regular open commands. Users hate having to go to the bottom of the file menu to open recent files; the cause of this is that, in the workplace, it is far more common to sort out other peoples already written and saved crap than it is to have to write your own. Most of the users of office application, surveyed in both card sorts and online presentations of speculative menus, do not want or do not even notice when the New... items are absent.</remark>
		  <remark>>Problem to be solved. It may be desirable to open a second read-only view of the same document. How should this be provided? Non-OOUI are particularly nasty in this regard, as in many others. A "Clone Window" command seems quite nasty.</remark>
		  <remark>>As I noted in the first review, the blank window should be kept available; in an OOUI this is a more obvious a way of working.</remark>
			</entry>
		</row>

	  <!-- I think this is totally broken, I'm moving back to having recent files on the main menu itself. -Seth
		<row>
			<entry>Recent Files</entry>
			<entry>none</entry>	
			<entry>Allows the user to open a recently used file. The application should maintain a history of recently opened documents and these should be accessible via a submenu. Selecting one of these files should open that file in the same way that <guimenuitem><accel>O</accel>pen</guimenuitem> does.
			<para>Provide at least ten of the most recent files in the menu; fewer only according to user preferences or absence of recent files.</para>
			</entry>
		</row>
	  -->
		</tbody>
		</tgroup>
	</table>
	</sect3>


	<sect3>
	  <title>Saved State Operations</title>
	    <remark>This section needs a review with an eye to what can actually be done programmatically.</remark>

	<table>
	  <title>Saved State Operation menu items</title>
	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
		<entry><guimenuitem><accel>S</accel>ave</guimenuitem></entry>
		<entry><keycombo><keycap>Ctrl</keycap><keycap>S</keycap></keycombo></entry>
		<entry>Saves the document with its current filename. If the document already has a filename associated with it, save the document immediately without any further interaction from the user. If there are any additional options involved in saving a file (eg. DOS or UNIX-style line endings in a text file), prompt for these first time the document is saved, but subsequently use the same values each time until the user changes them.
		<para>If the document has no current filename or is read-only, selecting this item should be the same as selecting <guimenuitem>Save As</guimenuitem>.</para>
		</entry>
		</row>

		<row>
		      <entry><guimenuitem>Save <accel>A</accel>s...</guimenuitem></entry>
	      		<entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>S</keycap></keycombo></entry>
			<entry>Saves the document with a new filename. Present the user with the standard Save As dialog, and save the file with the chosen file name. <!-- FIXME: errors, additional information--></entry>

		</row>
		<row>
	      		<entry><guimenuitem>S<accel>a</accel>ve a Copy...</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>Prompts the user to enter a filename, with which a copy of the document is then saved.  Do not alter either the view or the filename of the original document.  All subsequent changes are still made to the original document until the user specifies otherwise, for example by choosing the <guimenuitem>Save As</guimenuitem> command.
		<para> Like the <guimenuitem>Save As</guimenuitem> dialog, the <guimenuitem>Save a Copy</guimenuitem> dialog may present different ways to save the data. For example, an image may be saved in a native format or as a PNG.</para></entry>
	      </row>

	    <row>
	      	<entry><guimenuitem><accel>R</accel>evert</guimenuitem></entry>
	      <entry>None</entry>
		<entry>Reverts the document to the last saved state. Present the user with a warning that all changes will be lost, and offer the option of cancelling before reloading the file.</entry>

		</row>

		<row>
		      <entry><guimenuitem>Save <accel>V</accel>ersion...</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>An alternative to the <guimenuitem>Save a Copy</guimenuitem> command.  Only use this item in conjunction with the <guimenuitem>Restore Version</guimenuitem>.  <remark>Unless we can describe exactly what this ought to do, should we remove it for now?</remark>command.</entry>
	      </row>

		<row>
		      <entry><guimenuitem>R<accel>e</accel>store Version...</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>Prompts the user for a version of the current document to be restored. Present the user with with a warning that all changes will be lost, and offer the option of cancelling before restoring the version. Only use this item in conjunction with the <guimenuitem>Save Version</guimenuitem> command.</entry>
		</row>
	
		<row>
		      <entry><guimenuitem><accel>V</accel>ersions...</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>An alternative to the <guimenuitem>Save Version</guimenuitem> and <guimenuitem>Restore Version</guimenuitem> commands. Use this when more utilities, such as a diff, are available.</entry>
	      </row>

		</tbody>
		</tgroup>

	</table>
	</sect3>

	<sect3>
	  <title>Export Operations</title>

	<table>
	  <title>Export Operation menu items</title>
	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
	      	<entry><guimenuitem>Page Set<accel>u</accel>p</guimenuitem></entry>
		<entry>None</entry>
	      	<entry>Allows the user to control print-related settings. Present the user with a dialog allowing the user to set such options as portrait or landscape format, margins, and so on. <remark>We should have a standard dialog for this.</remark></entry>
	      </row>

		<row>
		      <entry><guimenuitem>Print Previe<accel>w</accel></guimenuitem></entry>
	      		<entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>P</keycap></keycombo></entry>
			<entry>Shows the user what the printed document will look like. Present a new window containing an accruate represenation of the appearance of the document as it would be printed.  The libgnomeprintui library provides a standard Print Preview window that you should use if possible.</entry>
		</row>

	    <row>
	    	<entry><guimenuitem><accel>P</accel>rint...</guimenuitem></entry>
		<entry><keycombo><keycap>Ctrl</keycap><keycap>P</keycap></keycombo></entry>
	        <entry>Prints the current document. Present the user with a dialog allowing them to set options like the page range to be printed, the printer to be used, and so on. The dialog must contain a button labelled <guibutton>Print</guibutton> that starts printing and closes the dialog.  The <filename>libgnomeprintui</filename> library provides a standard Print dialog that you should use if possible.</entry>
	    </row>

	    <row>
	      <entry><guimenuitem>S<accel>e</accel>nd To...</guimenuitem></entry>
		<entry><keycombo><keycap>Ctrl</keycap><keycap>M</keycap></keycombo></entry>
	      <entry>Provides the user a means to attach or send the current document as an email or email attachment<!-- (launch $MAILER -a $ATTACHMENT)-->, depending on its format.
		<para>You may provide more than one <guimenuitem>Send</guimenuitem> item depending on which options are available. If there are more than two such items, move them into a submenu. For example, if only <guimenuitem>Send by Email</guimenuitem> and <guimenuitem>Send by Fax</guimenuitem> are available, leave them on the top-level menu  If there is a third option, such as <guimenuitem>Send by FTP</guimenuitem>, place all the options in a <guimenuitem>Send</guimenuitem> submenu.</para>
	      </entry>
	    </row>
	</tbody>
	</tgroup>
	</table>
	</sect3>
	
	<sect3>
	  <title>File Properties</title>
	<table>
	  <title>Properties menu items</title>
	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
		<entry><guimenuitem>Proper<accel>t</accel>ies</guimenuitem></entry>
		<entry><keycombo><keycap>Alt</keycap><keycap>Return</keycap></keycombo></entry>
	        <entry>Opens the document's <guilabel>Properties</guilabel> window.  This may contain editable information, such as the document author's name, or read-only information, such as the number of words in the document, or a combination of both. The <keycombo><keycap>Alt</keycap><keycap>Return</keycap></keycombo> shortcut should not be provided where <keycap>Return</keycap> is most frequently used to insert a new line.</entry>
	    </row>
	  </tbody>
	</tgroup>
	</table>
	</sect3>
	

	<sect3>
	  <title>Closing Operations</title>
	<table>
	  <title>Closing Operation menu items</title>
	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
		<entry><guimenuitem><accel>C</accel>lose</guimenuitem></entry>
		<entry><keycombo><keycap>Ctrl</keycap><keycap>W</keycap></keycombo></entry>
	        <entry>Closes the current document. If it has unsaved changes, present the user with a <link linkend="alerts-confirmation">confirmation alert</link> giving the option to save changes, discard them, or cancel the action without closing or saving the document.
		<para>If the window you are closing is the last open document in the application, the correct action depends on your application type:</para>
		<itemizedlist>
			<listitem><para>Single document interface: close the application</para></listitem>
			<listitem><para>Controlled single document interface: leave only the control window open</para></listitem>
			<listitem><para>Multiple document interface: close the current document and create a new blank document</para></listitem>
		</itemizedlist>		
		  <remark>As mentioned on the usability list, Control+W is an Emacs shortcut for Cut. This has already proven deleterious for some users so we should consider dropping the shortcut.  But see also <ulink url="http://bugzilla.gnome.org/show_bug.cgi?id=76761">http://bugzilla.gnome.org/show_bug.cgi?id=76761</ulink></remark>
	      </entry>
	    </row>
	    
	    <row>
	      <entry><guimenuitem><accel>Q</accel>uit</guimenuitem></entry>
		<entry><keycombo><keycap>Ctrl</keycap><keycap>Q</keycap></keycombo></entry>
	      <entry><para>Closes the application. If there are unsaved changes in any open documents, present the user with a <link linkend="alerts-confirmation">confirmation alert</link> for each affected document, giving the option to save the changes, discard them, or cancel. If there are no unsaved changes, close the application immediately without presenting any further messages or dialogs.</para>
		<!-- This para in response to bug #73618--><para>In particular, non-document based applications, for example a game or a calculator, should save their state and exit immediately.  This state should be restored the next time the application is started.</para> 
		  <remark>Kathy had suggested not providing a shortcut key to Quit. I can find no discussion of this. (And I think it should go away.)</remark>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
	</table>
	</sect3>
	
      </sect2>
      <sect2 id="menu-standard-edit">
	<title>Edit</title>

	<para>The <guimenu>Edit</guimenu> menu contains items relating to editing both the document (clipboard handling, search and replace, and inserting special objects) and the user's preferences.  Preferences are edited here rather than on a <guimenu>Settings</guimenu> menu, because:</para>

	<itemizedlist>
		<listitem><para>most applications' preferences windows are accessed via a single menu item, and single-item menus offer poor usability</para></listitem>
		<listitem><para>most applications already contain a suitable <guimenu>Edit</guimenu> menu.</para></listitem>
	</itemizedlist>

	<remark>I think we should move to a MacOS/X concept of having an "AppName" menu that contains things like preferences, about, quit, etc. -Seth</remark>

	<figure id="generic-edit-menu">
	  <title>A generic Edit menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-edit.png" width="226" depth="417" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-edit.eps" format="EPS"/></imageobject>
	    <textobject>
<literallayout class="monospaced">
<guimenu><accel>E</accel>dit</guimenu>
<guimenuitem><accel>U</accel>ndo                 Ctrl+Z</guimenuitem>
<guimenuitem><accel>R</accel>edo           Shift+Ctrl+Z</guimenuitem>
-
<guimenuitem>Cu<accel>t</accel>                  Ctrl+X</guimenuitem>
<guimenuitem><accel>C</accel>opy                 Ctrl+C</guimenuitem>
<guimenuitem><accel>P</accel>aste                Ctrl+V</guimenuitem>
<guimenuitem>Paste <accel>S</accel>pecial...                Shift+Ctrl+V</guimenuitem>
<guimenuitem><accel>D</accel>elete               Del</guimenuitem>
<guimenuitem><accel>S</accel>elect All           Ctrl+A</guimenuitem>
<guimenuitem>Du<accel>p</accel>licate           Ctrl+U</guimenuitem>
<guimenuitem>Dese<accel>l</accel>ect All   Shift+Ctrl+A</guimenuitem>
-
<guimenuitem><accel>F</accel>ind...              Ctrl+F</guimenuitem>
<guimenuitem>Find Ne<accel>x</accel>t            Ctrl+G</guimenuitem>
<guimenuitem>Find Pre<accel>v</accel>ious  Shift+Ctrl+G</guimenuitem>
<guimenuitem>R<accel>e</accel>place...              Ctrl+R</guimenuitem>
-
<guimenuitem><accel>I</accel>nsert...              </guimenuitem>
-
<guimenuitem>Pr<accel>e</accel>ferences</guimenuitem>
</literallayout>
	    </textobject>
	  </mediaobject>
	</figure>


	<sect3>
	  <title>Modification History</title>
	  <para>Document-based applications should maintain a history of modifications to a document and the state of the document between each action. The <guimenuitem>Undo</guimenuitem> and <guimenuitem>Redo</guimenuitem> commands move backwards and forwards through this history.</para>

	<remark>We'd like to see the action name included on the Undo/Redo menu items, but this is currently not easy to do in gtk.</remark>

	<table frame="all"> 
	  <title>Modification History menu items </title> 

	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
	  	<entry><guimenuitem><accel>U</accel>ndo <replaceable>action</replaceable></guimenuitem></entry>
	       <entry><keycombo><keycap>Ctrl</keycap><keycap>Z</keycap></keycombo></entry>
		<entry>Undoes the effect of the previous action in the undo history list. Revert the document to its state before the previous action was performed. If your application supports undo, and the user undoes all changes since it was last saved, treat the document as unmodified.
		<para>Note: provide a separate <guimenuitem>Undo</guimenuitem> and <guimenuitem>Redo</guimenuitem> menu item even if your application only supports one level of undo.</para></entry>
	      </row>

		<row>
	      	  <entry><guimenuitem><accel>R</accel>edo <replaceable>action</replaceable></guimenuitem></entry>
			<entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>Z</keycap></keycombo></entry>
	      		<entry>Performs the next action in the undo history list, after the user has moved backwards through the list with the <guimenuitem>Undo</guimenuitem> command.  Move the user one step forwards again, restoring the document to the state it was in after that action was originally performed.
			<para>Note: provide a separate <guimenuitem>Undo</guimenuitem> and <guimenuitem>Redo</guimenuitem> menu item even if your application only supports one level of undo.</para></entry>
	      </row>
		</tbody>
		</tgroup>
	</table>
	</sect3>

	<sect3>
	  <title>Manipulating Selected Data</title>

	<table frame="all"> 
	  <title>Selected Data Manipulation menu items </title> 

	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
		<entry><guimenuitem>Cu<accel>t</accel></guimenuitem></entry>
	      	<entry><keycombo><keycap>Ctrl</keycap><keycap>X</keycap></keycombo></entry>
		<entry>Removes the selected content and places it onto the clipboard. Visually, remove the content from the document in the same manner as <guimenuitem><accel>D</accel>elete</guimenuitem>.</entry>
	      </row>

		<row>
	    		<entry><guimenuitem><accel>C</accel>opy</guimenuitem></entry>
	      		<entry><keycombo><keycap>Ctrl</keycap><keycap>C</keycap></keycombo></entry>
			<entry>Copies the selected content onto the clipboard.</entry>
	      </row>
	    
	    <row>
		<entry><guimenuitem><accel>P</accel>aste</guimenuitem></entry>
	      <entry><keycombo><keycap>Ctrl</keycap><keycap>V</keycap></keycombo></entry>
		<entry>Inserts the contents of the clipboard into the document.  If there is no current selection, use the caret as the insertion point.  If there is a current selection, replace it with the clipboard contents.</entry>
	    </row>
	    
	    <row>
		<entry><guimenuitem>Paste <accel>S</accel>pecial...</guimenuitem></entry>
	      <entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>V</keycap></keycombo></entry>
		<entry>Inserts a non-default representation of the clipboard contents into the document.  Open a dialog presenting a list of the available formats from which the user can select.  For example, if the clipboard contains a PNG file copied from a file manager, the image may be embedded in the document, or a link to the file inserted so that changes to the image on disk are always reflected in the document.</entry>
	    </row>

	    <row>
		<entry><guimenuitem>Du<accel>p</accel>licate</guimenuitem></entry>
	      <entry><keycombo><keycap>Ctrl</keycap><keycap>U</keycap></keycombo></entry>
		<entry>Creates a duplicate copy of the selected object.  Do not prompt for a name for the duplicate object, but give it a sensible default (for example, <filename>Copy of ShoppingList.abw</filename>) and allow the user to change it later.  Place the duplicate copy as near the original as possible without overlapping it, even if this means breaking the current sort order within the container, so the user sees it immediately.</entry>
	    </row>

		<row>
			<entry><guimenuitem><accel>D</accel>elete</guimenuitem></entry>
		      <entry><keycap>Delete</keycap></entry>
			<entry>Removes the selected content without placing it on the clipboard.
		      <remark>Should Delete be provided on a menu? The command is as obvious as using the arrow keys to move about.</remark></entry>
	      </row>

		<row>
		      <entry><guimenuitem>Select <accel>A</accel>ll</guimenuitem></entry>
	      		<entry><keycombo><keycap>Ctrl</keycap><keycap>A</keycap></keycombo></entry>
			<entry>Selects all content in the current document.</entry>
	    	</row>
	    
		<row>
		  <entry><guimenuitem><accel>D</accel>eselect All</guimenuitem></entry>
	      	  <entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>A</keycap></keycombo></entry>
		<entry>Deselects all content in the current document. Only provide this item in situations when no other method of undoing selection is possible or apparent to the user.  For example, in complex graphics applications where selection and deselection is not usually possible simply by using the cursor keys.
		<para>Note: Do not provide <guimenuitem>Deselect All</guimenuitem> in text entry fields, as <keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keysym>hex digit</keysym></keycombo> is used to enter unicode characters so its shortcut will not work.</para></entry>
	      </row>

	    </tbody>
	  </tgroup>
	 </table>
	</sect3>

	<sect3>
	  <title>Searching and Replacing</title>

	<table frame="all"> 
	  <title>Search and Replace menu items </title> 

	  <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
	      <entry>Find...</entry>
	      <entry><keycombo><keycap>Ctrl</keycap><keycap>F</keycap></keycombo></entry>
		<entry>Opens a window or dialog allowing the user to search for specific content in the current document.  Highlight each match in-place.
		<para>If the command allows the user to search for content in places other than the current document, for example other open documents, other documents on disk, or a remote network location, label this item <guimenuitem>Search</guimenuitem> instead of <guimenuitem>Find</guimenuitem>.</para></entry>
	      </row>

	    <row>
	      <entry><guimenuitem>Find Ne<accel>x</accel>t</guimenuitem></entry>
	      <entry><keycombo><keycap>Ctrl</keycap><keycap>G</keycap></keycombo></entry>
	      <entry>Selects the next instance of the last Find term in the current document.  <remark>What to do if there is no next instance?  Disable the menu item, which could be confusing, or pop up an annoying alert saying 'no matches found'?</remark></entry>
	      </row>

		<row>
		      <entry><guimenuitem>Find Pre<accel>v</accel>ious</guimenuitem></entry>
	      		<entry><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>G</keycap></keycombo></entry>
			<entry>Selects the previous instance of the last Find term in the current document.</entry>
	      </row>

		<row>
		      <entry><guimenuitem><accel>R</accel>eplace...</guimenuitem></entry>
	      		<entry><keycombo><keycap>Ctrl</keycap><keycap>H</keycap></keycombo></entry>
			<entry>Opens a window or dialog allowing the user to search for specific content in the current document, and replace each occurrence with new content. 	    
		 	<remark>Replace is not always descriptive of what the user may do with the utility window. Formatting a section is also a possibility. Ideally, these would all be merged into a simple utility window</remark>
		</entry>
	      </row>
		</tbody>
		</tgroup>
	</table>
	</sect3>


	<sect3>
	  <title>Inserting Special Objects</title>
	  <para>Where applicable, provide items on the <guimenu>Edit</guimenu> menu that insert special objects such as images, links, GUI controls or the current date and time. </para>

	<para>If you have up to three types of object that can be inserted, add them as individual items to this menu, for example <guimenuitem>Insert Image</guimenuitem>, or <guimenuitem>Insert External Link</guimenuitem>.  If you have between three and six types, place them on an <menuchoice><guimenu>Edit</guimenu><guimenuitem>Insert</guimenuitem></menuchoice> submenu.  If you have more than six, add a separate <link linkend="menu-standard-insert"><guimenu>Insert</guimenu> menu</link> to the menubar.</para>

	</sect3>


	<sect3>
	  <title>User Preferences</title>

	<table>
	<title>User Preferences menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
		      <entry><guimenuitem>Pr<accel>e</accel>ferences</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>Opens a <link linkend="preference-windows">preferences window</link> allowing the user to change preferences for the whole application.  Changes will apply to all running and subsequent instances of the application.</entry>
		</row>
		</tbody>
		</tgroup>
	</table>
	</sect3>

      </sect2>
      <sect2 id="menu-standard-view">
	<title>View</title>
	<para>The <guimenu>View</guimenu> menu contains only items that affect the user's view of the current document.  Do not place any items on the <guimenu>View</guimenu> menu that affect the the content of the current document.  (Exception: <menuchoice><guimenu>View</guimenu><guimenuitem>Reload</guimenuitem></menuchoice> may change the current contents if, for example, the document is a webpage that has been recently updated on the server).</para>

	<figure id="generic-view-menu">
	  <title>A generic View menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-view.png" width="166" depth="300" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-view.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>V</accel>iew</guimenu>
<guimenuitem><accel>T</accel>oolbar</guimenuitem>
<guimenuitem><accel>S</accel>tatusbar</guimenuitem>
---
<guimenuitem><accel>I</accel>cons</guimenuitem>
<guimenuitem><accel>L</accel>ist</guimenuitem>
<guimenuitem><accel>D</accel>etails</guimenuitem>
---
<guimenuitem><accel>S</accel>ort By...</guimenuitem>
<guimenuitem><accel>F</accel>ilter...</guimenuitem>
---
<guimenuitem><accel>Z</accel>oom in       Ctrl++</guimenuitem>
<guimenuitem>Zoom <accel>O</accel>ut  Ctrl+-</guimenuitem>
<guimenuitem><accel>N</accel>ormal Size   Ctrl+=</guimenuitem>
<guimenuitem><accel>B</accel>est Fit    </guimenuitem>
---
<guimenuitem><accel>R</accel>efresh     Ctrl+R</guimenuitem>

	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>


	<sect3>
	<title>Toolbar and Statusbar</title>
	<table>
	<title>Toolbar and Statusbar menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
	      <row>
	 	      <entry><guimenuitem><accel>T</accel>oolbar</guimenuitem></entry>
	      		<entry>None</entry>
			<entry>Shows or hides the application's toolbar.  This is a <link linkend="menu-item-type-check">check box menu item</link>. Include this item in every application that has a single toolbar.  See <xref linkend="toolbars-controlling-display"/> for information on how to deal with multiple toolbars.</entry>
		</row>

		<!-- Suggest removing this for now, see bug #????
		<row>
			<entry><guimenuitem><accel>S</accel>tatusbar</guimenuitem></entry>
			<entry>None</entry>
			<entry>Shows or hides the application's statusbar.  This is a <link linkend="menu-item-type-check">check box menu item</link>.  Include this item in every application that has a statusbar.</entry>
		</row>
		-->

		</tbody>
		</tgroup>
	</table>
	</sect3>

	<sect3>
	<title>Content Presentation</title>
	<table>
	<title>Content Presentation menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>I</accel>cons</guimenuitem></entry>
			<entry>None</entry>
			<entry>Shows the contents of the selected container as rows and columns of large icons, each with its name underneath.  This is a <link linkend="menu-item-type-radio">radio button menu item</link>.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>L</accel>ist</guimenuitem></entry>
			<entry>None</entry>
			<entry>Shows the contents of the selected container as a list of small icons, possibly in multiple columns, each with its name on its right-hand side.  This is a <link linkend="menu-item-type-radio">radio button menu item</link>.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>D</accel>etails</guimenuitem></entry>
			<entry>None</entry>
			<entry>Shows the contents of the selected container as single column of small icons, each with its name on its right-hand side.  Additional columns give extra information about the object each icon represents, for example the size and modification date of files in a file manager.  This is a <link linkend="menu-item-type-radio">radio button menu item</link>.
			<para>If your application has no need for both <guimenu>List</guimenu> and <guimenu>Details</guimenu> modes, use the <guimenu>List</guimenu> item for whichever of the two modes you support.</para></entry>
		</row>

		<row>
			<entry><guimenuitem>S<accel>o</accel>rt By...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sorts the contents of an container by user-specified criteria.  Open a dialog allowing the user to choose from pre-defined sort keys (for example, Name, Size, or Modification Date in a file manager), or to specify their own if applicable.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>F</accel>ilter...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Hides objects that are not of interest to the user.  Open a dialog allowing the user to choose from a list of types of object they want to display, or to enter their own criteria (for example, a regular expression matched against a particular property of the objects).</entry>
		</row>


		<row>
			<entry><guimenuitem><accel>Z</accel>oom In</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>+</keycap></keycombo></entry>
			<entry>Zooms into the document.  Make the center of the new view the same as the center of the previous view. <remark>Should probably encourage apps to support Ctrl+= as well.</remark></entry>
		</row>

		<row>
			<entry><guimenuitem>Zoom <accel>O</accel>ut</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>-</keycap></keycombo></entry>
			<entry>Zooms out of the document.  Make the center of the new view the same as the center of the previous view.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>N</accel>ormal Size</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>0</keycap></keycombo></entry>
			<entry>Resets the zoom level back to the default value, normally 100%.  Make the center of the new view the same as the center of the previous view.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>B</accel>est Fit</guimenuitem></entry>
			<entry>None</entry>
			<entry>Makes the document fill the window.  Show the document, or the current page of the document, at as high a zoom level as will fit in the window whilst allowing the whole document or page to be visible without scrolling.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>R</accel>efresh</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>R</keycap></keycombo></entry>
			<entry>Redraws the current view of the document from local storage.  For example, in a web browser application, this would redraw the page from the browser page cache.</entry>
		</row>
		<row>
			<entry><guimenuitem><accel>R</accel>eload</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>R</keycap></keycombo></entry>

			<entry>Redraws the current view of the document, checking the data source for changes first.  For example, checks the web server for updates to the page before redrawing it.
			<para>If your application requires both <guimenuitem>Reload</guimenuitem> and <guimenuitem>Refresh</guimenuitem>, use <keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>R</keycap></keycombo> as the shortcut for <guimenuitem>Reload</guimenuitem>.</para></entry>
		</row>

		</tbody>
		</tgroup>
	</table>
	</sect3>
      </sect2>

      <sect2 id="menu-standard-insert">
	<title>Insert</title>
	<para>The <guimenuitem>Insert</guimenuitem> menu lists the type of special objects that can be inserted into the document at the current caret position, for example images, links, page breaks or GUI objects.  Only provide this menu if you have more than about six types of object that can be inserted, otherwise place individual items for each type on the <link linkend="menu-standard-edit"><guimenu>Edit</guimenu> menu</link>.</para>

	<figure id="generic-insert-menu">
	  <title>A generic Insert menu</title>
	  <mediaobject>
	  <imageobject><imagedata fileref="images/menus-insert.png" width="118" depth="245" format="PNG"/></imageobject>
	  <imageobject><imagedata fileref="images/menus-insert.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>P</accel>age Break</guimenu>
<guimenuitem><accel>D</accel>ate and Time...</guimenuitem>
<guimenuitem><accel>S</accel>ymbol...</guimenuitem>
---
<guimenuitem><accel>S</accel>heet...</guimenuitem>
<guimenuitem><accel>R</accel>ows...</guimenuitem>
<guimenuitem><accel>C</accel>olumns...</guimenuitem>
---
<guimenuitem><accel>I</accel>mage...</guimenuitem>
<guimenuitem><accel>G</accel>raph...</guimenuitem>
---
<guimenuitem><accel>F</accel>rom File...</guimenuitem>
<guimenuitem>E<accel>x</accel>ternal Link...</guimenuitem>

	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>
	
	<para>The types of object will vary between applications, but the table below shows some common types that may be applicable.</para>

	<table>
	<title>Insert menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>P</accel>age Break</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts a page break at the caret position.  Show the page break visually, for example as a dotted line across the page, unless the user has specifically requested not to see them.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>D</accel>ate and Time...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts the current date and/or time at the caret position.  Open a dialog giving a choice of date and time formats.  If applicable, also offer the choice to insert either as plain text, so the specified date and time will always appear in the document, or as a special field that will updated every time the document is opened, refreshed or printed.</entry>
			</row>

		<row>
			<entry><guimenuitem>Sy<accel>m</accel>bol...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts a special symbol, such as a mathematical symbol or foreign character, at the caret position.  Open a dialog showing all the available symbols as a table, from which the user can choose.  The user must be able to add multiple symbols to the document at one time without having to close and re-open the dialog.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>S</accel>heet...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Adds a new sheet to the current workbook.  Do not prompt for a name, but choose a sensible default (such as <guilabel>Sheet-2</guilabel>) and allow the user to change it later.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>R</accel>ows...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Adds new rows to a table in which one or more rows or cells are currently selected.  Open a dialog asking whether to insert rows above or below the current selection, and for any other required information.  Copy the row format from the last or first row of the current selection respectively, unless the user specifies otherwise.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>C</accel>olumns...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Adds new columns to a table in which one or more columns or cells are currently selected.  Open a dialog asking whether to insert columns to the left or right of the current selection, and for any other required information.  Copy the column format from the right- or left-most column of the current selection respectively, unless the user specifies otherwise.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>I</accel>mage...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts an image into the document from a file.  Present a standard Open File dialog filtered on acceptable file types, from which the user can choose an image file to insert.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>G</accel>raph...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts a graph into the document.  Open a dialog or assistant that allows the user to build (or open from a file) a graph of their choice, using the current selection as an indication of which values, axis labels and data labels to use.</entry>
			</row>

		<row>
			<entry><guimenuitem><accel>F</accel>rom FIle...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts an object from any acceptable file type, for example plain text, formatted text, or an image.  Present a standard Open File dialog filtered on acceptable file types, from which the user can choose a file to insert.</entry>
			</row>

		<row>
			<entry><guimenuitem>E<accel>x</accel>ternal Link...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Inserts a link to an object stored in a different file, or on a remote system.  The object is not embedded in or saved with the document, only a link to it.  Open a dialog in which the user can type or choose the name of the object, for example a filename or a webpage URL.  Show the link in the document in as informative way as possible.  For example, show a link to an image as a thumbnail of that image, unless the user specifies otherwise.</entry>
			</row>

		</tbody>
		</tgroup>
	</table>


      </sect2>


      <sect2 id="menu-standard-format">
	<title>Format</title>

		<para>A <guimenu>Format</guimenu> menu contains commands to change the visual appearance of the document.  For example, changing the font, color, or line spacing of a text selection.</para>
		<para>The difference between these commands and those on the <link linkend="menu-standard-view"><guimenuitem>View</guimenuitem> menu</link> is that changes made with Format commands are persistent and saved as part of the document, for example as HTML or RTF tags.</para>

	<figure id="generic-format-menu">
	  <title>A generic Format menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-format.png" width="163" depth="265" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-format.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>S</accel>tyle...</guimenu>
---
<guimenuitem><accel>F</accel>ont...</guimenuitem>
<guimenuitem><accel>P</accel>aragraph...</guimenuitem>
---
<guimenuitem><accel>B</accel>old	Ctrl+B</guimenuitem>
<guimenuitem><accel>I</accel>talic	Ctrl+I</guimenuitem>
<guimenuitem><accel>U</accel>nderline	Ctrl+U</guimenuitem>
---
<guimenuitem><accel>C</accel>ells...</guimenuitem>
<guimenuitem><accel>L</accel>ist...</guimenuitem>
---
<guimenuitem>L<accel>ayer</accel>...</guimenuitem>
<guimenuitem>P<accel>a</accel>ge...</guimenuitem>

	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>


	<para>Items found on the <guimenu>Format</guimenu> will be very application-specific, but some common items are listed in the table below.</para>

	<table>
	<title>Format menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>S</accel>tyle...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the style attributes of the selected text or objects either individually or to a named, predefined style.  Open a dialog allowing the user to set attributes such as bold, italic, size and spacing individually, and to create their own named styles where applicable.</entry>

		</row>

		<row>
			<entry><guimenuitem><accel>F</accel>ont...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the font properties of the selected text or objects.  Open a dialog allowing the user to choose font, size, style, color, or whatever other attributes are applicable.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>P</accel>aragraph...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the properties of the selected paragraph.  Open a dialog allowing the user to choose style, line spacing, tabulation, or whatever other attributes are applicable.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>B</accel>old</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>B</keycap></keycombo></entry>
			<entry>Toggles the boldness of the current text selection on or off.  If some of the selection is currently bold and some is not, this command should bolden the selected text.</entry>

		</row>

		<row>
			<entry><guimenuitem><accel>I</accel>talic</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>I</keycap></keycombo></entry>
			<entry>Toggles the italicisation of the current text selection on or off.  If some of the selection is currently italicised and some is not, this command should italicise the selected text.</entry>

		</row>

		<row>
			<entry><guimenuitem><accel>U</accel>nderline</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>U</keycap></keycombo></entry>
			<entry>Toggles underlining of the current text selection.  If some of the selection is currently underlined and some is not, this command should underline the selected text.</entry>

		</row>

		<row>
			<entry><guimenuitem><accel>C</accel>ells...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the properties of the selected table cells.  Open a dialog allowing the user to choose alignment, borders, shading, text style, number format, or whatever other attributes are applicable.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>L</accel>ist...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the properties of the selected list, or turns the selected paragraphs into a list if they are not already formatted as such.  Open a dialog allowing the user to choose number or bullet style, spacing, tabulation, or whatever other attributes are applicable.</entry>
		</row>


		<row>
			<entry><guimenuitem>Laye<accel>r</accel>...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the properties of all or selected layers of a multi-layered document.  Open a dialog allowing the user to choose name, size, visibility, opacity, z-ordering, or whatever other attributes are applicable.</entry>
		</row>


		<row>
			<entry><guimenuitem>P<accel>a</accel>ge...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Sets the properties of all or selected pages of the document.  Open a dialog allowing the user to choose paper size, orientation, columns, margins, or whatever other attributes are applicable.</entry>
		</row>

		</tbody>
		</tgroup>
	</table>

      </sect2>


      <sect2 id="menu-standard-bookmarks">
	<title>Bookmarks</title>

	<para>Provide a <guimenu>Bookmarks</guimenu> menu in any application that allows the user to browse files and folders, help documents, web pages or any other large information space.</para>
	<note><title>Icons</title><para>Show icons for bookmark entries on the Bookmarks menu that indicate the type of the bookmark, even if the user has globally turned off icons for other menu items on the desktop.</para></note>

	<figure id="generic-bookmarks-menu">
	  <title>A generic Bookmarks menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-bookmarks.png" width="190" depth="49"  format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-bookmarks.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>B</accel>ookmarks</guimenu>
<guimenuitem><accel>A</accel>dd Bookmark   </guimenuitem><keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo>
<guimenuitem><accel>E</accel>dit Bookmarks </guimenuitem><keycombo><keycap>Ctrl</keycap><keycap>B</keycap></keycombo>
	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>

	<table>
	<title>Bookmark menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>A</accel>dd Bookmark</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo></entry>
			<entry>Adds a bookmark for the current document to the default bookmark list.  Do not pop up a dialog asking for a title or location for the bookmark, instead choose sensible defaults (such as the document's title or filename as the bookmark name) and allow the user to change them later using the <guimenuitem>Edit Bookmarks</guimenuitem> feature.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>E</accel>dit Bookmarks</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>B</keycap></keycombo></entry>
			<entry>Allows the user to edit the application's bookmark list.  Open a window in which the user can arrange bookmarks into a hierarchy, move, copy, and delete bookmarks, and change their properties.</entry>
		</row>
		<row>
			<entry><emphasis>Bookmark List</emphasis></entry>
			<entry>None</entry>
			<entry>The user's current list of bookmarks for the application.</entry>
		</row>
		</tbody>
		</tgroup>
	</table>

      </sect2>
      <sect2 id="menu-standard-go">

	<title>Go</title>

	<para>A <guimenu>Go</guimenu> menu provides commands for quickly navigating around a document or collection of documents, or an information space such as a directory structure or the web.</para>

	<para>The contents of the menu will vary depending on the type of application.  Different standard menus are presented here for browser-based and document-based applications , but your application may require a combination of both.</para>

	<figure id="generic-browser-go-menu">
	  <title>A generic Go menu for a browser application</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-go-browser.png" width="178" depth="127" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-go-browser.eps" format="EPS"/></imageobject>
	    <textobject>
<literallayout class="monospaced">
<guimenu><accel>G</accel>o</guimenu>
<guimenuitem><accel>B</accel>ack       Alt+Left</guimenuitem>
<guimenuitem><accel>F</accel>orward	Alt+Right    </guimenuitem>
<guimenuitem><accel>U</accel>p		Alt+Up         </guimenuitem>
---
<guimenuitem><accel>H</accel>ome	Alt+Home       </guimenuitem>
<guimenuitem><accel>L</accel>ocation...  Ctrl+L</guimenuitem>
</literallayout>
	    </textobject>
	  </mediaobject>
	</figure>


	<table>
	<title>Go menu items for a browser application</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>B</accel>ack</guimenuitem></entry>
			<entry><keycombo><keycap>Alt</keycap><keycap>Left</keycap></keycombo></entry>
			<entry>Navigates to the previous document in the browser's history list.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>F</accel>orward</guimenuitem></entry>
			<entry><keycombo><keycap>Alt</keycap><keycap>Right</keycap></keycombo></entry>
			<entry>Navigates to the next document in the browser's history list.</entry>		
		</row>

		<row>
			<entry><guimenuitem><accel>U</accel>p</guimenuitem></entry>
			<entry><keycombo><keycap>Alt</keycap><keycap>Up</keycap></keycombo></entry>
			<entry>Navigates to the current document's (or folder's) parent document (or folder).  For a document browser, such as an online help viewer, this usually means navigating to the enclosing sub-section, section, chapter or contents page.</entry>		
		</row>
	
		<row>
			<entry><guimenuitem><accel>H</accel>ome</guimenuitem></entry>
			<entry><keycombo><keycap>Alt</keycap><keycap>Home</keycap></keycombo></entry>
			<entry>Navigates to a starting page defined by the user or the application.</entry>
		</row>


		<row>
			<entry><guimenuitem><accel>L</accel>ocation...</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>L</keycap></keycombo></entry>
			<entry>Navigates to a user-specified URI.  Open a dialog into which the user can type a suitable URI, or select one from a list where applicable (for example, a file selection dialog for applications that can handle file:// URIs).</entry>		
		</row>

			</tbody>
		</tgroup>
	</table>

	<figure id="generic-document-go-menu">
	  <title>A generic Go menu for document-based applications</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-go-document.png" width="206" depth="127" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-go-document.eps" width="210" depth="121" format="EPS"/></imageobject>
	    <textobject>
<literallayout class="monospaced">
<guimenu><accel>G</accel>o</guimenu>
<guimenuitem><accel>P</accel>revious Page 	PgUp </guimenuitem>
<guimenuitem><accel>N</accel>ext Page      		PgDn</guimenuitem>
<guimenuitem><accel>G</accel>o to Page...</guimenuitem>
-
<guimenuitem><accel>F</accel>irst Page    		Ctrl+Home </guimenuitem>
<guimenuitem><accel>L</accel>ast Page		Ctrl+End</guimenuitem>
</literallayout>
	    </textobject>
	  </mediaobject>
	</figure>

	<table>
	<title>Go menu items for a document-based application</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>P</accel>revious Page</guimenuitem></entry>
			<entry><keycap>PageUp</keycap></entry>
			<entry>Navigates to the previous page in the document.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>N</accel>ext Page</guimenuitem></entry>
			<entry><keycap>PageDown</keycap></entry>
			<entry>Navigates to the next page in the document.</entry>		
		</row>

		<row>
			<entry><guimenuitem><accel>G</accel>o to Page...</guimenuitem></entry>
			<entry>None</entry>
			<entry>Navigates to a user-specified page number.  Open a dialog into which the user can type a page number.
			<para>Text-based applications may also include a <guimenuitem>Go  to Line...</guimenuitem> menu item, which allows the user to jump to a specified line number.</para></entry>		
		</row>
	
		<row>
			<entry><guimenuitem><accel>F</accel>irst Page</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>Home</keycap></keycombo></entry>
			<entry>Navigates to the first page in the document.</entry>
		</row>


		<row>
			<entry><guimenuitem><accel>L</accel>ast Page</guimenuitem></entry>
			<entry><keycombo><keycap>Ctrl</keycap><keycap>End</keycap></keycombo></entry>
			<entry>Navigates to the last page in the document.</entry>		
		</row>

			</tbody>
		</tgroup>
	</table>

      </sect2>

<!-- CFB Commenting out until we have anything to go on it :/
      <sect2 id="menu-standard-tools">
	<title>Tools</title>
	<figure id="generic-tools-menu">
	  <title>A generic Tools menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/generic-tools-menu.png" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/generic-tools-menu.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>T</accel>ools</guimenu>
	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>
	<para>FIXME</para>
      </sect2>

-->

      <sect2 id="application-windows-menu">
	<title>Windows</title>
		<para>The Windows menu contains commands that apply to all of the application's open windows.  Only use a Windows menu in <link linkend="mdi">multiple document interface</link> (MDI) applications.</para>

      <note><title>MDI Applications</title><para>The use of MDI is discouraged, as they have a number of inherent usability problems.</para></note>
	
		<para>You may also label this menu <guimenu><accel>D</accel>ocuments</guimenu>, <guimenu><accel>B</accel>uffers</guimenu>, or similar according to the type of document handled by your application.</para>
	
	<para>The last items on this menu are a numbered list of the application's primary windows, for example <guimenuitem><accel>1</accel>shoppinglist.abw</guimenuitem>.  Selecting one of these items raises the corresponding window.</para>

	<figure id="generic-windows-menu">
	  <title>A generic Windows menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-windows.png" width="151" depth="172" format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-windows.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>W</accel>indows</guimenu>
<guimenuitem><accel>S</accel>ave All</guimenuitem>
<guimenuitem><accel>C</accel>lose All</guimenuitem>
	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>
	

<table>
	<title>Windows menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">
		<row>
			<entry><guimenuitem><accel>S</accel>ave All</guimenuitem></entry>
			<entry>None</entry>
			<entry>Saves all open documents.  If any documents have no current filename, prompt for a filename for each one in turn using the standard Save dialog.</entry>		
		</row>

		<row>
			<entry><guimenuitem><accel>C</accel>lose All</guimenuitem></entry>
			<entry>None</entry>
			<entry>Closes all open documents.  If there are any unsaved changes in any documents, post a <link linkend="alerts-confirmation">confirmation alert</link> for each one in turn.</entry>
		</row>
		<row>
			<entry><guimenuitem><accel>1</accel>. <replaceable>first open window title</replaceable></guimenuitem>
			<para><guimenuitem><accel>2</accel>. <replaceable>second open window title</replaceable></guimenuitem></para>
			<para>etc.</para></entry>
			<entry>None</entry>
			<entry>Raises the corresponding window to the top of the window stack.</entry>
		</row>
			</tbody>
		</tgroup>
	</table>

	
      </sect2>
      <sect2 id="menu-standard-help">
	<title>Help</title>
	<para>The <guimenu>Help</guimenu> menu provides access to all online documentation for your application.  This includes both the user guide, and the <guimenuitem>About</guimenuitem> window which includes a brief description of your application's functionality.</para>

	<figure id="generic-help-menu">
	  <title>A generic Help menu</title>
	  <mediaobject>
	    <imageobject><imagedata fileref="images/menus-help.png" width="118" depth="45"  format="PNG"/></imageobject>
	    <imageobject><imagedata fileref="images/menus-help.eps" format="EPS"/></imageobject>
	    <textobject>
	      <literallayout class="monospaced">
<guimenu><accel>H</accel>elp</guimenu>
<!--<guimenuitem><accel>S</accel>earch</guimenuitem>-->
<guimenuitem><accel>C</accel>ontents      F1</guimenuitem>
<guimenuitem><accel>A</accel>bout</guimenuitem>
	      </literallayout>
	    </textobject>
	  </mediaobject>
	</figure>

	<table>
	<title>Help menu items</title>
	 <tgroup cols="3" align="left">
	    <thead> 
	      <row> 
		<entry>Label</entry> 
		<entry>Shortcut</entry>
		<entry>Description</entry>
		</row>
	      </thead>
	    <tbody valign="top">

		<row>
			<entry><guimenuitem><accel>C</accel>ontents</guimenuitem></entry>
			<entry><keycap>F1</keycap></entry>
			<entry>Opens the default help browser on the contents page for the application.</entry>
		</row>

		<row>
			<entry><guimenuitem><accel>A</accel>bout</guimenuitem></entry>
			<entry>None</entry>
			<entry>Opens the About dialog for the application.  Use the standard dialog provided by the GNOME libraries, which contains the name and version number of the application, a short description of the application's functionality, author contact details, copyright message and a pointer to the licence under which the application is made available.</entry>		
		</row>

			</tbody>
		</tgroup>
	</table>

	<remark>We originally wanted a Search item on here too, but it's not technically possible to implement it right now.</remark>

      </sect2>
    </sect1>
  </chapter>
