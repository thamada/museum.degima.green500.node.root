# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_seaudit', [dirname(__file__)])
        except ImportError:
            import _seaudit
            return _seaudit
        if fp is not None:
            try:
                _mod = imp.load_module('_seaudit', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _seaudit = swig_import_helper()
    del swig_import_helper
else:
    import _seaudit
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


import apol
import qpol
class tm_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, tm_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, tm_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tm_sec"] = _seaudit.tm_t_tm_sec_set
    __swig_getmethods__["tm_sec"] = _seaudit.tm_t_tm_sec_get
    if _newclass:tm_sec = _swig_property(_seaudit.tm_t_tm_sec_get, _seaudit.tm_t_tm_sec_set)
    __swig_setmethods__["tm_min"] = _seaudit.tm_t_tm_min_set
    __swig_getmethods__["tm_min"] = _seaudit.tm_t_tm_min_get
    if _newclass:tm_min = _swig_property(_seaudit.tm_t_tm_min_get, _seaudit.tm_t_tm_min_set)
    __swig_setmethods__["tm_hour"] = _seaudit.tm_t_tm_hour_set
    __swig_getmethods__["tm_hour"] = _seaudit.tm_t_tm_hour_get
    if _newclass:tm_hour = _swig_property(_seaudit.tm_t_tm_hour_get, _seaudit.tm_t_tm_hour_set)
    __swig_setmethods__["tm_mday"] = _seaudit.tm_t_tm_mday_set
    __swig_getmethods__["tm_mday"] = _seaudit.tm_t_tm_mday_get
    if _newclass:tm_mday = _swig_property(_seaudit.tm_t_tm_mday_get, _seaudit.tm_t_tm_mday_set)
    __swig_setmethods__["tm_mon"] = _seaudit.tm_t_tm_mon_set
    __swig_getmethods__["tm_mon"] = _seaudit.tm_t_tm_mon_get
    if _newclass:tm_mon = _swig_property(_seaudit.tm_t_tm_mon_get, _seaudit.tm_t_tm_mon_set)
    __swig_setmethods__["tm_year"] = _seaudit.tm_t_tm_year_set
    __swig_getmethods__["tm_year"] = _seaudit.tm_t_tm_year_get
    if _newclass:tm_year = _swig_property(_seaudit.tm_t_tm_year_get, _seaudit.tm_t_tm_year_set)
    __swig_setmethods__["tm_wday"] = _seaudit.tm_t_tm_wday_set
    __swig_getmethods__["tm_wday"] = _seaudit.tm_t_tm_wday_get
    if _newclass:tm_wday = _swig_property(_seaudit.tm_t_tm_wday_get, _seaudit.tm_t_tm_wday_set)
    __swig_setmethods__["tm_yday"] = _seaudit.tm_t_tm_yday_set
    __swig_getmethods__["tm_yday"] = _seaudit.tm_t_tm_yday_get
    if _newclass:tm_yday = _swig_property(_seaudit.tm_t_tm_yday_get, _seaudit.tm_t_tm_yday_set)
    __swig_setmethods__["tm_isdst"] = _seaudit.tm_t_tm_isdst_set
    __swig_getmethods__["tm_isdst"] = _seaudit.tm_t_tm_isdst_get
    if _newclass:tm_isdst = _swig_property(_seaudit.tm_t_tm_isdst_get, _seaudit.tm_t_tm_isdst_set)
    def __init__(self): 
        this = _seaudit.new_tm_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_tm_t
    __del__ = lambda self : None;
tm_t_swigregister = _seaudit.tm_t_swigregister
tm_t_swigregister(tm_t)


def libseaudit_get_version():
  return _seaudit.libseaudit_get_version()
libseaudit_get_version = _seaudit.libseaudit_get_version
SEAUDIT_LOG_TYPE_INVALID = _seaudit.SEAUDIT_LOG_TYPE_INVALID
SEAUDIT_LOG_TYPE_SYSLOG = _seaudit.SEAUDIT_LOG_TYPE_SYSLOG
SEAUDIT_LOG_TYPE_AUDITD = _seaudit.SEAUDIT_LOG_TYPE_AUDITD
class seaudit_log_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_log_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_log_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _seaudit.new_seaudit_log_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_log_t
    __del__ = lambda self : None;
    def clear(self): return _seaudit.seaudit_log_t_clear(self)
    def get_users(self): return _seaudit.seaudit_log_t_get_users(self)
    def get_roles(self): return _seaudit.seaudit_log_t_get_roles(self)
    def get_types(self): return _seaudit.seaudit_log_t_get_types(self)
    def get_classes(self): return _seaudit.seaudit_log_t_get_classes(self)
seaudit_log_t_swigregister = _seaudit.seaudit_log_t_swigregister
seaudit_log_t_swigregister(seaudit_log_t)

SEAUDIT_MESSAGE_TYPE_INVALID = _seaudit.SEAUDIT_MESSAGE_TYPE_INVALID
SEAUDIT_MESSAGE_TYPE_BOOL = _seaudit.SEAUDIT_MESSAGE_TYPE_BOOL
SEAUDIT_MESSAGE_TYPE_AVC = _seaudit.SEAUDIT_MESSAGE_TYPE_AVC
SEAUDIT_MESSAGE_TYPE_LOAD = _seaudit.SEAUDIT_MESSAGE_TYPE_LOAD
class seaudit_message_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_message_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_message_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _seaudit.new_seaudit_message_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_message_t
    __del__ = lambda self : None;
    def get_type(self): return _seaudit.seaudit_message_t_get_type(self)
    def get_data(self): return _seaudit.seaudit_message_t_get_data(self)
    def get_host(self): return _seaudit.seaudit_message_t_get_host(self)
    def get_time(self): return _seaudit.seaudit_message_t_get_time(self)
    def to_string(self): return _seaudit.seaudit_message_t_to_string(self)
    def to_string_html(self): return _seaudit.seaudit_message_t_to_string_html(self)
    def to_misc_string(self): return _seaudit.seaudit_message_t_to_misc_string(self)
seaudit_message_t_swigregister = _seaudit.seaudit_message_t_swigregister
seaudit_message_t_swigregister(seaudit_message_t)


def seaudit_message_from_void(*args):
  return _seaudit.seaudit_message_from_void(*args)
seaudit_message_from_void = _seaudit.seaudit_message_from_void
class seaudit_load_message_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_load_message_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_load_message_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _seaudit.new_seaudit_load_message_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_load_message_t
    __del__ = lambda self : None;
seaudit_load_message_t_swigregister = _seaudit.seaudit_load_message_t_swigregister
seaudit_load_message_t_swigregister(seaudit_load_message_t)


def seaudit_load_message_from_void(*args):
  return _seaudit.seaudit_load_message_from_void(*args)
seaudit_load_message_from_void = _seaudit.seaudit_load_message_from_void
class seaudit_bool_message_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_bool_message_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_bool_message_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _seaudit.new_seaudit_bool_message_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_bool_message_t
    __del__ = lambda self : None;
seaudit_bool_message_t_swigregister = _seaudit.seaudit_bool_message_t_swigregister
seaudit_bool_message_t_swigregister(seaudit_bool_message_t)


def seaudit_bool_message_from_void(*args):
  return _seaudit.seaudit_bool_message_from_void(*args)
seaudit_bool_message_from_void = _seaudit.seaudit_bool_message_from_void
SEAUDIT_AVC_UNKNOWN = _seaudit.SEAUDIT_AVC_UNKNOWN
SEAUDIT_AVC_DENIED = _seaudit.SEAUDIT_AVC_DENIED
SEAUDIT_AVC_GRANTED = _seaudit.SEAUDIT_AVC_GRANTED
class seaudit_avc_message_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_avc_message_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_avc_message_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _seaudit.new_seaudit_avc_message_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_avc_message_t
    __del__ = lambda self : None;
    def get_message_type(self): return _seaudit.seaudit_avc_message_t_get_message_type(self)
    def get_timestamp_nano(self): return _seaudit.seaudit_avc_message_t_get_timestamp_nano(self)
    def get_source_user(self): return _seaudit.seaudit_avc_message_t_get_source_user(self)
    def get_source_role(self): return _seaudit.seaudit_avc_message_t_get_source_role(self)
    def get_source_type(self): return _seaudit.seaudit_avc_message_t_get_source_type(self)
    def get_target_user(self): return _seaudit.seaudit_avc_message_t_get_target_user(self)
    def get_target_role(self): return _seaudit.seaudit_avc_message_t_get_target_role(self)
    def get_target_type(self): return _seaudit.seaudit_avc_message_t_get_target_type(self)
    def get_object_class(self): return _seaudit.seaudit_avc_message_t_get_object_class(self)
    def get_perm(self): return _seaudit.seaudit_avc_message_t_get_perm(self)
    def get_exe(self): return _seaudit.seaudit_avc_message_t_get_exe(self)
    def get_comm(self): return _seaudit.seaudit_avc_message_t_get_comm(self)
    def get_name(self): return _seaudit.seaudit_avc_message_t_get_name(self)
    def get_pid(self): return _seaudit.seaudit_avc_message_t_get_pid(self)
    def get_inode(self): return _seaudit.seaudit_avc_message_t_get_inode(self)
    def get_path(self): return _seaudit.seaudit_avc_message_t_get_path(self)
    def get_dev(self): return _seaudit.seaudit_avc_message_t_get_dev(self)
    def get_netif(self): return _seaudit.seaudit_avc_message_t_get_netif(self)
    def get_port(self): return _seaudit.seaudit_avc_message_t_get_port(self)
    def get_laddr(self): return _seaudit.seaudit_avc_message_t_get_laddr(self)
    def get_lport(self): return _seaudit.seaudit_avc_message_t_get_lport(self)
    def get_faddr(self): return _seaudit.seaudit_avc_message_t_get_faddr(self)
    def get_fport(self): return _seaudit.seaudit_avc_message_t_get_fport(self)
    def get_saddr(self): return _seaudit.seaudit_avc_message_t_get_saddr(self)
    def get_sport(self): return _seaudit.seaudit_avc_message_t_get_sport(self)
    def get_daddr(self): return _seaudit.seaudit_avc_message_t_get_daddr(self)
    def get_dport(self): return _seaudit.seaudit_avc_message_t_get_dport(self)
    def get_key(self): return _seaudit.seaudit_avc_message_t_get_key(self)
    def get_cap(self): return _seaudit.seaudit_avc_message_t_get_cap(self)
seaudit_avc_message_t_swigregister = _seaudit.seaudit_avc_message_t_swigregister
seaudit_avc_message_t_swigregister(seaudit_avc_message_t)


def seaudit_avc_message_from_void(*args):
  return _seaudit.seaudit_avc_message_from_void(*args)
seaudit_avc_message_from_void = _seaudit.seaudit_avc_message_from_void

def seaudit_log_parse(*args):
  return _seaudit.seaudit_log_parse(*args)
seaudit_log_parse = _seaudit.seaudit_log_parse

def seaudit_log_parse_buffer(*args):
  return _seaudit.seaudit_log_parse_buffer(*args)
seaudit_log_parse_buffer = _seaudit.seaudit_log_parse_buffer
SEAUDIT_FILTER_MATCH_ALL = _seaudit.SEAUDIT_FILTER_MATCH_ALL
SEAUDIT_FILTER_MATCH_ANY = _seaudit.SEAUDIT_FILTER_MATCH_ANY
SEAUDIT_FILTER_VISIBLE_SHOW = _seaudit.SEAUDIT_FILTER_VISIBLE_SHOW
SEAUDIT_FILTER_VISIBLE_HIDE = _seaudit.SEAUDIT_FILTER_VISIBLE_HIDE
SEAUDIT_FILTER_DATE_MATCH_BEFORE = _seaudit.SEAUDIT_FILTER_DATE_MATCH_BEFORE
SEAUDIT_FILTER_DATE_MATCH_AFTER = _seaudit.SEAUDIT_FILTER_DATE_MATCH_AFTER
SEAUDIT_FILTER_DATE_MATCH_BETWEEN = _seaudit.SEAUDIT_FILTER_DATE_MATCH_BETWEEN
class seaudit_filter_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_filter_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_filter_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _seaudit.new_seaudit_filter_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_filter_t
    __del__ = lambda self : None;
    def save(self, *args): return _seaudit.seaudit_filter_t_save(self, *args)
    def set_match(self, *args): return _seaudit.seaudit_filter_t_set_match(self, *args)
    def get_match(self): return _seaudit.seaudit_filter_t_get_match(self)
    def set_name(self, *args): return _seaudit.seaudit_filter_t_set_name(self, *args)
    def get_name(self): return _seaudit.seaudit_filter_t_get_name(self)
    def set_description(self, *args): return _seaudit.seaudit_filter_t_set_description(self, *args)
    def get_description(self): return _seaudit.seaudit_filter_t_get_description(self)
    def set_strict(self, *args): return _seaudit.seaudit_filter_t_set_strict(self, *args)
    def get_strict(self): return _seaudit.seaudit_filter_t_get_strict(self)
    def set_source_user(self, *args): return _seaudit.seaudit_filter_t_set_source_user(self, *args)
    def get_source_user(self): return _seaudit.seaudit_filter_t_get_source_user(self)
    def set_source_role(self, *args): return _seaudit.seaudit_filter_t_set_source_role(self, *args)
    def get_source_role(self): return _seaudit.seaudit_filter_t_get_source_role(self)
    def set_source_type(self, *args): return _seaudit.seaudit_filter_t_set_source_type(self, *args)
    def get_source_type(self): return _seaudit.seaudit_filter_t_get_source_type(self)
    def set_target_user(self, *args): return _seaudit.seaudit_filter_t_set_target_user(self, *args)
    def get_target_user(self): return _seaudit.seaudit_filter_t_get_target_user(self)
    def set_target_role(self, *args): return _seaudit.seaudit_filter_t_set_target_role(self, *args)
    def get_target_role(self): return _seaudit.seaudit_filter_t_get_target_role(self)
    def set_target_type(self, *args): return _seaudit.seaudit_filter_t_set_target_type(self, *args)
    def get_target_type(self): return _seaudit.seaudit_filter_t_get_target_type(self)
    def set_target_class(self, *args): return _seaudit.seaudit_filter_t_set_target_class(self, *args)
    def get_target_class(self): return _seaudit.seaudit_filter_t_get_target_class(self)
    def set_permission(self, *args): return _seaudit.seaudit_filter_t_set_permission(self, *args)
    def get_permission(self): return _seaudit.seaudit_filter_t_get_permission(self)
    def set_executable(self, *args): return _seaudit.seaudit_filter_t_set_executable(self, *args)
    def get_executable(self): return _seaudit.seaudit_filter_t_get_executable(self)
    def set_host(self, *args): return _seaudit.seaudit_filter_t_set_host(self, *args)
    def get_host(self): return _seaudit.seaudit_filter_t_get_host(self)
    def set_path(self, *args): return _seaudit.seaudit_filter_t_set_path(self, *args)
    def get_path(self): return _seaudit.seaudit_filter_t_get_path(self)
    def set_command(self, *args): return _seaudit.seaudit_filter_t_set_command(self, *args)
    def set_inode(self, *args): return _seaudit.seaudit_filter_t_set_inode(self, *args)
    def get_inode(self): return _seaudit.seaudit_filter_t_get_inode(self)
    def set_pid(self, *args): return _seaudit.seaudit_filter_t_set_pid(self, *args)
    def get_pid(self): return _seaudit.seaudit_filter_t_get_pid(self)
    def get_command(self): return _seaudit.seaudit_filter_t_get_command(self)
    def set_anyaddr(self, *args): return _seaudit.seaudit_filter_t_set_anyaddr(self, *args)
    def get_anyaddr(self): return _seaudit.seaudit_filter_t_get_anyaddr(self)
    def set_anyport(self, *args): return _seaudit.seaudit_filter_t_set_anyport(self, *args)
    def get_anyport(self): return _seaudit.seaudit_filter_t_get_anyport(self)
    def set_laddr(self, *args): return _seaudit.seaudit_filter_t_set_laddr(self, *args)
    def get_laddr(self): return _seaudit.seaudit_filter_t_get_laddr(self)
    def set_lport(self, *args): return _seaudit.seaudit_filter_t_set_lport(self, *args)
    def get_lport(self): return _seaudit.seaudit_filter_t_get_lport(self)
    def set_faddr(self, *args): return _seaudit.seaudit_filter_t_set_faddr(self, *args)
    def get_faddr(self): return _seaudit.seaudit_filter_t_get_faddr(self)
    def set_fport(self, *args): return _seaudit.seaudit_filter_t_set_fport(self, *args)
    def get_fport(self): return _seaudit.seaudit_filter_t_get_fport(self)
    def set_saddr(self, *args): return _seaudit.seaudit_filter_t_set_saddr(self, *args)
    def get_saddr(self): return _seaudit.seaudit_filter_t_get_saddr(self)
    def set_sport(self, *args): return _seaudit.seaudit_filter_t_set_sport(self, *args)
    def get_sport(self): return _seaudit.seaudit_filter_t_get_sport(self)
    def set_daddr(self, *args): return _seaudit.seaudit_filter_t_set_daddr(self, *args)
    def get_daddr(self): return _seaudit.seaudit_filter_t_get_daddr(self)
    def set_dport(self, *args): return _seaudit.seaudit_filter_t_set_dport(self, *args)
    def get_dport(self): return _seaudit.seaudit_filter_t_get_dport(self)
    def set_port(self, *args): return _seaudit.seaudit_filter_t_set_port(self, *args)
    def get_port(self): return _seaudit.seaudit_filter_t_get_port(self)
    def set_netif(self, *args): return _seaudit.seaudit_filter_t_set_netif(self, *args)
    def get_netif(self): return _seaudit.seaudit_filter_t_get_netif(self)
    def set_key(self, *args): return _seaudit.seaudit_filter_t_set_key(self, *args)
    def get_key(self): return _seaudit.seaudit_filter_t_get_key(self)
    def set_cap(self, *args): return _seaudit.seaudit_filter_t_set_cap(self, *args)
    def get_cap(self): return _seaudit.seaudit_filter_t_get_cap(self)
    def set_message_type(self, *args): return _seaudit.seaudit_filter_t_set_message_type(self, *args)
    def get_message_type(self): return _seaudit.seaudit_filter_t_get_message_type(self)
    def set_date(self, *args): return _seaudit.seaudit_filter_t_set_date(self, *args)
    def get_start_date(self): return _seaudit.seaudit_filter_t_get_start_date(self)
    def get_end_date(self): return _seaudit.seaudit_filter_t_get_end_date(self)
    def get_date_match(self): return _seaudit.seaudit_filter_t_get_date_match(self)
seaudit_filter_t_swigregister = _seaudit.seaudit_filter_t_swigregister
seaudit_filter_t_swigregister(seaudit_filter_t)


def seaudit_filter_create_from_file(*args):
  return _seaudit.seaudit_filter_create_from_file(*args)
seaudit_filter_create_from_file = _seaudit.seaudit_filter_create_from_file

def seaudit_filter_from_void(*args):
  return _seaudit.seaudit_filter_from_void(*args)
seaudit_filter_from_void = _seaudit.seaudit_filter_from_void
class seaudit_sort_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_sort_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_sort_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _seaudit.new_seaudit_sort_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_sort_t
    __del__ = lambda self : None;
seaudit_sort_t_swigregister = _seaudit.seaudit_sort_t_swigregister
seaudit_sort_t_swigregister(seaudit_sort_t)


def seaudit_sort_by_message_type(*args):
  return _seaudit.seaudit_sort_by_message_type(*args)
seaudit_sort_by_message_type = _seaudit.seaudit_sort_by_message_type

def seaudit_sort_by_date(*args):
  return _seaudit.seaudit_sort_by_date(*args)
seaudit_sort_by_date = _seaudit.seaudit_sort_by_date

def seaudit_sort_by_host(*args):
  return _seaudit.seaudit_sort_by_host(*args)
seaudit_sort_by_host = _seaudit.seaudit_sort_by_host

def seaudit_sort_by_permission(*args):
  return _seaudit.seaudit_sort_by_permission(*args)
seaudit_sort_by_permission = _seaudit.seaudit_sort_by_permission

def seaudit_sort_by_source_user(*args):
  return _seaudit.seaudit_sort_by_source_user(*args)
seaudit_sort_by_source_user = _seaudit.seaudit_sort_by_source_user

def seaudit_sort_by_source_role(*args):
  return _seaudit.seaudit_sort_by_source_role(*args)
seaudit_sort_by_source_role = _seaudit.seaudit_sort_by_source_role

def seaudit_sort_by_source_type(*args):
  return _seaudit.seaudit_sort_by_source_type(*args)
seaudit_sort_by_source_type = _seaudit.seaudit_sort_by_source_type

def seaudit_sort_by_target_user(*args):
  return _seaudit.seaudit_sort_by_target_user(*args)
seaudit_sort_by_target_user = _seaudit.seaudit_sort_by_target_user

def seaudit_sort_by_target_role(*args):
  return _seaudit.seaudit_sort_by_target_role(*args)
seaudit_sort_by_target_role = _seaudit.seaudit_sort_by_target_role

def seaudit_sort_by_target_type(*args):
  return _seaudit.seaudit_sort_by_target_type(*args)
seaudit_sort_by_target_type = _seaudit.seaudit_sort_by_target_type

def seaudit_sort_by_object_class(*args):
  return _seaudit.seaudit_sort_by_object_class(*args)
seaudit_sort_by_object_class = _seaudit.seaudit_sort_by_object_class

def seaudit_sort_by_executable(*args):
  return _seaudit.seaudit_sort_by_executable(*args)
seaudit_sort_by_executable = _seaudit.seaudit_sort_by_executable

def seaudit_sort_by_command(*args):
  return _seaudit.seaudit_sort_by_command(*args)
seaudit_sort_by_command = _seaudit.seaudit_sort_by_command

def seaudit_sort_by_name(*args):
  return _seaudit.seaudit_sort_by_name(*args)
seaudit_sort_by_name = _seaudit.seaudit_sort_by_name

def seaudit_sort_by_path(*args):
  return _seaudit.seaudit_sort_by_path(*args)
seaudit_sort_by_path = _seaudit.seaudit_sort_by_path

def seaudit_sort_by_device(*args):
  return _seaudit.seaudit_sort_by_device(*args)
seaudit_sort_by_device = _seaudit.seaudit_sort_by_device

def seaudit_sort_by_inode(*args):
  return _seaudit.seaudit_sort_by_inode(*args)
seaudit_sort_by_inode = _seaudit.seaudit_sort_by_inode

def seaudit_sort_by_pid(*args):
  return _seaudit.seaudit_sort_by_pid(*args)
seaudit_sort_by_pid = _seaudit.seaudit_sort_by_pid

def seaudit_sort_by_port(*args):
  return _seaudit.seaudit_sort_by_port(*args)
seaudit_sort_by_port = _seaudit.seaudit_sort_by_port

def seaudit_sort_by_laddr(*args):
  return _seaudit.seaudit_sort_by_laddr(*args)
seaudit_sort_by_laddr = _seaudit.seaudit_sort_by_laddr

def seaudit_sort_by_lport(*args):
  return _seaudit.seaudit_sort_by_lport(*args)
seaudit_sort_by_lport = _seaudit.seaudit_sort_by_lport

def seaudit_sort_by_faddr(*args):
  return _seaudit.seaudit_sort_by_faddr(*args)
seaudit_sort_by_faddr = _seaudit.seaudit_sort_by_faddr

def seaudit_sort_by_fport(*args):
  return _seaudit.seaudit_sort_by_fport(*args)
seaudit_sort_by_fport = _seaudit.seaudit_sort_by_fport

def seaudit_sort_by_saddr(*args):
  return _seaudit.seaudit_sort_by_saddr(*args)
seaudit_sort_by_saddr = _seaudit.seaudit_sort_by_saddr

def seaudit_sort_by_sport(*args):
  return _seaudit.seaudit_sort_by_sport(*args)
seaudit_sort_by_sport = _seaudit.seaudit_sort_by_sport

def seaudit_sort_by_daddr(*args):
  return _seaudit.seaudit_sort_by_daddr(*args)
seaudit_sort_by_daddr = _seaudit.seaudit_sort_by_daddr

def seaudit_sort_by_dport(*args):
  return _seaudit.seaudit_sort_by_dport(*args)
seaudit_sort_by_dport = _seaudit.seaudit_sort_by_dport

def seaudit_sort_by_key(*args):
  return _seaudit.seaudit_sort_by_key(*args)
seaudit_sort_by_key = _seaudit.seaudit_sort_by_key

def seaudit_sort_by_cap(*args):
  return _seaudit.seaudit_sort_by_cap(*args)
seaudit_sort_by_cap = _seaudit.seaudit_sort_by_cap
class seaudit_model_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_model_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_model_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _seaudit.new_seaudit_model_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_model_t
    __del__ = lambda self : None;
    def save(self, *args): return _seaudit.seaudit_model_t_save(self, *args)
    def get_name(self): return _seaudit.seaudit_model_t_get_name(self)
    def set_name(self, *args): return _seaudit.seaudit_model_t_set_name(self, *args)
    def append_log(self, *args): return _seaudit.seaudit_model_t_append_log(self, *args)
    def append_filter(self, *args): return _seaudit.seaudit_model_t_append_filter(self, *args)
    def get_filters(self): return _seaudit.seaudit_model_t_get_filters(self)
    def remove_filter(self, *args): return _seaudit.seaudit_model_t_remove_filter(self, *args)
    def set_filter_match(self, *args): return _seaudit.seaudit_model_t_set_filter_match(self, *args)
    def get_filter_match(self): return _seaudit.seaudit_model_t_get_filter_match(self)
    def set_filter_visible(self, *args): return _seaudit.seaudit_model_t_set_filter_visible(self, *args)
    def get_filter_visible(self): return _seaudit.seaudit_model_t_get_filter_visible(self)
    def append_sort(self, *args): return _seaudit.seaudit_model_t_append_sort(self, *args)
    def clear_sorts(self): return _seaudit.seaudit_model_t_clear_sorts(self)
    def is_changed(self): return _seaudit.seaudit_model_t_is_changed(self)
    def get_messages(self, *args): return _seaudit.seaudit_model_t_get_messages(self, *args)
    def get_malformed_messages(self, *args): return _seaudit.seaudit_model_t_get_malformed_messages(self, *args)
    def hide_message(self, *args): return _seaudit.seaudit_model_t_hide_message(self, *args)
    def get_num_allows(self, *args): return _seaudit.seaudit_model_t_get_num_allows(self, *args)
    def get_num_denies(self, *args): return _seaudit.seaudit_model_t_get_num_denies(self, *args)
    def get_num_bools(self, *args): return _seaudit.seaudit_model_t_get_num_bools(self, *args)
    def get_num_loads(self, *args): return _seaudit.seaudit_model_t_get_num_loads(self, *args)
seaudit_model_t_swigregister = _seaudit.seaudit_model_t_swigregister
seaudit_model_t_swigregister(seaudit_model_t)

SEAUDIT_REPORT_FORMAT_TEXT = _seaudit.SEAUDIT_REPORT_FORMAT_TEXT
SEAUDIT_REPORT_FORMAT_HTML = _seaudit.SEAUDIT_REPORT_FORMAT_HTML
class seaudit_report_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, seaudit_report_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, seaudit_report_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _seaudit.new_seaudit_report_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _seaudit.delete_seaudit_report_t
    __del__ = lambda self : None;
    def write(self, *args): return _seaudit.seaudit_report_t_write(self, *args)
    def set_format(self, *args): return _seaudit.seaudit_report_t_set_format(self, *args)
    def set_configuration(self, *args): return _seaudit.seaudit_report_t_set_configuration(self, *args)
    def set_stylesheet(self, *args): return _seaudit.seaudit_report_t_set_stylesheet(self, *args)
    def set_malformed(self, *args): return _seaudit.seaudit_report_t_set_malformed(self, *args)
seaudit_report_t_swigregister = _seaudit.seaudit_report_t_swigregister
seaudit_report_t_swigregister(seaudit_report_t)



