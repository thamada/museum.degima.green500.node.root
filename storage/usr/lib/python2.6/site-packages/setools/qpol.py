# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_qpol', [dirname(__file__)])
        except ImportError:
            import _qpol
            return _qpol
        if fp is not None:
            try:
                _mod = imp.load_module('_qpol', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _qpol = swig_import_helper()
    del swig_import_helper
else:
    import _qpol
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def libqpol_get_version():
  return _qpol.libqpol_get_version()
libqpol_get_version = _qpol.libqpol_get_version

def to_str(*args):
  return _qpol.to_str(*args)
to_str = _qpol.to_str

def qpol_default_policy_find():
  return _qpol.qpol_default_policy_find()
qpol_default_policy_find = _qpol.qpol_default_policy_find
QPOL_MODULE_UNKNOWN = _qpol.QPOL_MODULE_UNKNOWN
QPOL_MODULE_BASE = _qpol.QPOL_MODULE_BASE
QPOL_MODULE_OTHER = _qpol.QPOL_MODULE_OTHER
class qpol_module_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_module_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_module_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_module_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_module_t
    __del__ = lambda self : None;
    def get_path(self): return _qpol.qpol_module_t_get_path(self)
    def get_name(self): return _qpol.qpol_module_t_get_name(self)
    def get_version(self): return _qpol.qpol_module_t_get_version(self)
    def get_type(self): return _qpol.qpol_module_t_get_type(self)
    def get_enabled(self): return _qpol.qpol_module_t_get_enabled(self)
    def set_enabled(self, *args): return _qpol.qpol_module_t_set_enabled(self, *args)
qpol_module_t_swigregister = _qpol.qpol_module_t_swigregister
qpol_module_t_swigregister(qpol_module_t)

QPOL_POLICY_OPTION_NO_NEVERALLOWS = _qpol.QPOL_POLICY_OPTION_NO_NEVERALLOWS
QPOL_POLICY_OPTION_NO_RULES = _qpol.QPOL_POLICY_OPTION_NO_RULES
QPOL_POLICY_OPTION_MATCH_SYSTEM = _qpol.QPOL_POLICY_OPTION_MATCH_SYSTEM
class qpol_policy_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_policy_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_policy_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_policy_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_policy_t
    __del__ = lambda self : None;
    def reevaluate_conds(self): return _qpol.qpol_policy_t_reevaluate_conds(self)
    def append_module(self, *args): return _qpol.qpol_policy_t_append_module(self, *args)
    def rebuild(self, *args): return _qpol.qpol_policy_t_rebuild(self, *args)
    def get_version(self): return _qpol.qpol_policy_t_get_version(self)
    def get_type(self): return _qpol.qpol_policy_t_get_type(self)
    def has_capability(self, *args): return _qpol.qpol_policy_t_has_capability(self, *args)
    def build_syn_rule_table(self): return _qpol.qpol_policy_t_build_syn_rule_table(self)
    def get_module_iter(self): return _qpol.qpol_policy_t_get_module_iter(self)
    def get_type_iter(self): return _qpol.qpol_policy_t_get_type_iter(self)
    def get_role_iter(self): return _qpol.qpol_policy_t_get_role_iter(self)
    def get_level_iter(self): return _qpol.qpol_policy_t_get_level_iter(self)
    def get_cat_iter(self): return _qpol.qpol_policy_t_get_cat_iter(self)
    def get_user_iter(self): return _qpol.qpol_policy_t_get_user_iter(self)
    def get_bool_iter(self): return _qpol.qpol_policy_t_get_bool_iter(self)
    def get_class_iter(self, perm = None): return _qpol.qpol_policy_t_get_class_iter(self, perm)
    def get_common_iter(self, perm = None): return _qpol.qpol_policy_t_get_common_iter(self, perm)
    def get_fs_use_iter(self): return _qpol.qpol_policy_t_get_fs_use_iter(self)
    def get_genfscon_iter(self): return _qpol.qpol_policy_t_get_genfscon_iter(self)
    def get_isid_iter(self): return _qpol.qpol_policy_t_get_isid_iter(self)
    def get_netifcon_iter(self): return _qpol.qpol_policy_t_get_netifcon_iter(self)
    def get_nodecon_iter(self): return _qpol.qpol_policy_t_get_nodecon_iter(self)
    def get_portcon_iter(self): return _qpol.qpol_policy_t_get_portcon_iter(self)
    def get_constraint_iter(self): return _qpol.qpol_policy_t_get_constraint_iter(self)
    def get_validatetrans_iter(self): return _qpol.qpol_policy_t_get_validatetrans_iter(self)
    def get_role_allow_iter(self): return _qpol.qpol_policy_t_get_role_allow_iter(self)
    def get_role_trans_iter(self): return _qpol.qpol_policy_t_get_role_trans_iter(self)
    def get_range_trans_iter(self): return _qpol.qpol_policy_t_get_range_trans_iter(self)
    def get_avrule_iter(self, *args): return _qpol.qpol_policy_t_get_avrule_iter(self, *args)
    def get_terule_iter(self, *args): return _qpol.qpol_policy_t_get_terule_iter(self, *args)
    def get_cond_iter(self): return _qpol.qpol_policy_t_get_cond_iter(self)
qpol_policy_t_swigregister = _qpol.qpol_policy_t_swigregister
qpol_policy_t_swigregister(qpol_policy_t)

QPOL_POLICY_UNKNOWN = _qpol.QPOL_POLICY_UNKNOWN
QPOL_POLICY_KERNEL_SOURCE = _qpol.QPOL_POLICY_KERNEL_SOURCE
QPOL_POLICY_KERNEL_BINARY = _qpol.QPOL_POLICY_KERNEL_BINARY
QPOL_POLICY_MODULE_BINARY = _qpol.QPOL_POLICY_MODULE_BINARY
QPOL_CAP_ATTRIB_NAMES = _qpol.QPOL_CAP_ATTRIB_NAMES
QPOL_CAP_SYN_RULES = _qpol.QPOL_CAP_SYN_RULES
QPOL_CAP_LINE_NUMBERS = _qpol.QPOL_CAP_LINE_NUMBERS
QPOL_CAP_CONDITIONALS = _qpol.QPOL_CAP_CONDITIONALS
QPOL_CAP_MLS = _qpol.QPOL_CAP_MLS
QPOL_CAP_MODULES = _qpol.QPOL_CAP_MODULES
QPOL_CAP_RULES_LOADED = _qpol.QPOL_CAP_RULES_LOADED
QPOL_CAP_SOURCE = _qpol.QPOL_CAP_SOURCE
QPOL_CAP_NEVERALLOW = _qpol.QPOL_CAP_NEVERALLOW
class qpol_iterator_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_iterator_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_iterator_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_iterator_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_iterator_t
    __del__ = lambda self : None;
    def get_item(self): return _qpol.qpol_iterator_t_get_item(self)
    def next(self): return _qpol.qpol_iterator_t_next(self)
    def end(self): return _qpol.qpol_iterator_t_end(self)
    def get_size(self): return _qpol.qpol_iterator_t_get_size(self)
qpol_iterator_t_swigregister = _qpol.qpol_iterator_t_swigregister
qpol_iterator_t_swigregister(qpol_iterator_t)

class qpol_type_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_type_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_type_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_type_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_type_t
    __del__ = lambda self : None;
    def get_name(self, *args): return _qpol.qpol_type_t_get_name(self, *args)
    def get_value(self, *args): return _qpol.qpol_type_t_get_value(self, *args)
    def get_isalias(self, *args): return _qpol.qpol_type_t_get_isalias(self, *args)
    def get_isattr(self, *args): return _qpol.qpol_type_t_get_isattr(self, *args)
    def get_ispermissive(self, *args): return _qpol.qpol_type_t_get_ispermissive(self, *args)
    def get_type_iter(self, *args): return _qpol.qpol_type_t_get_type_iter(self, *args)
    def get_attr_iter(self, *args): return _qpol.qpol_type_t_get_attr_iter(self, *args)
    def get_alias_iter(self, *args): return _qpol.qpol_type_t_get_alias_iter(self, *args)
qpol_type_t_swigregister = _qpol.qpol_type_t_swigregister
qpol_type_t_swigregister(qpol_type_t)


def qpol_type_from_void(*args):
  return _qpol.qpol_type_from_void(*args)
qpol_type_from_void = _qpol.qpol_type_from_void
class qpol_role_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_role_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_role_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_role_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_role_t
    __del__ = lambda self : None;
    def get_value(self, *args): return _qpol.qpol_role_t_get_value(self, *args)
    def get_name(self, *args): return _qpol.qpol_role_t_get_name(self, *args)
    def get_type_iter(self, *args): return _qpol.qpol_role_t_get_type_iter(self, *args)
    def get_dominate_iter(self, *args): return _qpol.qpol_role_t_get_dominate_iter(self, *args)
qpol_role_t_swigregister = _qpol.qpol_role_t_swigregister
qpol_role_t_swigregister(qpol_role_t)


def qpol_role_from_void(*args):
  return _qpol.qpol_role_from_void(*args)
qpol_role_from_void = _qpol.qpol_role_from_void
class qpol_level_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_level_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_level_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_level_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_level_t
    __del__ = lambda self : None;
    def get_isalias(self, *args): return _qpol.qpol_level_t_get_isalias(self, *args)
    def get_value(self, *args): return _qpol.qpol_level_t_get_value(self, *args)
    def get_name(self, *args): return _qpol.qpol_level_t_get_name(self, *args)
    def get_cat_iter(self, *args): return _qpol.qpol_level_t_get_cat_iter(self, *args)
    def get_alias_iter(self, *args): return _qpol.qpol_level_t_get_alias_iter(self, *args)
qpol_level_t_swigregister = _qpol.qpol_level_t_swigregister
qpol_level_t_swigregister(qpol_level_t)


def qpol_level_from_void(*args):
  return _qpol.qpol_level_from_void(*args)
qpol_level_from_void = _qpol.qpol_level_from_void
class qpol_cat_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_cat_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_cat_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_cat_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_cat_t
    __del__ = lambda self : None;
    def get_isalias(self, *args): return _qpol.qpol_cat_t_get_isalias(self, *args)
    def get_value(self, *args): return _qpol.qpol_cat_t_get_value(self, *args)
    def get_name(self, *args): return _qpol.qpol_cat_t_get_name(self, *args)
    def get_alias_iter(self, *args): return _qpol.qpol_cat_t_get_alias_iter(self, *args)
qpol_cat_t_swigregister = _qpol.qpol_cat_t_swigregister
qpol_cat_t_swigregister(qpol_cat_t)


def qpol_cat_from_void(*args):
  return _qpol.qpol_cat_from_void(*args)
qpol_cat_from_void = _qpol.qpol_cat_from_void
class qpol_mls_range_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_mls_range_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_mls_range_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_mls_range_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_mls_range_t
    __del__ = lambda self : None;
    def get_high_level(self, *args): return _qpol.qpol_mls_range_t_get_high_level(self, *args)
    def get_low_level(self, *args): return _qpol.qpol_mls_range_t_get_low_level(self, *args)
qpol_mls_range_t_swigregister = _qpol.qpol_mls_range_t_swigregister
qpol_mls_range_t_swigregister(qpol_mls_range_t)


def qpol_mls_range_from_void(*args):
  return _qpol.qpol_mls_range_from_void(*args)
qpol_mls_range_from_void = _qpol.qpol_mls_range_from_void
class qpol_mls_level_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_mls_level_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_mls_level_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_mls_level_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_mls_level_t
    __del__ = lambda self : None;
    def get_sens_name(self, *args): return _qpol.qpol_mls_level_t_get_sens_name(self, *args)
    def get_cat_iter(self, *args): return _qpol.qpol_mls_level_t_get_cat_iter(self, *args)
qpol_mls_level_t_swigregister = _qpol.qpol_mls_level_t_swigregister
qpol_mls_level_t_swigregister(qpol_mls_level_t)


def qpol_mls_level_from_void(*args):
  return _qpol.qpol_mls_level_from_void(*args)
qpol_mls_level_from_void = _qpol.qpol_mls_level_from_void
class qpol_user_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_user_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_user_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_user_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_user_t
    __del__ = lambda self : None;
    def get_value(self, *args): return _qpol.qpol_user_t_get_value(self, *args)
    def get_role_iter(self, *args): return _qpol.qpol_user_t_get_role_iter(self, *args)
    def get_range(self, *args): return _qpol.qpol_user_t_get_range(self, *args)
    def get_name(self, *args): return _qpol.qpol_user_t_get_name(self, *args)
    def get_dfltlevel(self, *args): return _qpol.qpol_user_t_get_dfltlevel(self, *args)
qpol_user_t_swigregister = _qpol.qpol_user_t_swigregister
qpol_user_t_swigregister(qpol_user_t)


def qpol_user_from_void(*args):
  return _qpol.qpol_user_from_void(*args)
qpol_user_from_void = _qpol.qpol_user_from_void
class qpol_bool_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_bool_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_bool_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_bool_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_bool_t
    __del__ = lambda self : None;
    def get_value(self, *args): return _qpol.qpol_bool_t_get_value(self, *args)
    def get_state(self, *args): return _qpol.qpol_bool_t_get_state(self, *args)
    def set_state(self, *args): return _qpol.qpol_bool_t_set_state(self, *args)
    def set_state_no_eval(self, *args): return _qpol.qpol_bool_t_set_state_no_eval(self, *args)
    def get_name(self, *args): return _qpol.qpol_bool_t_get_name(self, *args)
qpol_bool_t_swigregister = _qpol.qpol_bool_t_swigregister
qpol_bool_t_swigregister(qpol_bool_t)


def qpol_bool_from_void(*args):
  return _qpol.qpol_bool_from_void(*args)
qpol_bool_from_void = _qpol.qpol_bool_from_void
class qpol_context_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_context_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_context_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_context_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_context_t
    __del__ = lambda self : None;
    def get_user(self, *args): return _qpol.qpol_context_t_get_user(self, *args)
    def get_role(self, *args): return _qpol.qpol_context_t_get_role(self, *args)
    def get_type(self, *args): return _qpol.qpol_context_t_get_type(self, *args)
    def get_range(self, *args): return _qpol.qpol_context_t_get_range(self, *args)
qpol_context_t_swigregister = _qpol.qpol_context_t_swigregister
qpol_context_t_swigregister(qpol_context_t)


def qpol_context_from_void(*args):
  return _qpol.qpol_context_from_void(*args)
qpol_context_from_void = _qpol.qpol_context_from_void
class qpol_class_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_class_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_class_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_class_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_class_t
    __del__ = lambda self : None;
    def get_value(self, *args): return _qpol.qpol_class_t_get_value(self, *args)
    def get_common(self, *args): return _qpol.qpol_class_t_get_common(self, *args)
    def get_perm_iter(self, *args): return _qpol.qpol_class_t_get_perm_iter(self, *args)
    def get_constraint_iter(self, *args): return _qpol.qpol_class_t_get_constraint_iter(self, *args)
    def get_validatetrans_iter(self, *args): return _qpol.qpol_class_t_get_validatetrans_iter(self, *args)
    def get_name(self, *args): return _qpol.qpol_class_t_get_name(self, *args)
qpol_class_t_swigregister = _qpol.qpol_class_t_swigregister
qpol_class_t_swigregister(qpol_class_t)


def qpol_class_from_void(*args):
  return _qpol.qpol_class_from_void(*args)
qpol_class_from_void = _qpol.qpol_class_from_void
class qpol_common_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_common_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_common_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_common_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_common_t
    __del__ = lambda self : None;
    def get_value(self, *args): return _qpol.qpol_common_t_get_value(self, *args)
    def get_perm_iter(self, *args): return _qpol.qpol_common_t_get_perm_iter(self, *args)
    def get_name(self, *args): return _qpol.qpol_common_t_get_name(self, *args)
qpol_common_t_swigregister = _qpol.qpol_common_t_swigregister
qpol_common_t_swigregister(qpol_common_t)


def qpol_common_from_void(*args):
  return _qpol.qpol_common_from_void(*args)
qpol_common_from_void = _qpol.qpol_common_from_void
QPOL_FS_USE_XATTR = _qpol.QPOL_FS_USE_XATTR
QPOL_FS_USE_TRANS = _qpol.QPOL_FS_USE_TRANS
QPOL_FS_USE_TASK = _qpol.QPOL_FS_USE_TASK
QPOL_FS_USE_GENFS = _qpol.QPOL_FS_USE_GENFS
QPOL_FS_USE_NONE = _qpol.QPOL_FS_USE_NONE
QPOL_FS_USE_PSID = _qpol.QPOL_FS_USE_PSID
class qpol_fs_use_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_fs_use_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_fs_use_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_fs_use_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_fs_use_t
    __del__ = lambda self : None;
    def get_name(self, *args): return _qpol.qpol_fs_use_t_get_name(self, *args)
    def get_behavior(self, *args): return _qpol.qpol_fs_use_t_get_behavior(self, *args)
    def get_context(self, *args): return _qpol.qpol_fs_use_t_get_context(self, *args)
qpol_fs_use_t_swigregister = _qpol.qpol_fs_use_t_swigregister
qpol_fs_use_t_swigregister(qpol_fs_use_t)


def qpol_fs_use_from_void(*args):
  return _qpol.qpol_fs_use_from_void(*args)
qpol_fs_use_from_void = _qpol.qpol_fs_use_from_void
QPOL_CLASS_ALL = _qpol.QPOL_CLASS_ALL
QPOL_CLASS_BLK_FILE = _qpol.QPOL_CLASS_BLK_FILE
QPOL_CLASS_CHR_FILE = _qpol.QPOL_CLASS_CHR_FILE
QPOL_CLASS_DIR = _qpol.QPOL_CLASS_DIR
QPOL_CLASS_FIFO_FILE = _qpol.QPOL_CLASS_FIFO_FILE
QPOL_CLASS_FILE = _qpol.QPOL_CLASS_FILE
QPOL_CLASS_LNK_FILE = _qpol.QPOL_CLASS_LNK_FILE
QPOL_CLASS_SOCK_FILE = _qpol.QPOL_CLASS_SOCK_FILE
class qpol_genfscon_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_genfscon_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_genfscon_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_genfscon_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_genfscon_t
    __del__ = lambda self : None;
    def get_name(self, *args): return _qpol.qpol_genfscon_t_get_name(self, *args)
    def get_path(self, *args): return _qpol.qpol_genfscon_t_get_path(self, *args)
    def get_class(self, *args): return _qpol.qpol_genfscon_t_get_class(self, *args)
    def get_context(self, *args): return _qpol.qpol_genfscon_t_get_context(self, *args)
qpol_genfscon_t_swigregister = _qpol.qpol_genfscon_t_swigregister
qpol_genfscon_t_swigregister(qpol_genfscon_t)


def qpol_genfscon_from_void(*args):
  return _qpol.qpol_genfscon_from_void(*args)
qpol_genfscon_from_void = _qpol.qpol_genfscon_from_void
class qpol_isid_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_isid_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_isid_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_isid_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_isid_t
    __del__ = lambda self : None;
    def get_name(self, *args): return _qpol.qpol_isid_t_get_name(self, *args)
    def get_context(self, *args): return _qpol.qpol_isid_t_get_context(self, *args)
qpol_isid_t_swigregister = _qpol.qpol_isid_t_swigregister
qpol_isid_t_swigregister(qpol_isid_t)


def qpol_isid_from_void(*args):
  return _qpol.qpol_isid_from_void(*args)
qpol_isid_from_void = _qpol.qpol_isid_from_void
class qpol_netifcon_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_netifcon_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_netifcon_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_netifcon_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_netifcon_t
    __del__ = lambda self : None;
    def get_name(self, *args): return _qpol.qpol_netifcon_t_get_name(self, *args)
    def get_msg_con(self, *args): return _qpol.qpol_netifcon_t_get_msg_con(self, *args)
    def get_if_con(self, *args): return _qpol.qpol_netifcon_t_get_if_con(self, *args)
qpol_netifcon_t_swigregister = _qpol.qpol_netifcon_t_swigregister
qpol_netifcon_t_swigregister(qpol_netifcon_t)


def qpol_netifcon_from_void(*args):
  return _qpol.qpol_netifcon_from_void(*args)
qpol_netifcon_from_void = _qpol.qpol_netifcon_from_void
QPOL_IPV4 = _qpol.QPOL_IPV4
QPOL_IPV6 = _qpol.QPOL_IPV6
class qpol_nodecon_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_nodecon_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_nodecon_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_nodecon_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_nodecon_t
    __del__ = lambda self : None;
    def get_addr(self, *args): return _qpol.qpol_nodecon_t_get_addr(self, *args)
    def get_mask(self, *args): return _qpol.qpol_nodecon_t_get_mask(self, *args)
    def get_protocol(self, *args): return _qpol.qpol_nodecon_t_get_protocol(self, *args)
    def get_context(self, *args): return _qpol.qpol_nodecon_t_get_context(self, *args)
qpol_nodecon_t_swigregister = _qpol.qpol_nodecon_t_swigregister
qpol_nodecon_t_swigregister(qpol_nodecon_t)


def qpol_nodecon_from_void(*args):
  return _qpol.qpol_nodecon_from_void(*args)
qpol_nodecon_from_void = _qpol.qpol_nodecon_from_void
IPPROTO_TCP = _qpol.IPPROTO_TCP
IPPROTO_UDP = _qpol.IPPROTO_UDP
class qpol_portcon_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_portcon_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_portcon_t, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _qpol.new_qpol_portcon_t(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_portcon_t
    __del__ = lambda self : None;
    def get_low_port(self, *args): return _qpol.qpol_portcon_t_get_low_port(self, *args)
    def get_high_port(self, *args): return _qpol.qpol_portcon_t_get_high_port(self, *args)
    def get_protocol(self, *args): return _qpol.qpol_portcon_t_get_protocol(self, *args)
    def get_context(self, *args): return _qpol.qpol_portcon_t_get_context(self, *args)
qpol_portcon_t_swigregister = _qpol.qpol_portcon_t_swigregister
qpol_portcon_t_swigregister(qpol_portcon_t)


def qpol_portcon_from_void(*args):
  return _qpol.qpol_portcon_from_void(*args)
qpol_portcon_from_void = _qpol.qpol_portcon_from_void
class qpol_constraint_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_constraint_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_constraint_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_constraint_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_constraint_t
    __del__ = lambda self : None;
    def get_class(self, *args): return _qpol.qpol_constraint_t_get_class(self, *args)
    def get_perm_iter(self, *args): return _qpol.qpol_constraint_t_get_perm_iter(self, *args)
    def get_expr_iter(self, *args): return _qpol.qpol_constraint_t_get_expr_iter(self, *args)
qpol_constraint_t_swigregister = _qpol.qpol_constraint_t_swigregister
qpol_constraint_t_swigregister(qpol_constraint_t)


def qpol_constraint_from_void(*args):
  return _qpol.qpol_constraint_from_void(*args)
qpol_constraint_from_void = _qpol.qpol_constraint_from_void
class qpol_validatetrans_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_validatetrans_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_validatetrans_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_validatetrans_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_validatetrans_t
    __del__ = lambda self : None;
    def get_class(self, *args): return _qpol.qpol_validatetrans_t_get_class(self, *args)
    def get_expr_iter(self, *args): return _qpol.qpol_validatetrans_t_get_expr_iter(self, *args)
qpol_validatetrans_t_swigregister = _qpol.qpol_validatetrans_t_swigregister
qpol_validatetrans_t_swigregister(qpol_validatetrans_t)


def qpol_validatetrans_from_void(*args):
  return _qpol.qpol_validatetrans_from_void(*args)
qpol_validatetrans_from_void = _qpol.qpol_validatetrans_from_void
QPOL_CEXPR_TYPE_NOT = _qpol.QPOL_CEXPR_TYPE_NOT
QPOL_CEXPR_TYPE_AND = _qpol.QPOL_CEXPR_TYPE_AND
QPOL_CEXPR_TYPE_OR = _qpol.QPOL_CEXPR_TYPE_OR
QPOL_CEXPR_TYPE_ATTR = _qpol.QPOL_CEXPR_TYPE_ATTR
QPOL_CEXPR_TYPE_NAMES = _qpol.QPOL_CEXPR_TYPE_NAMES
QPOL_CEXPR_SYM_USER = _qpol.QPOL_CEXPR_SYM_USER
QPOL_CEXPR_SYM_ROLE = _qpol.QPOL_CEXPR_SYM_ROLE
QPOL_CEXPR_SYM_TYPE = _qpol.QPOL_CEXPR_SYM_TYPE
QPOL_CEXPR_SYM_TARGET = _qpol.QPOL_CEXPR_SYM_TARGET
QPOL_CEXPR_SYM_XTARGET = _qpol.QPOL_CEXPR_SYM_XTARGET
QPOL_CEXPR_SYM_L1L2 = _qpol.QPOL_CEXPR_SYM_L1L2
QPOL_CEXPR_SYM_L1H2 = _qpol.QPOL_CEXPR_SYM_L1H2
QPOL_CEXPR_SYM_H1L2 = _qpol.QPOL_CEXPR_SYM_H1L2
QPOL_CEXPR_SYM_H1H2 = _qpol.QPOL_CEXPR_SYM_H1H2
QPOL_CEXPR_SYM_L1H1 = _qpol.QPOL_CEXPR_SYM_L1H1
QPOL_CEXPR_SYM_L2H2 = _qpol.QPOL_CEXPR_SYM_L2H2
QPOL_CEXPR_OP_EQ = _qpol.QPOL_CEXPR_OP_EQ
QPOL_CEXPR_OP_NEQ = _qpol.QPOL_CEXPR_OP_NEQ
QPOL_CEXPR_OP_DOM = _qpol.QPOL_CEXPR_OP_DOM
QPOL_CEXPR_OP_DOMBY = _qpol.QPOL_CEXPR_OP_DOMBY
QPOL_CEXPR_OP_INCOMP = _qpol.QPOL_CEXPR_OP_INCOMP
class qpol_constraint_expr_node_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_constraint_expr_node_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_constraint_expr_node_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_constraint_expr_node_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_constraint_expr_node_t
    __del__ = lambda self : None;
    def get_expr_type(self, *args): return _qpol.qpol_constraint_expr_node_t_get_expr_type(self, *args)
    def get_sym_type(self, *args): return _qpol.qpol_constraint_expr_node_t_get_sym_type(self, *args)
    def get_op(self, *args): return _qpol.qpol_constraint_expr_node_t_get_op(self, *args)
    def get_names_iter(self, *args): return _qpol.qpol_constraint_expr_node_t_get_names_iter(self, *args)
qpol_constraint_expr_node_t_swigregister = _qpol.qpol_constraint_expr_node_t_swigregister
qpol_constraint_expr_node_t_swigregister(qpol_constraint_expr_node_t)


def qpol_constraint_expr_node_from_void(*args):
  return _qpol.qpol_constraint_expr_node_from_void(*args)
qpol_constraint_expr_node_from_void = _qpol.qpol_constraint_expr_node_from_void
class qpol_role_allow_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_role_allow_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_role_allow_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_role_allow_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_role_allow_t
    __del__ = lambda self : None;
    def get_source_role(self, *args): return _qpol.qpol_role_allow_t_get_source_role(self, *args)
    def get_target_role(self, *args): return _qpol.qpol_role_allow_t_get_target_role(self, *args)
qpol_role_allow_t_swigregister = _qpol.qpol_role_allow_t_swigregister
qpol_role_allow_t_swigregister(qpol_role_allow_t)


def qpol_role_allow_from_void(*args):
  return _qpol.qpol_role_allow_from_void(*args)
qpol_role_allow_from_void = _qpol.qpol_role_allow_from_void
class qpol_role_trans_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_role_trans_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_role_trans_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_role_trans_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_role_trans_t
    __del__ = lambda self : None;
    def get_source_role(self, *args): return _qpol.qpol_role_trans_t_get_source_role(self, *args)
    def get_target_type(self, *args): return _qpol.qpol_role_trans_t_get_target_type(self, *args)
    def get_default_role(self, *args): return _qpol.qpol_role_trans_t_get_default_role(self, *args)
qpol_role_trans_t_swigregister = _qpol.qpol_role_trans_t_swigregister
qpol_role_trans_t_swigregister(qpol_role_trans_t)


def qpol_role_trans_from_void(*args):
  return _qpol.qpol_role_trans_from_void(*args)
qpol_role_trans_from_void = _qpol.qpol_role_trans_from_void
class qpol_range_trans_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_range_trans_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_range_trans_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_range_trans_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_range_trans_t
    __del__ = lambda self : None;
    def get_source_type(self, *args): return _qpol.qpol_range_trans_t_get_source_type(self, *args)
    def get_target_type(self, *args): return _qpol.qpol_range_trans_t_get_target_type(self, *args)
    def get_target_class(self, *args): return _qpol.qpol_range_trans_t_get_target_class(self, *args)
    def get_range(self, *args): return _qpol.qpol_range_trans_t_get_range(self, *args)
qpol_range_trans_t_swigregister = _qpol.qpol_range_trans_t_swigregister
qpol_range_trans_t_swigregister(qpol_range_trans_t)


def qpol_range_trans_from_void(*args):
  return _qpol.qpol_range_trans_from_void(*args)
qpol_range_trans_from_void = _qpol.qpol_range_trans_from_void
QPOL_RULE_ALLOW = _qpol.QPOL_RULE_ALLOW
QPOL_RULE_NEVERALLOW = _qpol.QPOL_RULE_NEVERALLOW
QPOL_RULE_AUDITALLOW = _qpol.QPOL_RULE_AUDITALLOW
QPOL_RULE_DONTAUDIT = _qpol.QPOL_RULE_DONTAUDIT
class qpol_avrule_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_avrule_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_avrule_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_avrule_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_avrule_t
    __del__ = lambda self : None;
    def get_rule_type(self, *args): return _qpol.qpol_avrule_t_get_rule_type(self, *args)
    def get_source_type(self, *args): return _qpol.qpol_avrule_t_get_source_type(self, *args)
    def get_target_type(self, *args): return _qpol.qpol_avrule_t_get_target_type(self, *args)
    def get_object_class(self, *args): return _qpol.qpol_avrule_t_get_object_class(self, *args)
    def get_perm_iter(self, *args): return _qpol.qpol_avrule_t_get_perm_iter(self, *args)
    def get_cond(self, *args): return _qpol.qpol_avrule_t_get_cond(self, *args)
    def get_is_enabled(self, *args): return _qpol.qpol_avrule_t_get_is_enabled(self, *args)
    def get_which_list(self, *args): return _qpol.qpol_avrule_t_get_which_list(self, *args)
    def get_syn_avrule_iter(self, *args): return _qpol.qpol_avrule_t_get_syn_avrule_iter(self, *args)
qpol_avrule_t_swigregister = _qpol.qpol_avrule_t_swigregister
qpol_avrule_t_swigregister(qpol_avrule_t)


def qpol_avrule_from_void(*args):
  return _qpol.qpol_avrule_from_void(*args)
qpol_avrule_from_void = _qpol.qpol_avrule_from_void
QPOL_RULE_TYPE_TRANS = _qpol.QPOL_RULE_TYPE_TRANS
QPOL_RULE_TYPE_CHANGE = _qpol.QPOL_RULE_TYPE_CHANGE
QPOL_RULE_TYPE_MEMBER = _qpol.QPOL_RULE_TYPE_MEMBER
class qpol_terule_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_terule_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_terule_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_terule_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_terule_t
    __del__ = lambda self : None;
    def get_rule_type(self, *args): return _qpol.qpol_terule_t_get_rule_type(self, *args)
    def get_source_type(self, *args): return _qpol.qpol_terule_t_get_source_type(self, *args)
    def get_target_type(self, *args): return _qpol.qpol_terule_t_get_target_type(self, *args)
    def get_object_class(self, *args): return _qpol.qpol_terule_t_get_object_class(self, *args)
    def get_default_type(self, *args): return _qpol.qpol_terule_t_get_default_type(self, *args)
    def get_cond(self, *args): return _qpol.qpol_terule_t_get_cond(self, *args)
    def get_is_enabled(self, *args): return _qpol.qpol_terule_t_get_is_enabled(self, *args)
    def get_which_list(self, *args): return _qpol.qpol_terule_t_get_which_list(self, *args)
    def get_syn_terule_iter(self, *args): return _qpol.qpol_terule_t_get_syn_terule_iter(self, *args)
qpol_terule_t_swigregister = _qpol.qpol_terule_t_swigregister
qpol_terule_t_swigregister(qpol_terule_t)


def qpol_terule_from_void(*args):
  return _qpol.qpol_terule_from_void(*args)
qpol_terule_from_void = _qpol.qpol_terule_from_void
class qpol_cond_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_cond_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_cond_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_cond_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_cond_t
    __del__ = lambda self : None;
    def get_expr_node_iter(self, *args): return _qpol.qpol_cond_t_get_expr_node_iter(self, *args)
    def get_av_true_iter(self, *args): return _qpol.qpol_cond_t_get_av_true_iter(self, *args)
    def get_av_false_iter(self, *args): return _qpol.qpol_cond_t_get_av_false_iter(self, *args)
    def get_te_true_iter(self, *args): return _qpol.qpol_cond_t_get_te_true_iter(self, *args)
    def get_te_false_iter(self, *args): return _qpol.qpol_cond_t_get_te_false_iter(self, *args)
    def eval(self, *args): return _qpol.qpol_cond_t_eval(self, *args)
qpol_cond_t_swigregister = _qpol.qpol_cond_t_swigregister
qpol_cond_t_swigregister(qpol_cond_t)


def qpol_cond_from_void(*args):
  return _qpol.qpol_cond_from_void(*args)
qpol_cond_from_void = _qpol.qpol_cond_from_void
QPOL_COND_EXPR_BOOL = _qpol.QPOL_COND_EXPR_BOOL
QPOL_COND_EXPR_NOT = _qpol.QPOL_COND_EXPR_NOT
QPOL_COND_EXPR_OR = _qpol.QPOL_COND_EXPR_OR
QPOL_COND_EXPR_AND = _qpol.QPOL_COND_EXPR_AND
QPOL_COND_EXPR_XOR = _qpol.QPOL_COND_EXPR_XOR
QPOL_COND_EXPR_EQ = _qpol.QPOL_COND_EXPR_EQ
QPOL_COND_EXPR_NEQ = _qpol.QPOL_COND_EXPR_NEQ
class qpol_cond_expr_node_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_cond_expr_node_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_cond_expr_node_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_cond_expr_node_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_cond_expr_node_t
    __del__ = lambda self : None;
    def get_expr_type(self, *args): return _qpol.qpol_cond_expr_node_t_get_expr_type(self, *args)
    def get_bool(self, *args): return _qpol.qpol_cond_expr_node_t_get_bool(self, *args)
qpol_cond_expr_node_t_swigregister = _qpol.qpol_cond_expr_node_t_swigregister
qpol_cond_expr_node_t_swigregister(qpol_cond_expr_node_t)


def qpol_cond_expr_node_from_void(*args):
  return _qpol.qpol_cond_expr_node_from_void(*args)
qpol_cond_expr_node_from_void = _qpol.qpol_cond_expr_node_from_void
class qpol_type_set_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_type_set_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_type_set_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_type_set_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_type_set_t
    __del__ = lambda self : None;
    def get_included_types_iter(self, *args): return _qpol.qpol_type_set_t_get_included_types_iter(self, *args)
    def get_subtracted_types_iter(self, *args): return _qpol.qpol_type_set_t_get_subtracted_types_iter(self, *args)
    def get_is_star(self, *args): return _qpol.qpol_type_set_t_get_is_star(self, *args)
    def get_is_comp(self, *args): return _qpol.qpol_type_set_t_get_is_comp(self, *args)
qpol_type_set_t_swigregister = _qpol.qpol_type_set_t_swigregister
qpol_type_set_t_swigregister(qpol_type_set_t)


def qpol_type_set_from_void(*args):
  return _qpol.qpol_type_set_from_void(*args)
qpol_type_set_from_void = _qpol.qpol_type_set_from_void
class qpol_syn_avrule_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_syn_avrule_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_syn_avrule_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_syn_avrule_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_syn_avrule_t
    __del__ = lambda self : None;
    def get_rule_type(self, *args): return _qpol.qpol_syn_avrule_t_get_rule_type(self, *args)
    def get_source_type_set(self, *args): return _qpol.qpol_syn_avrule_t_get_source_type_set(self, *args)
    def get_target_type_set(self, *args): return _qpol.qpol_syn_avrule_t_get_target_type_set(self, *args)
    def get_is_target_self(self, *args): return _qpol.qpol_syn_avrule_t_get_is_target_self(self, *args)
    def get_class_iter(self, *args): return _qpol.qpol_syn_avrule_t_get_class_iter(self, *args)
    def get_perm_iter(self, *args): return _qpol.qpol_syn_avrule_t_get_perm_iter(self, *args)
    def get_lineno(self, *args): return _qpol.qpol_syn_avrule_t_get_lineno(self, *args)
    def get_cond(self, *args): return _qpol.qpol_syn_avrule_t_get_cond(self, *args)
    def get_is_enabled(self, *args): return _qpol.qpol_syn_avrule_t_get_is_enabled(self, *args)
qpol_syn_avrule_t_swigregister = _qpol.qpol_syn_avrule_t_swigregister
qpol_syn_avrule_t_swigregister(qpol_syn_avrule_t)


def qpol_syn_avrule_from_void(*args):
  return _qpol.qpol_syn_avrule_from_void(*args)
qpol_syn_avrule_from_void = _qpol.qpol_syn_avrule_from_void
class qpol_syn_terule_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qpol_syn_terule_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qpol_syn_terule_t, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _qpol.new_qpol_syn_terule_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _qpol.delete_qpol_syn_terule_t
    __del__ = lambda self : None;
    def get_rule_type(self, *args): return _qpol.qpol_syn_terule_t_get_rule_type(self, *args)
    def get_source_type_set(self, *args): return _qpol.qpol_syn_terule_t_get_source_type_set(self, *args)
    def get_target_type_set(self, *args): return _qpol.qpol_syn_terule_t_get_target_type_set(self, *args)
    def get_class_iter(self, *args): return _qpol.qpol_syn_terule_t_get_class_iter(self, *args)
    def get_default_type(self, *args): return _qpol.qpol_syn_terule_t_get_default_type(self, *args)
    def get_lineno(self, *args): return _qpol.qpol_syn_terule_t_get_lineno(self, *args)
    def get_cond(self, *args): return _qpol.qpol_syn_terule_t_get_cond(self, *args)
    def get_is_enabled(self, *args): return _qpol.qpol_syn_terule_t_get_is_enabled(self, *args)
qpol_syn_terule_t_swigregister = _qpol.qpol_syn_terule_t_swigregister
qpol_syn_terule_t_swigregister(qpol_syn_terule_t)


def qpol_syn_terule_from_void(*args):
  return _qpol.qpol_syn_terule_from_void(*args)
qpol_syn_terule_from_void = _qpol.qpol_syn_terule_from_void


