From 59f2d4a9b6db0541d5cc266f58cfc82faa25ffed Mon Sep 17 00:00:00 2001
From: Eli Cohen <eli@mellanox.co.il>
Date: Sun, 14 Nov 2010 15:00:29 +0200
Subject: [PATCH] mthca: Fix QP creation

Allow a consumer to request creation of a QP with max inline also for kernel
consumers. Since inline is not supported in kernel, return 0 in
max_inline_data, as is done for mlx4.

Signed-off-by: Eli Cohen <eli@mellanox.co.il>
---
 drivers/infiniband/hw/mthca/mthca_qp.c |   10 ++++++++--
 1 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/infiniband/hw/mthca/mthca_qp.c b/drivers/infiniband/hw/mthca/mthca_qp.c
index 4630ac3..4a4d133 100644
--- a/drivers/infiniband/hw/mthca/mthca_qp.c
+++ b/drivers/infiniband/hw/mthca/mthca_qp.c
@@ -1240,15 +1240,21 @@ static int mthca_set_qp_size(struct mthca_dev *dev, struct ib_qp_cap *cap,
 			     struct mthca_pd *pd, struct mthca_qp *qp)
 {
 	int max_data_size = mthca_max_data_size(dev, qp, dev->limits.max_desc_sz);
+        u32 max_inline_data;
 
 	/* Sanity check QP size before proceeding */
 	if (cap->max_send_wr  	 > dev->limits.max_wqes ||
 	    cap->max_recv_wr  	 > dev->limits.max_wqes ||
 	    cap->max_send_sge 	 > dev->limits.max_sg   ||
-	    cap->max_recv_sge 	 > dev->limits.max_sg   ||
+	    cap->max_recv_sge 	 > dev->limits.max_sg)
+		return -EINVAL;
+
+	if (pd->ibpd.uobject &&
 	    cap->max_inline_data > mthca_max_inline_data(pd, max_data_size))
 		return -EINVAL;
 
+	max_inline_data = pd->ibpd.uobject ? cap->max_inline_data : 0;
+
 	/*
 	 * For MLX transport we need 2 extra send gather entries:
 	 * one for the header and one for the checksum at the end
@@ -1268,7 +1274,7 @@ static int mthca_set_qp_size(struct mthca_dev *dev, struct ib_qp_cap *cap,
 
 	qp->rq.max_gs = cap->max_recv_sge;
 	qp->sq.max_gs = max_t(int, cap->max_send_sge,
-			      ALIGN(cap->max_inline_data + MTHCA_INLINE_HEADER_SIZE,
+			      ALIGN(max_inline_data + MTHCA_INLINE_HEADER_SIZE,
 				    MTHCA_INLINE_CHUNK_SIZE) /
 			      sizeof (struct mthca_data_seg));
 
-- 
1.7.3.2

