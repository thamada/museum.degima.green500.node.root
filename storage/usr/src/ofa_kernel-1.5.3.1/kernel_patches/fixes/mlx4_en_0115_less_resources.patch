From 870cdb230a7466daec15622e3d70de4264538265 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Sun, 25 Oct 2009 13:58:54 +0200
Subject: [PATCH] mlx4_en: Bidirectional BW improvements

When selecting TX ring, the "small" streams are moved instead of the large ones
it prevents large OUT of order packages.
Using less rings.

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/en_tx.c   |    2 +-
 drivers/net/mlx4/mlx4_en.h |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/mlx4/en_tx.c b/drivers/net/mlx4/en_tx.c
index 477a42f..d26fdb9 100644
--- a/drivers/net/mlx4/en_tx.c
+++ b/drivers/net/mlx4/en_tx.c
@@ -638,7 +638,7 @@ u16 mlx4_en_select_queue(struct net_device *dev, struct sk_buff *skb)
 	entry = &priv->tx_hash[hash_index];
 	if(unlikely(!entry->cnt)) {
 		tx_ind = hash_index & (MLX4_EN_NUM_HASH_RINGS / 2 - 1);
-		if (2 * entry->big_pkts > entry->small_pkts)
+		if (2 * entry->small_pkts > entry->big_pkts)
 			tx_ind += MLX4_EN_NUM_HASH_RINGS / 2;
 		entry->small_pkts = entry->big_pkts = 0;
 		entry->ring = tx_ind;
diff --git a/drivers/net/mlx4/mlx4_en.h b/drivers/net/mlx4/mlx4_en.h
index 183b0f0..7af3efb 100644
--- a/drivers/net/mlx4/mlx4_en.h
+++ b/drivers/net/mlx4/mlx4_en.h
@@ -92,7 +92,7 @@
 #define MLX4_EN_PAGE_SHIFT	12
 #define MLX4_EN_PAGE_SIZE	(1 << MLX4_EN_PAGE_SHIFT)
 #define MAX_TX_RINGS		(MLX4_EN_NUM_HASH_RINGS + 1 + MLX4_EN_NUM_PPP_RINGS)
-#define MAX_RX_RINGS		17
+#define MAX_RX_RINGS		9
 #define TXBB_SIZE		64
 #define HEADROOM		(2048 / TXBB_SIZE + 1)
 #define STAMP_STRIDE		64
@@ -138,7 +138,7 @@ enum {
 #define MLX4_EN_SMALL_PKT_SIZE		64
 #define MLX4_EN_TX_HASH_SIZE		256
 #define MLX4_EN_TX_HASH_MASK		(MLX4_EN_TX_HASH_SIZE - 1)
-#define MLX4_EN_NUM_HASH_RINGS		8
+#define MLX4_EN_NUM_HASH_RINGS		4
 #define MLX4_EN_NUM_PPP_RINGS		8
 #define MLX4_EN_DEF_TX_RING_SIZE	512
 #define MLX4_EN_DEF_RX_RING_SIZE  	1024
-- 
1.5.3.7

