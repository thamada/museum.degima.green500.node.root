From 05cc4c0d35988c80d0dbd6f9d038955f90b51901 Mon Sep 17 00:00:00 2001
From: Eli Cohen <eli@mellanox.co.il>
Date: Thu, 31 Dec 2009 15:45:38 +0200
Subject: [PATCH 07/12] ib_core: Add API to support RoCEE from userspace

Add ib_uverbs_get_mac() to be used by ibv_create_ah() to retirieve the remote
port's MAC address from the remote port's GID. Port link layer is also returned
by ibv_query_port().

Signed-off-by: Eli Cohen <eli@mellanox.co.il>
---
 drivers/infiniband/core/uverbs.h      |    1 +
 drivers/infiniband/core/uverbs_cmd.c  |   32 ++++++++++++++++++++++++++++++++
 drivers/infiniband/core/uverbs_main.c |    1 +
 drivers/infiniband/core/verbs.c       |    9 +++++++++
 include/rdma/ib_user_verbs.h          |   19 +++++++++++++++++--
 include/rdma/ib_verbs.h               |   12 ++++++++++++
 6 files changed, 72 insertions(+), 2 deletions(-)

Index: ofed_kernel-fixes/drivers/infiniband/core/uverbs.h
===================================================================
--- ofed_kernel-fixes.orig/drivers/infiniband/core/uverbs.h	2010-02-15 11:09:55.000000000 +0200
+++ ofed_kernel-fixes/drivers/infiniband/core/uverbs.h	2010-02-15 11:09:59.000000000 +0200
@@ -214,6 +214,7 @@ IB_UVERBS_DECLARE_CMD(modify_xrc_rcv_qp)
 IB_UVERBS_DECLARE_CMD(query_xrc_rcv_qp);
 IB_UVERBS_DECLARE_CMD(reg_xrc_rcv_qp);
 IB_UVERBS_DECLARE_CMD(unreg_xrc_rcv_qp);
+IB_UVERBS_DECLARE_CMD(get_eth_l2_addr);
 
 
 #endif /* UVERBS_H */
Index: ofed_kernel-fixes/drivers/infiniband/core/uverbs_cmd.c
===================================================================
--- ofed_kernel-fixes.orig/drivers/infiniband/core/uverbs_cmd.c	2010-02-15 11:09:55.000000000 +0200
+++ ofed_kernel-fixes/drivers/infiniband/core/uverbs_cmd.c	2010-02-15 11:09:59.000000000 +0200
@@ -468,6 +468,7 @@ ssize_t ib_uverbs_query_port(struct ib_u
 	resp.active_width    = attr.active_width;
 	resp.active_speed    = attr.active_speed;
 	resp.phys_state      = attr.phys_state;
+	resp.link_layer	     = attr.link_layer;
 
 	if (copy_to_user((void __user *) (unsigned long) cmd.response,
 			 &resp, sizeof resp))
@@ -1855,6 +1856,38 @@ err:
 	return ret;
 }
 
+ssize_t ib_uverbs_get_eth_l2_addr(struct ib_uverbs_file *file, const char __user *buf,
+				  int in_len, int out_len)
+{
+	struct ib_uverbs_get_eth_l2_addr       cmd;
+	struct ib_uverbs_get_eth_l2_addr_resp  resp;
+	int              ret;
+	struct ib_pd    *pd;
+
+	if (out_len < sizeof resp)
+		return -ENOSPC;
+
+	if (copy_from_user(&cmd, buf, sizeof cmd))
+		return -EFAULT;
+
+	pd = idr_read_pd(cmd.pd_handle, file->ucontext);
+	if (!pd)
+		return -EINVAL;
+
+	ret = ib_get_eth_l2_addr(pd->device, cmd.port, (union ib_gid *)cmd.gid,
+				 cmd.sgid_idx, resp.mac);
+	put_pd_read(pd);
+	if (!ret) {
+		if (copy_to_user((void __user *) (unsigned long) cmd.response,
+				 &resp, sizeof resp))
+			return -EFAULT;
+
+		return in_len;
+	}
+
+	return ret;
+}
+
 ssize_t ib_uverbs_destroy_ah(struct ib_uverbs_file *file,
 			     const char __user *buf, int in_len, int out_len)
 {
Index: ofed_kernel-fixes/drivers/infiniband/core/uverbs_main.c
===================================================================
--- ofed_kernel-fixes.orig/drivers/infiniband/core/uverbs_main.c	2010-02-15 11:09:55.000000000 +0200
+++ ofed_kernel-fixes/drivers/infiniband/core/uverbs_main.c	2010-02-15 11:23:56.000000000 +0200
@@ -117,6 +117,7 @@ static ssize_t (*uverbs_cmd_table[])(str
 	[IB_USER_VERBS_CMD_QUERY_XRC_RCV_QP]	= ib_uverbs_query_xrc_rcv_qp,
 	[IB_USER_VERBS_CMD_REG_XRC_RCV_QP]	= ib_uverbs_reg_xrc_rcv_qp,
 	[IB_USER_VERBS_CMD_UNREG_XRC_RCV_QP]	= ib_uverbs_unreg_xrc_rcv_qp,
+	[IB_USER_VERBS_CMD_GET_ETH_L2_ADDR]	= ib_uverbs_get_eth_l2_addr,
 };
 
 static struct vfsmount *uverbs_event_mnt;
Index: ofed_kernel-fixes/drivers/infiniband/core/verbs.c
===================================================================
--- ofed_kernel-fixes.orig/drivers/infiniband/core/verbs.c	2010-02-15 11:09:58.000000000 +0200
+++ ofed_kernel-fixes/drivers/infiniband/core/verbs.c	2010-02-15 11:09:59.000000000 +0200
@@ -1046,4 +1046,12 @@ struct ib_xrcd *ib_alloc_xrcd(struct ib_
 }
 EXPORT_SYMBOL(ib_alloc_xrcd);
 
+int ib_get_eth_l2_addr(struct ib_device *device, u8 port, union ib_gid *gid,
+		       int sgid_idx, u8 *mac)
+{
+	if (!device->get_eth_l2_addr)
+		return -ENOSYS;
 
+	return device->get_eth_l2_addr(device, port, gid, sgid_idx, mac);
+}
+EXPORT_SYMBOL(ib_get_eth_l2_addr);
Index: ofed_kernel-fixes/include/rdma/ib_user_verbs.h
===================================================================
--- ofed_kernel-fixes.orig/include/rdma/ib_user_verbs.h	2010-02-15 11:09:55.000000000 +0200
+++ ofed_kernel-fixes/include/rdma/ib_user_verbs.h	2010-02-15 11:09:59.000000000 +0200
@@ -90,6 +90,7 @@ enum {
 	IB_USER_VERBS_CMD_QUERY_XRC_RCV_QP,
 	IB_USER_VERBS_CMD_REG_XRC_RCV_QP,
 	IB_USER_VERBS_CMD_UNREG_XRC_RCV_QP,
+	IB_USER_VERBS_CMD_GET_ETH_L2_ADDR,
 };
 
 /*
@@ -213,7 +214,8 @@ struct ib_uverbs_query_port_resp {
 	__u8  active_width;
 	__u8  active_speed;
 	__u8  phys_state;
-	__u8  reserved[3];
+	__u8  link_layer;
+	__u8  reserved[2];
 };
 
 struct ib_uverbs_alloc_pd {
@@ -629,6 +631,20 @@ struct ib_uverbs_destroy_ah {
 	__u32 ah_handle;
 };
 
+struct ib_uverbs_get_eth_l2_addr {
+	__u64	response;
+	__u32	pd_handle;
+	__u8	port;
+	__u8	sgid_idx;
+	__u8	reserved[2];
+	__u8	gid[16];
+};
+
+struct ib_uverbs_get_eth_l2_addr_resp {
+	__u8	mac[6];
+	__u16	reserved;
+};
+
 struct ib_uverbs_attach_mcast {
 	__u8  gid[16];
 	__u32 qp_handle;
Index: ofed_kernel-fixes/include/rdma/ib_verbs.h
===================================================================
--- ofed_kernel-fixes.orig/include/rdma/ib_verbs.h	2010-02-15 11:09:58.000000000 +0200
+++ ofed_kernel-fixes/include/rdma/ib_verbs.h	2010-02-15 11:23:10.000000000 +0200
@@ -1201,6 +1201,9 @@ struct ib_device {
 	int 			   (*unreg_xrc_rcv_qp)(struct ib_xrcd *xrcd,
 						       void *context,
 						       u32 qp_num);
+	int			   (*get_eth_l2_addr)(struct ib_device *device, u8 port,
+						      union ib_gid *dgid, int sgid_idx,
+						      u8 *mac);
 
 	struct ib_dma_mapping_ops   *dma_ops;
 
@@ -2149,4 +2152,15 @@ int ib_dealloc_xrcd(struct ib_xrcd *xrcd
  */
 struct ib_xrcd *ib_alloc_xrcd(struct ib_device *device);
 
+/**
+  * ib_get_eth_l2_addr - get the mac and vlan id for the specified gid
+  * @device: IB device used for traffic
+  * @port: port number used.
+  * @gid: gid to be resolved into mac
+  * @sgid_idx: index to port's gid table for the corresponding address vector
+  * @mac: mac of the port bearing this gid
+  */
+int ib_get_eth_l2_addr(struct ib_device *device, u8 port, union ib_gid *gid,
+		       int sgid_idx, u8 *mac);
+
 #endif /* IB_VERBS_H */
