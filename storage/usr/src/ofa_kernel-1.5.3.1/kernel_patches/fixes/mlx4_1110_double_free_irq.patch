commit d1fdf24b4074a8d962f9a28519c99dcdd66bdee3
Author: Roland Dreier <rolandd@cisco.com>
Date:   Sun Jun 14 13:30:45 2009 -0700

    mlx4_core: Don't double-free IRQs when falling back from MSI-X to INTx
    
    When both MSI-X and legacy INTx fail to generate an interrupt, the
    driver frees the MSI-X interrupts twice.  Fix this by clearing the
    have_irq flag for the MSI-X interrupts when they are freed the first
    time.  This is the same bug that was reported in ib_mthca by Yinghai
    Lu <yhlu.kernel@gmail.com>.
    
    Signed-off-by: Roland Dreier <rolandd@cisco.com>

diff --git a/drivers/net/mlx4/eq.c b/drivers/net/mlx4/eq.c
index 8830dcb..ce064e3 100644
--- a/drivers/net/mlx4/eq.c
+++ b/drivers/net/mlx4/eq.c
@@ -497,8 +497,10 @@ static void mlx4_free_irqs(struct mlx4_dev *dev)
 	if (eq_table->have_irq)
 		free_irq(dev->pdev->irq, dev);
 	for (i = 0; i < dev->caps.num_comp_vectors + 1; ++i)
-		if (eq_table->eq[i].have_irq)
+		if (eq_table->eq[i].have_irq) {
 			free_irq(eq_table->eq[i].irq, eq_table->eq + i);
+			eq_table->eq[i].have_irq = 0;
+		}
 
 	kfree(eq_table->irq_names);
 }
