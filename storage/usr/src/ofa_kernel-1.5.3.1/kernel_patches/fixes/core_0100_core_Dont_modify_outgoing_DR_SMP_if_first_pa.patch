From cf3a0c12ed5bb4999c8fb28eb88940fef7a93703 Mon Sep 17 00:00:00 2001
From: Ralph Campbell <ralph.campbell@qlogic.com>
Date: Wed, 17 Oct 2007 13:07:17 -0700
Subject: [PATCH] [PATCH] IB/core - Don't modify outgoing DR SMP if first part is LID routed

The code in handle_outgoing_dr_smp() checks to see if the directed
route SMP has an initial LID routed part and correctly does not
modify the hop pointer but it then proceeds to process the packet
as if there was no initial LID routed part.  Instead, if there
is an initial LID routed part, the packet should just be sent on
to the destination and not processed further since it can't be
destined for the local SM/SMA.

Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com>
---
 drivers/infiniband/core/mad.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

Index: ofed_kernel/drivers/infiniband/core/mad.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/core/mad.c
+++ ofed_kernel/drivers/infiniband/core/mad.c
@@ -690,9 +690,10 @@ static int handle_outgoing_dr_smp(struct
 	 * If we are at the start of the LID routed part, don't update the
 	 * hop_ptr or hop_cnt.  See section 14.2.2, Vol 1 IB spec.
 	 */
-	if ((ib_get_smp_direction(smp) ? smp->dr_dlid : smp->dr_slid) ==
-	     IB_LID_PERMISSIVE &&
-	     smi_handle_dr_smp_send(smp, device->node_type, port_num) ==
+	if ((ib_get_smp_direction(smp) ? smp->dr_dlid : smp->dr_slid) !=
+	     IB_LID_PERMISSIVE)
+		goto out;
+	if (smi_handle_dr_smp_send(smp, device->node_type, port_num) ==
 	     IB_SMI_DISCARD) {
 		ret = -EINVAL;
 		printk(KERN_ERR PFX "Invalid directed route\n");
