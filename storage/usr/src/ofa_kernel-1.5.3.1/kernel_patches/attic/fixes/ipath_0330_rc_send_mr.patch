diff -up a/drivers/infiniband/hw/ipath/ipath_rc.c b/drivers/infiniband/hw/ipath/ipath_rc.c
--- a/drivers/infiniband/hw/ipath/ipath_rc.c	2009-03-09 19:06:05.000000000 -0700
+++ b/drivers/infiniband/hw/ipath/ipath_rc.c	2009-03-11 18:15:27.000000000 -0700
@@ -297,8 +297,12 @@ int ipath_make_rc_req(struct ipath_qp *q
 	 * the same PSN multiple times.
 	 */
 	if (ipath_cmp24(qp->s_psn, qp->s_sending_hpsn) <= 0) {
-		qp->s_flags |= IPATH_S_WAITING;
-		goto bail;
+		if (ipath_cmp24(qp->s_sending_psn, qp->s_sending_hpsn) <= 0) {
+			qp->s_flags |= IPATH_S_WAITING;
+			goto bail;
+		}
+		qp->s_sending_psn = qp->s_psn;
+		qp->s_sending_hpsn = qp->s_psn - 1;
 	}
 
 	/* header size in 32-bit words LRH+BTH = (8+12)/4. */
@@ -832,10 +836,6 @@ static void reset_psn(struct ipath_qp *q
 	}
 done:
 	qp->s_psn = psn;
-	if (ipath_cmp24(qp->s_sending_psn, qp->s_sending_hpsn) > 0) {
-		qp->s_sending_psn = psn;
-		qp->s_sending_hpsn = psn - 1;
-	}
 }
 
 /**
@@ -971,7 +971,7 @@ void ipath_rc_send_complete(struct ipath
 	 * If we were waiting for sends to complete before resending,
 	 * and they are now complete, restart sending.
 	 */
-	if (qp->s_acked != qp->s_head &&
+	if (qp->s_cur != qp->s_head &&
 	    ipath_cmp24(qp->s_sending_psn, qp->s_sending_hpsn) > 0 &&
 	    ipath_cmp24(qp->s_psn, qp->s_sending_hpsn) <= 0) {
 		qp->s_sending_psn = qp->s_psn;
@@ -1169,7 +1169,7 @@ static int do_rc_ack(struct ipath_qp *qp
 		qp->s_rnr_retry = qp->s_rnr_retry_cnt;
 		qp->s_retry = qp->s_retry_cnt;
 		update_last_psn(qp, psn);
-		if (qp->s_acked != qp->s_head)
+		if (qp->s_cur != qp->s_head)
 			ipath_schedule_send(qp);
 		else
 			qp->s_flags &= ~IPATH_S_WAITING;
