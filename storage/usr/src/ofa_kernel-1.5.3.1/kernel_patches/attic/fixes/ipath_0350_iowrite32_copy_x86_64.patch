IB/ipath - add optimized __iowrite32_copy routine for x86_64

__iowrite32_copy - copy a memory block using dword multiple writes

This is primarily for writing to the InfiniPath PIO buffers, which only
support dword multiple writes, and thus can not use memcpy().  For this
reason, we use nothing smaller than dword writes.  It is also used as
a fast copy routine in some places that have been measured to win over
memcpy, and the performance delta matters.

Signed-off-by: John Gregor <john.gregor@qlogic.com>
---
 drivers/infiniband/hw/ipath/Makefile                |    1 
 drivers/infiniband/hw/ipath/iowrite32_copy_x86_64.S |   58 ++++++++++++++++++++
 2 files changed, 59 insertions(+)

Index: ofa_kernel-1.4/drivers/infiniband/hw/ipath/Makefile
===================================================================
--- ofa_kernel-1.4.orig/drivers/infiniband/hw/ipath/Makefile
+++ ofa_kernel-1.4/drivers/infiniband/hw/ipath/Makefile
@@ -38,6 +38,7 @@ ib_ipath-y := \
 ib_ipath-$(CONFIG_HT_IRQ) += ipath_iba6110.o
 ib_ipath-$(CONFIG_PCI_MSI) += ipath_iba6120.o
 
+ib_ipath-$(CONFIG_X86_64) += iowrite32_copy_x86_64.o
 ib_ipath-$(CONFIG_X86_64) += memcpy_cachebypass_x86_64.o
 ib_ipath-$(CONFIG_X86_64) += ipath_wc_x86_64.o
 ib_ipath-$(CONFIG_PPC64) += ipath_wc_ppc64.o
Index: ofa_kernel-1.4/drivers/infiniband/hw/ipath/iowrite32_copy_x86_64.S
===================================================================
--- /dev/null
+++ ofa_kernel-1.4/drivers/infiniband/hw/ipath/iowrite32_copy_x86_64.S
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2006, 2007 QLogic Corporation. All rights reserved.
+ * Copyright (c) 2003, 2004, 2005, 2006 PathScale, Inc. All rights reserved.
+ *
+ * This software is available to you under a choice of one of two
+ * licenses.  You may choose to be licensed under the terms of the GNU
+ * General Public License (GPL) Version 2, available from the file
+ * COPYING in the main directory of this source tree, or the
+ * OpenIB.org BSD license below:
+ *
+ *     Redistribution and use in source and binary forms, with or
+ *     without modification, are permitted provided that the following
+ *     conditions are met:
+ *
+ *      - Redistributions of source code must retain the above
+ *        copyright notice, this list of conditions and the following
+ *        disclaimer.
+ *
+ *      - Redistributions in binary form must reproduce the above
+ *        copyright notice, this list of conditions and the following
+ *        disclaimer in the documentation and/or other materials
+ *        provided with the distribution.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+ * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+/**
+ * __iowrite32_copy - copy a memory block using dword multiple writes
+ *
+ * This is primarily for writing to the InfiniPath PIO buffers, which
+ * only support dword multiple writes, and thus can not use memcpy().
+ * For this reason, we use nothing smaller than dword writes.
+ * It is also used as a fast copy routine in some places that have been
+ * measured to win over memcpy, and the performance delta matters.
+ *
+ * Count is number of dwords; might not be a qword multiple.
+ */
+
+ 	.globl __iowrite32_copy
+	.p2align 4
+/* rdi	destination, rsi source, rdx count */
+__iowrite32_copy:
+	movl %edx,%ecx
+	shrl $1,%ecx
+	andl $1,%edx
+	rep
+	movsq
+	movl %edx,%ecx
+	rep
+	movsd
+	ret
