From 652a6299b6e3516cec2d40809ea33309da413707 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Thu, 4 Dec 2008 10:53:12 +0200
Subject: [PATCH] mlx4: sense from sysfs context

When port type is configured to 'auto' mode, sense the port
immediatelly from the same context.
Done to prevent port types changes after INIT port was already done.

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/main.c |   20 +++++++++++++-------
 1 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/drivers/net/mlx4/main.c b/drivers/net/mlx4/main.c
index 14d6b3c..4ac6896 100644
--- a/drivers/net/mlx4/main.c
+++ b/drivers/net/mlx4/main.c
@@ -372,11 +372,10 @@ int mlx4_change_port_types(struct mlx4_dev *dev,
 	int port;
 
 	for (port = 0; port <  dev->caps.num_ports; port++) {
-		if (port_types[port] != dev->caps.port_type[port + 1]) {
+		if (port_types[port] != dev->caps.port_type[port + 1] &&
+		    port_types[port] != MLX4_PORT_TYPE_AUTO) {
 			change = 1;
 			dev->caps.port_type[port + 1] = port_types[port];
-			if (dev->caps.possible_type[port + 1] != MLX4_PORT_TYPE_AUTO)
-				dev->caps.possible_type[port + 1] = port_types[port];
 		}
 	}
 	if (change) {
@@ -427,6 +426,7 @@ static ssize_t set_port_type(struct device *dev,
 	struct mlx4_dev *mdev = info->dev;
 	struct mlx4_priv *priv = mlx4_priv(mdev);
 	enum mlx4_port_type types[MLX4_MAX_PORTS];
+	enum mlx4_port_type tmp_type;
 	int i;
 	int err = 0;
 
@@ -442,6 +442,16 @@ static ssize_t set_port_type(struct device *dev,
 	}
 
 	mutex_lock(&priv->port_mutex);
+	mdev->caps.possible_type[info->port] = info->tmp_type;
+	if (info->tmp_type == MLX4_PORT_TYPE_AUTO) {
+		err = mlx4_SENSE_PORT(mdev, info->port, &tmp_type);
+		if (!err && (tmp_type == MLX4_PORT_TYPE_ETH ||
+			     tmp_type == MLX4_PORT_TYPE_IB)) {
+			info->tmp_type = tmp_type;
+		} else
+			info->tmp_type = mdev->caps.port_type[info->port];
+	}
+
 	for (i = 0; i < mdev->caps.num_ports; i++)
 		types[i] = priv->port[i+1].tmp_type ? priv->port[i+1].tmp_type :
 					mdev->caps.possible_type[i+1];
@@ -457,10 +467,6 @@ static ssize_t set_port_type(struct device *dev,
 		goto out;
 
 	for (i = 0; i < mdev->caps.num_ports; i++) {
-		mdev->caps.possible_type[i + 1] = types[i];
-		if (types[i] == MLX4_PORT_TYPE_AUTO)
-			types[i] = mdev->caps.port_type[i + 1];
-
 		priv->port[i + 1].tmp_type = 0;
 	}
 
-- 
1.5.3

