From cef71896d7902c5d59132f3392150bc6827063ce Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Wed, 12 Nov 2008 16:47:39 +0200
Subject: [PATCH] mlx4:Added a trigger to change all interfaces

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/main.c |   38 +++++++++++++++++++++++++++++++++++++-
 drivers/net/mlx4/mlx4.h |    3 +++
 2 files changed, 40 insertions(+), 1 deletions(-)

diff --git a/drivers/net/mlx4/main.c b/drivers/net/mlx4/main.c
index 4f14654..7969a54 100644
--- a/drivers/net/mlx4/main.c
+++ b/drivers/net/mlx4/main.c
@@ -403,6 +403,12 @@ static ssize_t set_port_type(struct device *dev,
 		types[i] = priv->port[i+1].tmp_type ? priv->port[i+1].tmp_type :
 					mdev->caps.possible_type[i+1];
 
+	if (priv->trig) {
+		if (++priv->changed_ports < mdev->caps.num_ports)
+			goto out;
+		else
+			priv->trig = priv->changed_ports = 0;
+	}
 	err = mlx4_check_port_params(mdev, types);
 	if (err)
 		goto out;
@@ -422,6 +428,21 @@ out:
 	return err ? err : count;
 }
 
+static ssize_t trigger_port(struct device *dev,
+			    struct device_attribute *attr,
+			    const char *buf, size_t count)
+{
+	struct mlx4_priv *priv = container_of(attr, struct mlx4_priv, trigger_attr);
+	if (!priv)
+		return -ENODEV;
+
+	mutex_lock(&priv->port_mutex);
+	priv->trig = 1;
+	mutex_unlock(&priv->port_mutex);
+	return count;
+}
+DEVICE_ATTR(port_trigger, S_IWUGO, NULL, trigger_port);
+
 static int mlx4_load_fw(struct mlx4_dev *dev)
 {
 	struct mlx4_priv *priv = mlx4_priv(dev);
@@ -1057,6 +1078,13 @@ static void mlx4_cleanup_port_info(struct mlx4_port_info *info)
 	device_remove_file(&info->dev->pdev->dev, &info->port_attr);
 }
 
+static int mlx4_init_trigger(struct mlx4_priv *priv)
+{
+	memcpy(&priv->trigger_attr, &dev_attr_port_trigger,
+	       sizeof(struct device_attribute));
+        return device_create_file(&priv->dev.pdev->dev, &priv->trigger_attr);
+}
+
 static int __mlx4_init_one(struct pci_dev *pdev, const struct pci_device_id *id)
 {
 	struct mlx4_priv *priv;
@@ -1205,10 +1233,16 @@ static int __mlx4_init_one(struct pci_dev *pdev, const struct pci_device_id *id)
 		if (err)
 			goto err_port;
 	}
+        
+	err = mlx4_init_trigger(priv);
+	if (err)
+		goto err_port;
 
 	err = mlx4_sense_init(dev);
-	if (err)
+	if (err) {
+		device_remove_file(&dev->pdev->dev, &priv->trigger_attr);
 		goto err_port;
+	}
 
 	err = mlx4_register_device(dev);
 	if (err)
@@ -1222,6 +1256,7 @@ static int __mlx4_init_one(struct pci_dev *pdev, const struct pci_device_id *id)
 
 err_sense:
 	mlx4_sense_cleanup(dev);
+	device_remove_file(&dev->pdev->dev, &priv->trigger_attr);
 
 err_port:
 	for (port = 1; port <= dev->caps.num_ports; port++)
@@ -1284,6 +1319,7 @@ static void mlx4_remove_one(struct pci_dev *pdev)
 	if (dev) {
 		mlx4_sense_cleanup(dev);
 		mlx4_unregister_device(dev);
+		device_remove_file(&dev->pdev->dev, &priv->trigger_attr);
 		for (p = 1; p <= dev->caps.num_ports; p++) {
 			mlx4_cleanup_port_info(&priv->port[p]);
 			mlx4_CLOSE_PORT(dev, p);
diff --git a/drivers/net/mlx4/mlx4.h b/drivers/net/mlx4/mlx4.h
index 9508631..279afa6 100644
--- a/drivers/net/mlx4/mlx4.h
+++ b/drivers/net/mlx4/mlx4.h
@@ -329,6 +329,9 @@ struct mlx4_priv {
 	struct mlx4_uar		driver_uar;
 	void __iomem	       *kar;
 	struct mlx4_port_info	port[MLX4_MAX_PORTS + 1];
+	struct device_attribute trigger_attr;
+	int                     trig;
+	int                     changed_ports;
 	struct mlx4_sense       sense;
 	struct mutex		port_mutex;
 };
-- 
1.5.3

