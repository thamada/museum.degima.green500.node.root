---
 drivers/infiniband/hw/cxgb3/iwch_provider.c |   63 +++++++++++++---------------
 1 file changed, 30 insertions(+), 33 deletions(-)

Index: ofed_kernel/drivers/infiniband/hw/cxgb3/iwch_provider.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ ofed_kernel/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@ -1178,46 +1178,43 @@ static int iwch_query_port(struct ib_dev
 	return 0;
 }
 
-static ssize_t show_rev(struct device *dev, struct device_attribute *attr,
-			char *buf)
+static ssize_t show_rev(struct class_device *cdev, char *buf)
 {
-	struct iwch_dev *iwch_dev = container_of(dev, struct iwch_dev,
-						 ibdev.dev);
-	PDBG("%s dev 0x%p\n", __func__, dev);
+	struct iwch_dev *iwch_dev = container_of(cdev, struct iwch_dev,
+						 ibdev.class_dev);
+	PDBG("%s dev 0x%p\n", __func__, cdev);
 	return sprintf(buf, "%d\n", iwch_dev->rdev.t3cdev_p->type);
 }
 
-static ssize_t show_fw_ver(struct device *dev, struct device_attribute *attr, char *buf)
+static ssize_t show_fw_ver(struct class_device *cdev, char *buf)
 {
-	struct iwch_dev *iwch_dev = container_of(dev, struct iwch_dev,
-						 ibdev.dev);
+	struct iwch_dev *iwch_dev = container_of(cdev, struct iwch_dev,
+						 ibdev.class_dev);
 	struct ethtool_drvinfo info;
 	struct net_device *lldev = iwch_dev->rdev.t3cdev_p->lldev;
 
-	PDBG("%s dev 0x%p\n", __func__, dev);
+	PDBG("%s dev 0x%p\n", __func__, cdev);
 	lldev->ethtool_ops->get_drvinfo(lldev, &info);
 	return sprintf(buf, "%s\n", info.fw_version);
 }
 
-static ssize_t show_hca(struct device *dev, struct device_attribute *attr,
-			char *buf)
+static ssize_t show_hca(struct class_device *cdev, char *buf)
 {
-	struct iwch_dev *iwch_dev = container_of(dev, struct iwch_dev,
-						 ibdev.dev);
+	struct iwch_dev *iwch_dev = container_of(cdev, struct iwch_dev,
+						 ibdev.class_dev);
 	struct ethtool_drvinfo info;
 	struct net_device *lldev = iwch_dev->rdev.t3cdev_p->lldev;
 
-	PDBG("%s dev 0x%p\n", __func__, dev);
+	PDBG("%s dev 0x%p\n", __func__, cdev);
 	lldev->ethtool_ops->get_drvinfo(lldev, &info);
 	return sprintf(buf, "%s\n", info.driver);
 }
 
-static ssize_t show_board(struct device *dev, struct device_attribute *attr,
-			  char *buf)
+static ssize_t show_board(struct class_device *cdev, char *buf)
 {
-	struct iwch_dev *iwch_dev = container_of(dev, struct iwch_dev,
-						 ibdev.dev);
-	PDBG("%s dev 0x%p\n", __func__, dev);
+	struct iwch_dev *iwch_dev = container_of(cdev, struct iwch_dev,
+						 ibdev.class_dev);
+	PDBG("%s dev 0x%p\n", __func__, cdev);
 	return sprintf(buf, "%x.%x\n", iwch_dev->rdev.rnic_info.pdev->vendor,
 		       iwch_dev->rdev.rnic_info.pdev->device);
 }
@@ -1281,16 +1278,16 @@ static int iwch_get_mib(struct ib_device
 	return 0;
 }
 
-static DEVICE_ATTR(hw_rev, S_IRUGO, show_rev, NULL);
-static DEVICE_ATTR(fw_ver, S_IRUGO, show_fw_ver, NULL);
-static DEVICE_ATTR(hca_type, S_IRUGO, show_hca, NULL);
-static DEVICE_ATTR(board_id, S_IRUGO, show_board, NULL);
-
-static struct device_attribute *iwch_class_attributes[] = {
-	&dev_attr_hw_rev,
-	&dev_attr_fw_ver,
-	&dev_attr_hca_type,
-	&dev_attr_board_id,
+static CLASS_DEVICE_ATTR(hw_rev, S_IRUGO, show_rev, NULL);
+static CLASS_DEVICE_ATTR(fw_ver, S_IRUGO, show_fw_ver, NULL);
+static CLASS_DEVICE_ATTR(hca_type, S_IRUGO, show_hca, NULL);
+static CLASS_DEVICE_ATTR(board_id, S_IRUGO, show_board, NULL);
+
+static struct class_device_attribute *iwch_class_attributes[] = {
+	&class_device_attr_hw_rev,
+	&class_device_attr_fw_ver,
+	&class_device_attr_hca_type,
+	&class_device_attr_board_id,
 };
 
 int iwch_register_device(struct iwch_dev *dev)
@@ -1389,8 +1386,8 @@ int iwch_register_device(struct iwch_dev
 		goto bail1;
 
 	for (i = 0; i < ARRAY_SIZE(iwch_class_attributes); ++i) {
-		ret = device_create_file(&dev->ibdev.dev,
-					 iwch_class_attributes[i]);
+		ret = class_device_create_file(&dev->ibdev.class_dev,
+						iwch_class_attributes[i]);
 		if (ret) {
 			goto bail2;
 		}
@@ -1408,8 +1405,8 @@ void iwch_unregister_device(struct iwch_
 
 	PDBG("%s iwch_dev %p\n", __func__, dev);
 	for (i = 0; i < ARRAY_SIZE(iwch_class_attributes); ++i)
-		device_remove_file(&dev->ibdev.dev,
-				   iwch_class_attributes[i]);
+		class_device_remove_file(&dev->ibdev.class_dev,
+					iwch_class_attributes[i]);
 	ib_unregister_device(&dev->ibdev);
 	return;
 }
