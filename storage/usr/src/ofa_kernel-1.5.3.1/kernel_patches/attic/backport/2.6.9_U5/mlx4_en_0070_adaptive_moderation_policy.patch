From 86bc456537b8f1d2b2a45a4cd478102dd30ae0f5 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Sun, 31 May 2009 15:29:43 +0300
Subject: [PATCH 7/8] mlx4_en: Adaptive moderation policy change

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/en_ethtool.c |    2 ++
 drivers/net/mlx4/en_netdev.c  |   17 +++++++++++++----
 drivers/net/mlx4/mlx4_en.h    |    8 +++++---
 3 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/drivers/net/mlx4/en_ethtool.c b/drivers/net/mlx4/en_ethtool.c
index 973416a..8452c23 100644
--- a/drivers/net/mlx4/en_ethtool.c
+++ b/drivers/net/mlx4/en_ethtool.c
@@ -250,6 +250,7 @@ static int mlx4_en_get_coalesce(struct net_device *dev,
 	coal->rx_coalesce_usecs_low = priv->rx_usecs_low;
 	coal->pkt_rate_high = priv->pkt_rate_high;
 	coal->rx_coalesce_usecs_high = priv->rx_usecs_high;
+	coal->rx_max_coalesced_frames_high = priv->rx_frames_high;
 	coal->rate_sample_interval = priv->sample_interval;
 	coal->use_adaptive_rx_coalesce = priv->adaptive_rx_coal;
 	return 0;
@@ -275,6 +276,7 @@ static int mlx4_en_set_coalesce(struct net_device *dev,
 	priv->rx_usecs_low = coal->rx_coalesce_usecs_low;
 	priv->pkt_rate_high = coal->pkt_rate_high;
 	priv->rx_usecs_high = coal->rx_coalesce_usecs_high;
+	priv->rx_frames_high = coal->rx_max_coalesced_frames_high;
 	priv->sample_interval = coal->rate_sample_interval;
 	priv->adaptive_rx_coal = coal->use_adaptive_rx_coalesce;
 	priv->last_moder_time = MLX4_EN_AUTO_CONF;
diff --git a/drivers/net/mlx4/en_netdev.c b/drivers/net/mlx4/en_netdev.c
index cb34cc4..aee3e81 100644
--- a/drivers/net/mlx4/en_netdev.c
+++ b/drivers/net/mlx4/en_netdev.c
@@ -402,6 +402,7 @@ static void mlx4_en_set_default_moderation(struct mlx4_en_priv *priv)
 	priv->rx_usecs_low = MLX4_EN_RX_COAL_TIME_LOW;
 	priv->pkt_rate_high = MLX4_EN_RX_RATE_HIGH;
 	priv->rx_usecs_high = MLX4_EN_RX_COAL_TIME_HIGH;
+	priv->rx_frames_high =  MLX4_EN_RX_COAL_TARGET_HIGH;
 	priv->sample_interval = MLX4_EN_SAMPLE_INTERVAL;
 	priv->adaptive_rx_coal = 1;
 	priv->last_moder_time = MLX4_EN_AUTO_CONF;
@@ -424,6 +425,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 	unsigned long tx_pkt_diff;
 	unsigned long rx_pkt_diff;
 	int moder_time;
+	int moder_cnt = 0;
 	int i, err;
 
 	if (!priv->adaptive_rx_coal || period < priv->sample_interval * HZ)
@@ -453,14 +455,19 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		/* If tx and rx packet rates are not balanced, assume that
 		 * traffic is mainly BW bound and apply maximum moderation.
 		 * Otherwise, moderate according to packet rate */
-		if (2 * tx_pkt_diff > 3 * rx_pkt_diff ||
-		    2 * rx_pkt_diff > 3 * tx_pkt_diff) {
+		if (2 * tx_pkt_diff > 3 * rx_pkt_diff)
+			moder_time = priv->rx_usecs_low;
+		else if (2 * rx_pkt_diff > 3 * tx_pkt_diff) {
 			moder_time = priv->rx_usecs_high;
-		} else {
+			moder_cnt = priv->rx_frames_high;
+		}
+		else {
 			if (rate < priv->pkt_rate_low)
 				moder_time = priv->rx_usecs_low;
-			else if (rate > priv->pkt_rate_high)
+			else if (rate > priv->pkt_rate_high) {
 				moder_time = priv->rx_usecs_high;
+				moder_cnt = priv->rx_frames_high;
+			}
 			else
 				moder_time = (rate - priv->pkt_rate_low) *
 					(priv->rx_usecs_high - priv->rx_usecs_low) /
@@ -471,6 +478,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		/* When packet rate is low, use default moderation rather than
 		 * 0 to prevent interrupt storms if traffic suddenly increases */
 		moder_time = priv->rx_usecs;
+		moder_cnt = priv->rx_frames;
 	}
 
 	en_dbg(INTR, priv, "tx rate:%lu rx_rate:%lu\n",
@@ -486,6 +494,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		for (i = 0; i < priv->rx_ring_num; i++) {
 			cq = &priv->rx_cq[i];
 			cq->moder_time = moder_time;
+			cq->moder_cnt = moder_cnt;
 			err = mlx4_en_set_cq_moder(priv, cq);
 			if (err) {
 				en_err(priv, "Failed modifying moderation for cq:%d\n", i);
diff --git a/drivers/net/mlx4/mlx4_en.h b/drivers/net/mlx4/mlx4_en.h
index ec318a7..59a3b3a 100644
--- a/drivers/net/mlx4/mlx4_en.h
+++ b/drivers/net/mlx4/mlx4_en.h
@@ -147,8 +147,8 @@ enum {
 #define MLX4_EN_DEF_RX_RING_SIZE  	1024
 
 /* Target number of packets to coalesce with interrupt moderation */
-#define MLX4_EN_RX_COAL_TARGET	44
-#define MLX4_EN_RX_COAL_TIME	0x10
+#define MLX4_EN_RX_COAL_TARGET	22
+#define MLX4_EN_RX_COAL_TIME	0x5
 
 #define MLX4_EN_TX_COAL_PKTS	5
 #define MLX4_EN_TX_COAL_TIME	0x80
@@ -156,7 +156,8 @@ enum {
 #define MLX4_EN_RX_RATE_LOW		400000
 #define MLX4_EN_RX_COAL_TIME_LOW	0
 #define MLX4_EN_RX_RATE_HIGH		450000
-#define MLX4_EN_RX_COAL_TIME_HIGH	128
+#define MLX4_EN_RX_COAL_TIME_HIGH	5
+#define MLX4_EN_RX_COAL_TARGET_HIGH	22
 #define MLX4_EN_RX_SIZE_THRESH		1024
 #define MLX4_EN_RX_RATE_THRESH		(1000000 / MLX4_EN_RX_COAL_TIME_HIGH)
 #define MLX4_EN_SAMPLE_INTERVAL		0
@@ -515,6 +516,7 @@ struct mlx4_en_priv {
 	u16 rx_usecs_low;
 	u32 pkt_rate_high;
 	u16 rx_usecs_high;
+	u16 rx_frames_high;
 	u16 sample_interval;
 	u16 adaptive_rx_coal;
 	u32 msg_enable;
-- 
1.6.1.3

