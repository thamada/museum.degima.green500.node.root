From 20f52545712c4d0b91fb96df72ea5b1818685bc5 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Thu, 22 Jan 2009 09:41:18 +0200
Subject: [PATCH] mlx4: Sysfs backport for RHAS4

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/main.c |   68 +++++++++++++++++++++++++++++++++++-----------
 1 files changed, 51 insertions(+), 17 deletions(-)

diff --git a/drivers/net/mlx4/main.c b/drivers/net/mlx4/main.c
index f87ebbc..fce2589 100644
--- a/drivers/net/mlx4/main.c
+++ b/drivers/net/mlx4/main.c
@@ -397,18 +397,13 @@ out:
 	return err;
 }
 
-static ssize_t show_port_type(struct device *dev,
-			      struct device_attribute *attr,
-			      char *buf)
+static ssize_t show_port(struct mlx4_dev *dev, int port, char *buf)
 {
-	struct mlx4_port_info *info = container_of(attr, struct mlx4_port_info,
-						   port_attr);
-	struct mlx4_dev *mdev = info->dev;
 	char type[8];
 
-	sprintf(type, "%s", (mdev->caps.port_type[info->port] == MLX4_PORT_TYPE_IB) ?
+	sprintf(type, "%s", (dev->caps.port_type[port] == MLX4_PORT_TYPE_IB) ?
 				"ib" : "eth");
-	if (mdev->caps.possible_type[info->port] == MLX4_PORT_TYPE_AUTO)
+	if (dev->caps.possible_type[port] == MLX4_PORT_TYPE_AUTO)
 		sprintf(buf, "auto (%s)\n", type);
 	else
 		sprintf(buf, "%s\n", type);
@@ -416,14 +411,33 @@ static ssize_t show_port_type(struct device *dev,
 	return strlen(buf);
 }
 
-static ssize_t set_port_type(struct device *dev,
-			     struct device_attribute *attr,
-			     const char *buf, size_t count)
+static ssize_t show_port_type1(struct device *dev, char *buf)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	if (mdev)
+		return show_port(mdev, 1, buf);
+	else
+		return -ENODEV;
+}
+
+static ssize_t show_port_type2(struct device *dev, char *buf)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	if (mdev)
+		return show_port(mdev, 2, buf);
+	else
+		return -ENODEV;
+}
+
+static ssize_t store_port(struct mlx4_dev *mdev, int port,
+			  const char *buf, size_t count)
 {
-	struct mlx4_port_info *info = container_of(attr, struct mlx4_port_info,
-						   port_attr);
-	struct mlx4_dev *mdev = info->dev;
 	struct mlx4_priv *priv = mlx4_priv(mdev);
+	struct mlx4_port_info *info = &priv->port[port];
 	enum mlx4_port_type types[MLX4_MAX_PORTS];
 	enum mlx4_port_type new_types[MLX4_MAX_PORTS];
 	int i;
@@ -482,6 +496,24 @@ out:
 	return err ? err : count;
 }
 
+static ssize_t set_port_type1(struct device *dev,
+			      const char *buf, size_t count)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	return store_port(mdev, 1, buf, count);
+}
+
+static ssize_t set_port_type2(struct device *dev,
+			      const char *buf, size_t count)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	return store_port(mdev, 2, buf, count);
+}
+
 /*
  * This function is invoked if user wants to modify all port types
  * at once. We will wait for all the ports to be assigned new values,
@@ -491,7 +523,9 @@ static ssize_t trigger_port(struct device *dev,
 			    struct device_attribute *attr,
 			    const char *buf, size_t count)
 {
-	struct mlx4_priv *priv = container_of(attr, struct mlx4_priv, trigger_attr);
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+	struct mlx4_priv *priv = mlx4_priv(mdev);
 	if (!priv)
 		return -ENODEV;
 
@@ -1131,8 +1165,8 @@ static int mlx4_init_port_info(struct mlx4_dev *dev, int port)
 
 	sprintf(info->dev_name, "mlx4_port%d", port);
 	memcpy(&info->port_attr.attr, &attr, sizeof(attr));
-	info->port_attr.show = show_port_type;
-	info->port_attr.store = set_port_type;
+	info->port_attr.show = (port == 1) ? show_port_type1 : show_port_type2;
+	info->port_attr.store = (port == 1) ? set_port_type1 : set_port_type2;
 
 	err = device_create_file(&dev->pdev->dev, &info->port_attr);
 	if (err) {
-- 
1.5.3

