---
 drivers/infiniband/ulp/iser/iscsi_iser.c |   11 ++---------
 drivers/infiniband/ulp/iser/iscsi_iser.h |    4 ++--
 drivers/infiniband/ulp/iser/iser_verbs.c |    4 ++--
 3 files changed, 6 insertions(+), 13 deletions(-)

Index: ofed_kernel/drivers/infiniband/ulp/iser/iscsi_iser.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/ulp/iser/iscsi_iser.c
+++ ofed_kernel/drivers/infiniband/ulp/iser/iscsi_iser.c
@@ -368,8 +368,7 @@ static struct iscsi_transport iscsi_iser
 static struct iscsi_cls_session *
 iscsi_iser_session_create(struct iscsi_transport *iscsit,
 			 struct scsi_transport_template *scsit,
-			 uint16_t cmds_max, uint16_t qdepth,
-			 uint32_t initial_cmdsn, uint32_t *hostno)
+			  uint32_t initial_cmdsn, uint32_t *hostno)
 {
 	struct iscsi_cls_session *cls_session;
 	struct iscsi_session *session;
@@ -380,13 +379,7 @@ iscsi_iser_session_create(struct iscsi_t
 	struct iscsi_iser_cmd_task *iser_ctask;
 	struct iser_desc *desc;
 
-	/*
-	 * we do not support setting can_queue cmd_per_lun from userspace yet
-	 * because we preallocate so many resources
-	 */
 	cls_session = iscsi_session_setup(iscsit, scsit,
-					  ISCSI_DEF_XMIT_CMDS_MAX,
-					  ISCSI_MAX_CMD_PER_LUN,
 					  sizeof(struct iscsi_iser_cmd_task),
 					  sizeof(struct iser_desc),
 					  initial_cmdsn, &hn);
@@ -550,7 +543,7 @@ static struct scsi_host_template iscsi_i
 	.name                   = "iSCSI Initiator over iSER, v." DRV_VER,
 	.queuecommand           = iscsi_queuecommand,
 	.change_queue_depth	= iscsi_change_queue_depth,
-	.can_queue		= ISCSI_DEF_XMIT_CMDS_MAX - 1,
+	.can_queue		= ISCSI_XMIT_CMDS_MAX - 1,
 	.sg_tablesize           = ISCSI_ISER_SG_TABLESIZE,
 	.max_sectors		= 1024,
 	.cmd_per_lun            = ISCSI_MAX_CMD_PER_LUN,
Index: ofed_kernel/drivers/infiniband/ulp/iser/iscsi_iser.h
===================================================================
--- ofed_kernel.orig/drivers/infiniband/ulp/iser/iscsi_iser.h
+++ ofed_kernel/drivers/infiniband/ulp/iser/iscsi_iser.h
@@ -105,7 +105,7 @@
 #define ISER_MAX_TX_MISC_PDUS		6 /* NOOP_OUT(2), TEXT(1),         *
 					   * SCSI_TMFUNC(2), LOGOUT(1) */
 
-#define ISER_QP_MAX_RECV_DTOS		(ISCSI_DEF_XMIT_CMDS_MAX + \
+#define ISER_QP_MAX_RECV_DTOS		(ISCSI_XMIT_CMDS_MAX + \
 					ISER_MAX_RX_MISC_PDUS    +  \
 					ISER_MAX_TX_MISC_PDUS)
 
@@ -117,7 +117,7 @@
 
 #define ISER_INFLIGHT_DATAOUTS		8
 
-#define ISER_QP_MAX_REQ_DTOS		(ISCSI_DEF_XMIT_CMDS_MAX *    \
+#define ISER_QP_MAX_REQ_DTOS		(ISCSI_XMIT_CMDS_MAX *    \
 					(1 + ISER_INFLIGHT_DATAOUTS) + \
 					ISER_MAX_TX_MISC_PDUS        + \
 					ISER_MAX_RX_MISC_PDUS)
Index: ofed_kernel/drivers/infiniband/ulp/iser/iser_verbs.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/ulp/iser/iser_verbs.c
+++ ofed_kernel/drivers/infiniband/ulp/iser/iser_verbs.c
@@ -153,8 +153,8 @@ static int iser_create_ib_conn_res(struc
 	params.max_pages_per_fmr = ISCSI_ISER_SG_TABLESIZE + 1;
 	/* make the pool size twice the max number of SCSI commands *
 	 * the ML is expected to queue, watermark for unmap at 50%  */
-	params.pool_size	 = ISCSI_DEF_XMIT_CMDS_MAX * 2;
-	params.dirty_watermark	 = ISCSI_DEF_XMIT_CMDS_MAX;
+	params.pool_size	 = ISCSI_XMIT_CMDS_MAX * 2;
+	params.dirty_watermark	 = ISCSI_XMIT_CMDS_MAX;
 	params.cache		 = 0;
 	params.flush_function	 = NULL;
 	params.access		 = (IB_ACCESS_LOCAL_WRITE  |
