diff --git a/drivers/infiniband/hw/nes/nes_verbs.c b/drivers/infiniband/hw/nes/nes_verbs.c
index 83c999c..c626838 100644
--- a/drivers/infiniband/hw/nes/nes_verbs.c
+++ b/drivers/infiniband/hw/nes/nes_verbs.c
@@ -1123,6 +1123,8 @@ static int nes_setup_mmap_qp(struct nes_qp *nesqp, struct nes_vnic *nesvnic,
 {
 	void *mem;
 	struct nes_device *nesdev = nesvnic->nesdev;
+	u32 mem_size;
+	void *vmem;
 
 	nesqp->qp_mem_size = (sizeof(struct nes_hw_qp_wqe) * sq_size) +
 			(sizeof(struct nes_hw_qp_wqe) * rq_size) +
@@ -1140,6 +1142,17 @@ static int nes_setup_mmap_qp(struct nes_qp *nesqp, struct nes_vnic *nesvnic,
 			"host descriptor rings located @ %p (pa = 0x%08lX.) size = %u.\n",
 			mem, (unsigned long)nesqp->hwqp.sq_pbase, nesqp->qp_mem_size);
 
+	mem_size = nesqp->qp_mem_size;
+	vmem = mem;
+	if (nesqp->user_mode) {
+		while (mem_size > 0) {
+			nes_debug(NES_DBG_QP, "Setting memory page %p reserved, mem_size=%u\n",
+				  vmem, mem_size);
+			SetPageReserved(virt_to_page(vmem));
+			mem_size -= PAGE_SIZE;
+			vmem += PAGE_SIZE;
+		}
+	}
 	memset(mem, 0, nesqp->qp_mem_size);
 
 	nesqp->hwqp.sq_vbase = mem;
@@ -1515,6 +1528,8 @@ static int nes_destroy_qp(struct ib_qp *ibqp)
 	/* struct nes_vnic *nesvnic = to_nesvnic(ibqp->device); */
 	struct nes_ucontext *nes_ucontext;
 	struct ib_qp_attr attr;
+	u32 mem_size;
+	void *vmem;
 	struct iw_cm_id *cm_id;
 	struct iw_cm_event cm_event;
 	int ret;
@@ -1558,6 +1573,17 @@ static int nes_destroy_qp(struct ib_qp *ibqp)
 			if (nes_ucontext->first_free_wq > nesqp->mmap_sq_db_index) {
 				nes_ucontext->first_free_wq = nesqp->mmap_sq_db_index;
 			}
+			mem_size = nesqp->qp_mem_size;
+			vmem = nesqp->hwqp.sq_vbase;
+			if (!nesqp->pbl_vbase) {
+				while (mem_size > 0) {
+					nes_debug(NES_DBG_QP, "Remove reserved memory page %p, mem_size=%u\n",
+							vmem, mem_size);
+					ClearPageReserved(virt_to_page(vmem));
+					mem_size -= PAGE_SIZE;
+					vmem += PAGE_SIZE;
+				}
+			}
 		}
 		if (nesqp->pbl_pbase)
 			kunmap(nesqp->page);
-- 
1.5.3.3

