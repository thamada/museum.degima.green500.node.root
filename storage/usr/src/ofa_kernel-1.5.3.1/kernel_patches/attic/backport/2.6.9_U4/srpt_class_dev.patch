---
 drivers/infiniband/ulp/srpt/ib_srpt.c |   42 ++++++++++++++++------------------
 drivers/infiniband/ulp/srpt/ib_srpt.h |    2 -
 2 files changed, 21 insertions(+), 23 deletions(-)

Index: ofed_kernel/drivers/infiniband/ulp/srpt/ib_srpt.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ ofed_kernel/drivers/infiniband/ulp/srpt/ib_srpt.c
@@ -2298,20 +2298,19 @@ struct scst_tgt_template srpt_template =
 	.task_mgmt_fn_done = srpt_tsk_mgmt_done
 };
 
-static void srpt_release_class_dev(struct device *dev)
+static void srpt_release_class_dev(struct class_device *class_dev)
 {
 }
 
 static struct class srpt_class = {
 	.name = "infiniband_srpt",
-	.dev_release = srpt_release_class_dev
+	.release = srpt_release_class_dev
 };
 
-static ssize_t show_login_info(struct device *dev,
-			       struct device_attribute *attr, char *buf)
+static ssize_t show_login_info(struct class_device *class_dev, char *buf)
 {
 	struct srpt_device *sdev =
-		container_of(dev, struct srpt_device, dev);
+		container_of(class_dev, struct srpt_device, class_dev);
 	struct srpt_port *sport;
 	int i;
 	int len = 0;
@@ -2339,16 +2338,15 @@ static ssize_t show_login_info(struct de
 	return len;
 }
 
-static DEVICE_ATTR(login_info, S_IRUGO, show_login_info, NULL);
+static CLASS_DEVICE_ATTR(login_info, S_IRUGO, show_login_info, NULL);
 
-static ssize_t show_mem_info(struct device *dev, struct device_attribute *attr,
-			     char *buf)
+static ssize_t show_mem_info(struct class_device *class_dev, char *buf)
 {
 	return sprintf(buf, "mem_avail= %d mem_elements= %d mem_size= %d\n",
 		       mem_avail, mem_elements, mem_size);
 }
 
-static DEVICE_ATTR(mem_info, S_IRUGO, show_mem_info, NULL);
+static CLASS_DEVICE_ATTR(mem_info, S_IRUGO, show_mem_info, NULL);
 
 static void srpt_add_one(struct ib_device *device)
 {
@@ -2363,23 +2361,23 @@ static void srpt_add_one(struct ib_devic
 	sdev->device = device;
 	init_completion(&sdev->scst_released);
 
-	sdev->dev.class = &srpt_class;
-	sdev->dev.parent = device->dma_device;
-	snprintf(sdev->dev.bus_id, BUS_ID_SIZE, "srpt-%s", device->name);
+	sdev->class_dev.class = &srpt_class;
+	sdev->class_dev.dev = device->dma_device;
+	snprintf(sdev->class_dev.class_id, BUS_ID_SIZE, "srpt-%s", device->name);
 
-	if (device_register(&sdev->dev))
+	if (class_device_register(&sdev->class_dev))
 		goto free_dev;
-	if (device_create_file(&sdev->dev, &dev_attr_login_info))
-		goto err_dev;
-	if (device_create_file(&sdev->dev, &dev_attr_mem_info))
-		goto err_dev;
+	if (class_device_create_file(&sdev->class_dev, &class_device_attr_login_info))
+		goto err_class;
+	if (class_device_create_file(&sdev->class_dev, &class_device_attr_mem_info))
+		goto err_class;
 
 	if (ib_query_device(device, &sdev->dev_attr))
-		goto err_dev;
+		goto err_class;
 
 	sdev->pd = ib_alloc_pd(device);
 	if (IS_ERR(sdev->pd))
-		goto err_dev;
+		goto err_class;
 
 	sdev->mr = ib_get_dma_mr(sdev->pd, IB_ACCESS_LOCAL_WRITE);
 	if (IS_ERR(sdev->mr))
@@ -2451,8 +2449,8 @@ static void srpt_add_one(struct ib_devic
 	ib_dereg_mr(sdev->mr);
       err_pd:
 	ib_dealloc_pd(sdev->pd);
-      err_dev:
-	device_unregister(&sdev->dev);
+      err_class:
+	class_device_unregister(&sdev->class_dev);
       free_dev:
 	kfree(sdev);
 }
@@ -2473,7 +2471,7 @@ static void srpt_remove_one(struct ib_de
 	ib_destroy_srq(sdev->srq);
 	ib_dereg_mr(sdev->mr);
 	ib_dealloc_pd(sdev->pd);
-	device_unregister(&sdev->dev);
+	class_device_unregister(&sdev->class_dev);
 
 	for (i = 0; i < SRPT_SRQ_SIZE; ++i)
 		srpt_free_ioctx(sdev, sdev->ioctx_ring[i]);
Index: ofed_kernel/drivers/infiniband/ulp/srpt/ib_srpt.h
===================================================================
--- ofed_kernel.orig/drivers/infiniband/ulp/srpt/ib_srpt.h
+++ ofed_kernel/drivers/infiniband/ulp/srpt/ib_srpt.h
@@ -171,7 +171,7 @@ struct srpt_device {
 	struct srpt_port port[2];
 	struct ib_event_handler event_handler;
 	struct completion scst_released;
-	struct device dev;
+	struct class_device class_dev;
 
 	struct scst_tgt *scst_tgt;
 };
