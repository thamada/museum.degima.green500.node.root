---
 drivers/infiniband/hw/mlx4/main.c |   98 ++++++++++++++++++--------------------
 1 file changed, 48 insertions(+), 50 deletions(-)

Index: ofed_kernel/drivers/infiniband/hw/mlx4/main.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/hw/mlx4/main.c
+++ ofed_kernel/drivers/infiniband/hw/mlx4/main.c
@@ -624,23 +624,22 @@ static struct class_device_attribute *ml
  * the function for _name
  */
 #define DEVICE_DIAG_RPRT_ATTR(_name, _offset, _op_mod)		\
-static ssize_t show_rprt_##_name(struct device *dev,		\
-				 struct device_attribute *attr,	\
+static ssize_t show_rprt_##_name(struct class_device *cdev,	\
 				 char *buf){			\
-	return show_diag_rprt(dev, buf, _offset, _op_mod);	\
+	return show_diag_rprt(cdev, buf, _offset, _op_mod);	\
 }								\
-static DEVICE_ATTR(_name, S_IRUGO, show_rprt_##_name, NULL);
+static CLASS_DEVICE_ATTR(_name, S_IRUGO, show_rprt_##_name, NULL);
 
 #define MLX4_DIAG_RPRT_CLEAR_DIAGS 3
 
-static size_t show_diag_rprt(struct device *device, char *buf,
+static size_t show_diag_rprt(struct class_device *cdev, char *buf,
                               u32 offset, u8 op_modifier)
 {
 	size_t ret;
 	u32 counter_offset = offset;
 	u32 diag_counter = 0;
-	struct mlx4_ib_dev *dev = container_of(device, struct mlx4_ib_dev,
-					       ib_dev.dev);
+	struct mlx4_ib_dev *dev = container_of(cdev, struct mlx4_ib_dev,
+					       ib_dev.class_dev);
 
 	ret = mlx4_query_diag_counters(dev->dev, 1, op_modifier,
 				       &counter_offset, &diag_counter);
@@ -650,13 +649,12 @@ static size_t show_diag_rprt(struct devi
 	return sprintf(buf,"%d\n", diag_counter);
 }
 
-static ssize_t clear_diag_counters(struct device *device,
-				   struct device_attribute *attr,
+static ssize_t clear_diag_counters(struct class_device *cdev,
 				   const char *buf, size_t length)
 {
 	size_t ret;
-	struct mlx4_ib_dev *dev = container_of(device, struct mlx4_ib_dev,
-					       ib_dev.dev);
+	struct mlx4_ib_dev *dev = container_of(cdev, struct mlx4_ib_dev,
+					       ib_dev.class_dev);
 
 	ret = mlx4_query_diag_counters(dev->dev, 0, MLX4_DIAG_RPRT_CLEAR_DIAGS,
 				       NULL, NULL);
@@ -702,45 +700,45 @@ DEVICE_DIAG_RPRT_ATTR(num_cqovf		, 0x1A0
 DEVICE_DIAG_RPRT_ATTR(num_eqovf		, 0x1A4, 2);
 DEVICE_DIAG_RPRT_ATTR(num_baddb		, 0x1A8, 2);
 
-static DEVICE_ATTR(clear_diag, S_IWUGO, NULL, clear_diag_counters);
+static CLASS_DEVICE_ATTR(clear_diag, S_IWUGO, NULL, clear_diag_counters);
 
 static struct attribute *diag_rprt_attrs[] = {
-	&dev_attr_rq_num_lle.attr,
-	&dev_attr_sq_num_lle.attr,
-	&dev_attr_rq_num_lqpoe.attr,
-	&dev_attr_sq_num_lqpoe.attr,
-	&dev_attr_rq_num_leeoe.attr,
-	&dev_attr_sq_num_leeoe.attr,
-	&dev_attr_rq_num_lpe.attr,
-	&dev_attr_sq_num_lpe.attr,
-	&dev_attr_rq_num_wrfe.attr,
-	&dev_attr_sq_num_wrfe.attr,
-	&dev_attr_sq_num_mwbe.attr,
-	&dev_attr_sq_num_bre.attr,
-	&dev_attr_rq_num_lae.attr,
-	&dev_attr_sq_num_rire.attr,
-	&dev_attr_rq_num_rire.attr,
-	&dev_attr_sq_num_rae.attr,
-	&dev_attr_rq_num_rae.attr,
-	&dev_attr_sq_num_roe.attr,
-	&dev_attr_sq_num_tree.attr,
-	&dev_attr_sq_num_rree.attr,
-	&dev_attr_rq_num_rnr.attr,
-	&dev_attr_sq_num_rnr.attr,
-	&dev_attr_sq_num_rabrte.attr,
-	&dev_attr_sq_num_ieecne.attr,
-	&dev_attr_sq_num_ieecse.attr,
-	&dev_attr_rq_num_oos.attr,
-	&dev_attr_sq_num_oos.attr,
-	&dev_attr_rq_num_mce.attr,
-	&dev_attr_rq_num_rsync.attr,
-	&dev_attr_sq_num_rsync.attr,
-	&dev_attr_rq_num_udsdprd.attr,
-	&dev_attr_rq_num_ucsdprd.attr,
-	&dev_attr_num_cqovf.attr,
-	&dev_attr_num_eqovf.attr,
-	&dev_attr_num_baddb.attr,
-	&dev_attr_clear_diag.attr,
+	&class_device_attr_rq_num_lle.attr,
+	&class_device_attr_sq_num_lle.attr,
+	&class_device_attr_rq_num_lqpoe.attr,
+	&class_device_attr_sq_num_lqpoe.attr,
+	&class_device_attr_rq_num_leeoe.attr,
+	&class_device_attr_sq_num_leeoe.attr,
+	&class_device_attr_rq_num_lpe.attr,
+	&class_device_attr_sq_num_lpe.attr,
+	&class_device_attr_rq_num_wrfe.attr,
+	&class_device_attr_sq_num_wrfe.attr,
+	&class_device_attr_sq_num_mwbe.attr,
+	&class_device_attr_sq_num_bre.attr,
+	&class_device_attr_rq_num_lae.attr,
+	&class_device_attr_sq_num_rire.attr,
+	&class_device_attr_rq_num_rire.attr,
+	&class_device_attr_sq_num_rae.attr,
+	&class_device_attr_rq_num_rae.attr,
+	&class_device_attr_sq_num_roe.attr,
+	&class_device_attr_sq_num_tree.attr,
+	&class_device_attr_sq_num_rree.attr,
+	&class_device_attr_rq_num_rnr.attr,
+	&class_device_attr_sq_num_rnr.attr,
+	&class_device_attr_sq_num_rabrte.attr,
+	&class_device_attr_sq_num_ieecne.attr,
+	&class_device_attr_sq_num_ieecse.attr,
+	&class_device_attr_rq_num_oos.attr,
+	&class_device_attr_sq_num_oos.attr,
+	&class_device_attr_rq_num_mce.attr,
+	&class_device_attr_rq_num_rsync.attr,
+	&class_device_attr_sq_num_rsync.attr,
+	&class_device_attr_rq_num_udsdprd.attr,
+	&class_device_attr_rq_num_ucsdprd.attr,
+	&class_device_attr_num_cqovf.attr,
+	&class_device_attr_num_eqovf.attr,
+	&class_device_attr_num_baddb.attr,
+	&class_device_attr_clear_diag.attr,
 	NULL
 };
 
@@ -902,7 +900,7 @@ static void *mlx4_ib_add(struct mlx4_dev
 			goto err_reg;
 	}
 
-	if(sysfs_create_group(&ibdev->ib_dev.dev.kobj, &diag_counters_group))
+	if(sysfs_create_group(&ibdev->ib_dev.class_dev.kobj, &diag_counters_group))
 		goto err_reg;
 
 	return ibdev;
@@ -933,7 +931,7 @@ static void mlx4_ib_remove(struct mlx4_d
 	if (!ibdev->num_ports)
 		return;
 
-	sysfs_remove_group(&ibdev->ib_dev.dev.kobj, &diag_counters_group);
+	sysfs_remove_group(&ibdev->ib_dev.class_dev.kobj, &diag_counters_group);
 
 	for (p = 1; p <= ibdev->num_ports; ++p)
 		mlx4_CLOSE_PORT(dev, p);
