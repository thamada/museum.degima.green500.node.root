---
 drivers/infiniband/hw/ehca/ehca_classes.h |    2 -
 drivers/infiniband/hw/ehca/ehca_eq.c      |    6 +--
 drivers/infiniband/hw/ehca/ehca_main.c    |   49 ++++++++++++++----------------
 3 files changed, 27 insertions(+), 30 deletions(-)

Index: ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_classes.h
===================================================================
--- ofed_kernel-2.6.16_sles10_sp3.orig/drivers/infiniband/hw/ehca/ehca_classes.h	2011-01-03 05:25:56.000000000 -0500
+++ ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_classes.h	2011-01-03 05:29:34.000000000 -0500
@@ -112,7 +112,7 @@
 
 struct ehca_shca {
 	struct ib_device ib_device;
-	struct of_device *ofdev;
+	struct ibmebus_dev *ibmebus_dev;
 	u8 num_ports;
 	int hw_level;
 	struct list_head shca_list;
Index: ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_eq.c
===================================================================
--- ofed_kernel-2.6.16_sles10_sp3.orig/drivers/infiniband/hw/ehca/ehca_eq.c	2011-01-03 05:25:57.000000000 -0500
+++ ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_eq.c	2011-01-03 05:30:39.000000000 -0500
@@ -124,7 +124,7 @@
 	if (type == EHCA_EQ) {
 		tasklet_init(&eq->interrupt_task, ehca_tasklet_eq, (long)shca);
 
-		ret = ibmebus_request_irq(eq->ist, ehca_interrupt_eq,
+		ret = ibmebus_request_irq(NULL, eq->ist, ehca_interrupt_eq,
 					  IRQF_DISABLED, "ehca_eq",
 					  (void *)shca);
 		if (ret < 0)
@@ -132,7 +132,7 @@
 	} else if (type == EHCA_NEQ) {
 		tasklet_init(&eq->interrupt_task, ehca_tasklet_neq, (long)shca);
 
-		ret = ibmebus_request_irq(eq->ist, ehca_interrupt_neq,
+		ret = ibmebus_request_irq(NULL, eq->ist, ehca_interrupt_neq,
 					  IRQF_DISABLED, "ehca_neq",
 					  (void *)shca);
 		if (ret < 0)
@@ -169,7 +169,7 @@
 	unsigned long flags;
 	u64 h_ret;
 
-	ibmebus_free_irq(eq->ist, (void *)shca);
+	ibmebus_free_irq(NULL, eq->ist, (void *)shca);
 
 	spin_lock_irqsave(&shca_list_lock, flags);
 	eq->is_initialized = 0;
Index: ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_main.c
===================================================================
--- ofed_kernel-2.6.16_sles10_sp3.orig/drivers/infiniband/hw/ehca/ehca_main.c	2011-01-03 05:26:40.000000000 -0500
+++ ofed_kernel-2.6.16_sles10_sp3/drivers/infiniband/hw/ehca/ehca_main.c	2011-01-03 05:29:34.000000000 -0500
@@ -289,8 +289,8 @@
 	};
 
 	ehca_gen_dbg("Probing adapter %s...",
-		     shca->ofdev->node->full_name);
-	loc_code = of_get_property(shca->ofdev->node, "ibm,loc-code", NULL);
+		     shca->ibmebus_dev->ofdev.node->full_name);
+	loc_code = of_get_property(shca->ibmebus_dev->ofdev.node, "ibm,loc-code", NULL);
 	if (loc_code)
 		ehca_gen_dbg(" ... location lode=%s", loc_code);
 
@@ -460,7 +460,7 @@
 	shca->ib_device.node_type           = RDMA_NODE_IB_CA;
 	shca->ib_device.phys_port_cnt       = shca->num_ports;
 	shca->ib_device.num_comp_vectors    = 1;
-	shca->ib_device.dma_device          = &shca->ofdev->dev;
+	shca->ib_device.dma_device          = &shca->ibmebus_dev->ofdev.dev;
 	shca->ib_device.query_device        = ehca_query_device;
 	shca->ib_device.query_port          = ehca_query_port;
 	shca->ib_device.query_gid           = ehca_query_gid;
@@ -621,11 +621,6 @@
 	.attrs = ehca_drv_attrs
 };
 
-static struct attribute_group *ehca_drv_attr_groups[] = {
-	&ehca_drv_attr_grp,
-	NULL,
-};
-
 #define EHCA_RESOURCE_ATTR(name)                                           \
 static ssize_t  ehca_show_##name(struct device *dev,                       \
 				 struct device_attribute *attr,            \
@@ -709,7 +704,7 @@
 	.attrs = ehca_dev_attrs
 };
 
-static int __devinit ehca_probe(struct of_device *dev,
+static int __devinit ehca_probe(struct ibmebus_dev *dev,
 				const struct of_device_id *id)
 {
 	struct ehca_shca *shca;
@@ -718,16 +713,16 @@
 	int ret, i, eq_size;
 	unsigned long flags;
 
-	handle = of_get_property(dev->node, "ibm,hca-handle", NULL);
+	handle = of_get_property(dev->ofdev.node, "ibm,hca-handle", NULL);
 	if (!handle) {
 		ehca_gen_err("Cannot get eHCA handle for adapter: %s.",
-			     dev->node->full_name);
+			     dev->ofdev.node->full_name);
 		return -ENODEV;
 	}
 
 	if (!(*handle)) {
 		ehca_gen_err("Wrong eHCA handle for adapter: %s.",
-			     dev->node->full_name);
+			     dev->ofdev.node->full_name);
 		return -ENODEV;
 	}
 
@@ -746,9 +741,9 @@
 	for (i = 0; i < ARRAY_SIZE(shca->sport); i++)
 		spin_lock_init(&shca->sport[i].mod_sqp_lock);
 
-	shca->ofdev = dev;
+	shca->ibmebus_dev = dev;
 	shca->ipz_hca_handle.handle = *handle;
-	dev->dev.driver_data = shca;
+	dev->ofdev.dev.driver_data = shca;
 
 	ret = ehca_sense_attributes(shca);
 	if (ret < 0) {
@@ -825,7 +820,7 @@
 		}
 	}
 
-	ret = sysfs_create_group(&dev->dev.kobj, &ehca_dev_attr_grp);
+	ret = sysfs_create_group(&dev->ofdev.dev.kobj, &ehca_dev_attr_grp);
 	if (ret) /* only complain; we can live without attributes */
 		ehca_err(&shca->ib_device,
 			 "Cannot create device attributes  ret=%d", ret);
@@ -875,13 +870,13 @@
 	return -EINVAL;
 }
 
-static int __devexit ehca_remove(struct of_device *dev)
+static int __devexit ehca_remove(struct ibmebus_dev *dev)
 {
-	struct ehca_shca *shca = dev->dev.driver_data;
+	struct ehca_shca *shca = dev->ofdev.dev.driver_data;
 	unsigned long flags;
 	int ret;
 
-	sysfs_remove_group(&dev->dev.kobj, &ehca_dev_attr_grp);
+ 	sysfs_remove_group(&dev->ofdev.dev.kobj, &ehca_dev_attr_grp);
 
 	if (ehca_open_aqp1 == 1) {
 		int i;
@@ -933,14 +928,11 @@
 };
 MODULE_DEVICE_TABLE(of, ehca_device_table);
 
-static struct of_platform_driver ehca_driver = {
-	.name        = "ehca",
-	.match_table = ehca_device_table,
-	.probe       = ehca_probe,
-	.remove      = ehca_remove,
-	.driver	     = {
-		.groups = ehca_drv_attr_groups,
-	},
+static struct ibmebus_driver ehca_driver = {
+	.name     = "ehca",
+	.id_table = ehca_device_table,
+	.probe    = ehca_probe,
+	.remove   = ehca_remove,
 };
 
 void ehca_poll_eqs(unsigned long data)
@@ -999,6 +991,10 @@
 		goto module_init2;
 	}
 
+	ret = sysfs_create_group(&ehca_driver.driver.kobj, &ehca_drv_attr_grp);
+	if (ret) /* only complain; we can live without attributes */
+		ehca_gen_err("Cannot create driver attributes  ret=%d", ret);
+
 	if (ehca_poll_all_eqs != 1) {
 		ehca_gen_err("WARNING!!!");
 		ehca_gen_err("It is possible to lose interrupts.");
@@ -1024,6 +1020,7 @@
 	if (ehca_poll_all_eqs == 1)
 		del_timer_sync(&poll_eqs_timer);
 
+	sysfs_remove_group(&ehca_driver.driver.kobj, &ehca_drv_attr_grp);
 	ibmebus_unregister_driver(&ehca_driver);
 
 	ehca_destroy_slab_caches();
