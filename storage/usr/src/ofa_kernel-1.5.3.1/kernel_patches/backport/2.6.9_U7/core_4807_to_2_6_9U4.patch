---
 drivers/infiniband/core/sysfs.c    |   19 ++++++++++++--
 drivers/infiniband/core/umem.c     |    2 -
 drivers/infiniband/core/user_mad.c |   49 ++++++++++++++++++-------------------
 3 files changed, 43 insertions(+), 27 deletions(-)

Index: ofed_kernel/drivers/infiniband/core/sysfs.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/core/sysfs.c
+++ ofed_kernel/drivers/infiniband/core/sysfs.c
@@ -436,9 +436,24 @@ static int ib_device_uevent(struct class
 			    int num_envp, char *buf, int size)
 {
 	struct ib_device *dev = container_of(cdev, struct ib_device, class_dev);
-	int i = 0, len = 0;
+	int i = 0;
+#ifndef HOTPLUG_ENV_VAR
+#define HOTPLUG_ENV_VAR(_buf, _size, _envp, _nenvp, _index, _fmt, _arg...) \
+	({								\
+		int len, ret = 0;					\
+		_envp[_index++] = _buf;					\
+		len = snprintf(_buf, _size, _fmt, ## _arg);		\
+		if (_size - len <= 0 || _index >= _nenvp)		\
+			ret = -ENOMEM;					\
+		else {							\
+			_buf  += len + 1;				\
+			_size -= len + 1;				\
+		}							\
+		ret;							\
+	})
+#endif
 
-	if (add_uevent_var(envp, num_envp, &i, buf, size, &len,
+	if (HOTPLUG_ENV_VAR(buf, size, envp, num_envp, i,
 			   "NAME=%s", dev->name))
 		return -ENOMEM;
 
Index: ofed_kernel/drivers/infiniband/core/umem.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/core/umem.c
+++ ofed_kernel/drivers/infiniband/core/umem.c
@@ -186,7 +186,7 @@ struct ib_umem *ib_umem_get(struct ib_uc
 	down_write(&current->mm->mmap_sem);
 
 	locked     = npages + current->mm->locked_vm;
-	lock_limit = current->signal->rlim[RLIMIT_MEMLOCK].rlim_cur >> PAGE_SHIFT;
+	lock_limit = current->rlim[RLIMIT_MEMLOCK].rlim_cur >> PAGE_SHIFT;
 
 	if ((locked > lock_limit) && !capable(CAP_IPC_LOCK)) {
 		ret = -ENOMEM;
Index: ofed_kernel/drivers/infiniband/core/user_mad.c
===================================================================
--- ofed_kernel.orig/drivers/infiniband/core/user_mad.c
+++ ofed_kernel/drivers/infiniband/core/user_mad.c
@@ -45,7 +45,7 @@
 #include <linux/kref.h>
 #include <linux/compat.h>
 #include <linux/semaphore.h>
-
+#include <linux/ioctl32.h>
 #include <asm/uaccess.h>
 
 #include <rdma/ib_mad.h>
@@ -743,8 +743,8 @@ static long ib_umad_enable_pkey(struct i
 	return ret;
 }
 
-static long ib_umad_ioctl(struct file *filp, unsigned int cmd,
-			  unsigned long arg)
+static int ib_umad_ioctl(struct inode *inode, struct file *filp,
+			unsigned int cmd, unsigned long arg)
 {
 	switch (cmd) {
 	case IB_USER_MAD_REGISTER_AGENT:
@@ -758,23 +758,6 @@ static long ib_umad_ioctl(struct file *f
 	}
 }
 
-#ifdef CONFIG_COMPAT
-static long ib_umad_compat_ioctl(struct file *filp, unsigned int cmd,
-				 unsigned long arg)
-{
-	switch (cmd) {
-	case IB_USER_MAD_REGISTER_AGENT:
-		return ib_umad_reg_agent(filp->private_data, compat_ptr(arg), 1);
-	case IB_USER_MAD_UNREGISTER_AGENT:
-		return ib_umad_unreg_agent(filp->private_data, compat_ptr(arg));
-	case IB_USER_MAD_ENABLE_PKEY:
-		return ib_umad_enable_pkey(filp->private_data);
-	default:
-		return -ENOIOCTLCMD;
-	}
-}
-#endif
-
 /*
  * ib_umad_open() does not need the BKL:
  *
@@ -875,10 +858,7 @@ static const struct file_operations umad
 	.read 	 	= ib_umad_read,
 	.write 	 	= ib_umad_write,
 	.poll 	 	= ib_umad_poll,
-	.unlocked_ioctl = ib_umad_ioctl,
-#ifdef CONFIG_COMPAT
-	.compat_ioctl 	= ib_umad_compat_ioctl,
-#endif
+	.ioctl 		= ib_umad_ioctl,
 	.open 	 	= ib_umad_open,
 	.release 	= ib_umad_close
 };
@@ -1197,8 +1177,27 @@ static int __init ib_umad_init(void)
 		goto out_class;
 	}
 
+	/* Our ioctls are 32/64 clean */
+	ret  = register_ioctl32_conversion(IB_USER_MAD_REGISTER_AGENT, NULL);
+	if (ret) {
+		printk(KERN_ERR "user_mad: couldn't register ioctl32 conversion for REGISTER AGENT\n");
+		goto out_client;
+	}
+
+	ret = register_ioctl32_conversion(IB_USER_MAD_UNREGISTER_AGENT, NULL);
+	if (ret) {
+		printk(KERN_ERR "user_mad: couldn't register ioctl32 conversion for UNREGISTER_AGENT\n");
+		goto out_agent;
+	}
+
 	return 0;
 
+out_agent:
+	unregister_ioctl32_conversion(IB_USER_MAD_REGISTER_AGENT);
+
+out_client:
+	ib_unregister_client(&umad_client);
+
 out_class:
 	class_destroy(umad_class);
 
@@ -1211,6 +1210,8 @@ out:
 
 static void __exit ib_umad_cleanup(void)
 {
+	unregister_ioctl32_conversion(IB_USER_MAD_REGISTER_AGENT);
+	unregister_ioctl32_conversion(IB_USER_MAD_UNREGISTER_AGENT);
 	ib_unregister_client(&umad_client);
 	class_destroy(umad_class);
 	unregister_chrdev_region(base_dev, IB_UMAD_MAX_PORTS * 2);
