diff -Nurp linux-2.6/drivers/infiniband/hw/nes/nes_hw.c nes.2_6_28_patch/drivers/infiniband/hw/nes/nes_hw.c
--- linux-2.6/drivers/infiniband/hw/nes/nes_hw.c	2010-05-10 11:20:11.024367000 +0200
+++ nes.2_6_28_patch/drivers/infiniband/hw/nes/nes_hw.c	2010-05-10 11:21:29.624499000 +0200
@@ -2647,7 +2647,7 @@ static void nes_nic_napi_ce_handler(stru
 {
 	struct nes_vnic *nesvnic = container_of(cq, struct nes_vnic, nic_cq);
 
-	napi_schedule(&nesvnic->napi);
+	netif_rx_schedule(nesdev->netdev[nesvnic->netdev_index], &nesvnic->napi);
 }
 
 
diff -Nurp linux-2.6/drivers/infiniband/hw/nes/nes_nic.c nes.2_6_28_patch/drivers/infiniband/hw/nes/nes_nic.c
--- linux-2.6/drivers/infiniband/hw/nes/nes_nic.c	2010-05-10 11:20:11.075361000 +0200
+++ nes.2_6_28_patch/drivers/infiniband/hw/nes/nes_nic.c	2010-05-10 11:21:29.631496000 +0200
@@ -99,6 +99,7 @@ static int nics_per_function = 1;
 static int nes_netdev_poll(struct napi_struct *napi, int budget)
 {
 	struct nes_vnic *nesvnic = container_of(napi, struct nes_vnic, napi);
+	struct net_device *netdev = nesvnic->netdev;
 	struct nes_device *nesdev = nesvnic->nesdev;
 	struct nes_hw_nic_cq *nescq = &nesvnic->nic_cq;
 
@@ -111,7 +112,7 @@ static int nes_netdev_poll(struct napi_s
 	nes_nic_ce_handler(nesdev, nescq);
 
 	if (nescq->cqes_pending == 0) {
-		napi_complete(napi);
+		netif_rx_complete(netdev, napi);
 		/* clear out completed cqes and arm */
 		nes_write32(nesdev->regs+NES_CQE_ALLOC, NES_CQE_ALLOC_NOTIFY_NEXT |
 				nescq->cq_number | (nescq->cqe_allocs_pending << 16));
@@ -1595,18 +1596,6 @@ static void nes_netdev_vlan_rx_register(
 	spin_unlock_irqrestore(&nesadapter->phy_lock, flags);
 }
 
-static const struct net_device_ops nes_netdev_ops = {
-	.ndo_open 		= nes_netdev_open,
-	.ndo_stop		= nes_netdev_stop,
-	.ndo_start_xmit 	= nes_netdev_start_xmit,
-	.ndo_get_stats		= nes_netdev_get_stats,
-	.ndo_tx_timeout 	= nes_netdev_tx_timeout,
-	.ndo_set_mac_address	= nes_netdev_set_mac_address,
-	.ndo_set_multicast_list = nes_netdev_set_multicast_list,
-	.ndo_change_mtu		= nes_netdev_change_mtu,
-	.ndo_validate_addr	= eth_validate_addr,
-	.ndo_vlan_rx_register 	= nes_netdev_vlan_rx_register,
-};
 
 /**
  * nes_netdev_init - initialize network device
@@ -1631,6 +1620,17 @@ struct net_device *nes_netdev_init(struc
 
 	SET_NETDEV_DEV(netdev, &nesdev->pcidev->dev);
 
+	nesvnic = netdev_priv(netdev);
+	memset(nesvnic, 0, sizeof(*nesvnic));
+
+	netdev->open = nes_netdev_open;
+	netdev->stop = nes_netdev_stop;
+	netdev->hard_start_xmit = nes_netdev_start_xmit;
+	netdev->get_stats = nes_netdev_get_stats;
+	netdev->tx_timeout = nes_netdev_tx_timeout;
+	netdev->set_mac_address = nes_netdev_set_mac_address;
+	netdev->set_multicast_list = nes_netdev_set_multicast_list;
+	netdev->change_mtu = nes_netdev_change_mtu;
 	netdev->watchdog_timeo = NES_TX_TIMEOUT;
 	netdev->irq = nesdev->pcidev->irq;
 	netdev->mtu = ETH_DATA_LEN;
@@ -1638,11 +1638,11 @@ struct net_device *nes_netdev_init(struc
 	netdev->addr_len = ETH_ALEN;
 	netdev->type = ARPHRD_ETHER;
 	netdev->features = NETIF_F_HIGHDMA;
-	netdev->netdev_ops = &nes_netdev_ops;
 	netdev->ethtool_ops = &nes_ethtool_ops;
 	netif_napi_add(netdev, &nesvnic->napi, nes_netdev_poll, 128);
 	nes_debug(NES_DBG_INIT, "Enabling VLAN Insert/Delete.\n");
 	netdev->features |= NETIF_F_HW_VLAN_TX | NETIF_F_HW_VLAN_RX;
+	netdev->vlan_rx_register = nes_netdev_vlan_rx_register;
 
 	/* Fill in the port structure */
 	nesvnic->netdev = netdev;
