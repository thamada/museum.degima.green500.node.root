From 401f2ff5c705caffa934156badfd809664aee3c9 Mon Sep 17 00:00:00 2001
From: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
Date: Sun, 14 Feb 2010 14:56:14 +0200
Subject: [PATCH] adaptive moderation policy

Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il>
---
 drivers/net/mlx4/en_ethtool.c |    2 ++
 drivers/net/mlx4/en_netdev.c  |   10 ++++++++--
 drivers/net/mlx4/mlx4_en.h    |    8 +++++---
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/net/mlx4/en_ethtool.c b/drivers/net/mlx4/en_ethtool.c
index 69188c6..b40b207 100644
--- a/drivers/net/mlx4/en_ethtool.c
+++ b/drivers/net/mlx4/en_ethtool.c
@@ -334,6 +334,7 @@ static int mlx4_en_get_coalesce(struct net_device *dev,
 	coal->rx_coalesce_usecs_low = priv->rx_usecs_low;
 	coal->pkt_rate_high = priv->pkt_rate_high;
 	coal->rx_coalesce_usecs_high = priv->rx_usecs_high;
+	coal->rx_max_coalesced_frames_high = priv->rx_frames_high;
 	coal->rate_sample_interval = priv->sample_interval;
 	coal->use_adaptive_rx_coalesce = priv->adaptive_rx_coal;
 	return 0;
@@ -360,6 +361,7 @@ static int mlx4_en_set_coalesce(struct net_device *dev,
 	priv->rx_usecs_low = coal->rx_coalesce_usecs_low;
 	priv->pkt_rate_high = coal->pkt_rate_high;
 	priv->rx_usecs_high = coal->rx_coalesce_usecs_high;
+	priv->rx_frames_high = coal->rx_max_coalesced_frames_high;
 	priv->sample_interval = coal->rate_sample_interval;
 	priv->adaptive_rx_coal = coal->use_adaptive_rx_coalesce;
 	priv->last_moder_time = MLX4_EN_AUTO_CONF;
diff --git a/drivers/net/mlx4/en_netdev.c b/drivers/net/mlx4/en_netdev.c
index a79a8e9..80f0c3a 100644
--- a/drivers/net/mlx4/en_netdev.c
+++ b/drivers/net/mlx4/en_netdev.c
@@ -418,6 +418,7 @@ static void mlx4_en_set_default_moderation(struct mlx4_en_priv *priv)
 	priv->rx_usecs_low = MLX4_EN_RX_COAL_TIME_LOW;
 	priv->pkt_rate_high = MLX4_EN_RX_RATE_HIGH;
 	priv->rx_usecs_high = MLX4_EN_RX_COAL_TIME_HIGH;
+	priv->rx_frames_high =  MLX4_EN_RX_COAL_TARGET_HIGH;
 	priv->sample_interval = MLX4_EN_SAMPLE_INTERVAL;
 	priv->adaptive_rx_coal = 1;
 	priv->last_moder_time = MLX4_EN_AUTO_CONF;
@@ -440,6 +441,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 	unsigned long tx_pkt_diff;
 	unsigned long rx_pkt_diff;
 	int moder_time;
+	int moder_cnt = 0;
 	int i, err;
 
 	if (!priv->adaptive_rx_coal || period < priv->sample_interval * HZ)
@@ -472,13 +474,15 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		if (2 * tx_pkt_diff > 3 * rx_pkt_diff ||
 		    2 * rx_pkt_diff > 3 * tx_pkt_diff) {
 			moder_time = priv->rx_usecs_high;
+			moder_cnt = priv->rx_frames_high;
 		} else {
 			if (rate < priv->pkt_rate_low ||
 			    avg_pkt_size < MLX4_EN_AVG_PKT_SMALL)
 				moder_time = priv->rx_usecs_low;
-			else if (rate > priv->pkt_rate_high)
+			else if (rate > priv->pkt_rate_high) {
 				moder_time = priv->rx_usecs_high;
-			else
+				moder_cnt = priv->rx_frames_high;
+			} else
 				moder_time = (rate - priv->pkt_rate_low) *
 					(priv->rx_usecs_high - priv->rx_usecs_low) /
 					(priv->pkt_rate_high - priv->pkt_rate_low) +
@@ -488,6 +492,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		/* When packet rate is low, use default moderation rather than
 		 * 0 to prevent interrupt storms if traffic suddenly increases */
 		moder_time = priv->rx_usecs;
+		moder_cnt = priv->rx_frames;
 	}
 
 	en_dbg(INTR, priv, "tx rate:%lu rx_rate:%lu\n",
@@ -503,6 +508,7 @@ static void mlx4_en_auto_moderation(struct mlx4_en_priv *priv)
 		for (i = 0; i < priv->rx_ring_num; i++) {
 			cq = &priv->rx_cq[i];
 			cq->moder_time = moder_time;
+			cq->moder_cnt = moder_cnt;
 			err = mlx4_en_set_cq_moder(priv, cq);
 			if (err) {
 				en_err(priv, "Failed modifying moderation for cq:%d\n", i);
diff --git a/drivers/net/mlx4/mlx4_en.h b/drivers/net/mlx4/mlx4_en.h
index 436142a..d44b599 100644
--- a/drivers/net/mlx4/mlx4_en.h
+++ b/drivers/net/mlx4/mlx4_en.h
@@ -146,8 +146,8 @@ enum {
 #define MLX4_EN_DEF_RX_RING_SIZE  	1024
 
 /* Target number of bytes to coalesce with interrupt moderation */
-#define MLX4_EN_RX_COAL_TARGET	0x20000
-#define MLX4_EN_RX_COAL_TIME	0x10
+#define MLX4_EN_RX_COAL_TARGET	0x10000
+#define MLX4_EN_RX_COAL_TIME	0x5
 
 #define MLX4_EN_TX_COAL_PKTS	5
 #define MLX4_EN_TX_COAL_TIME	0x80
@@ -155,7 +155,8 @@ enum {
 #define MLX4_EN_RX_RATE_LOW		400000
 #define MLX4_EN_RX_COAL_TIME_LOW	0
 #define MLX4_EN_RX_RATE_HIGH		450000
-#define MLX4_EN_RX_COAL_TIME_HIGH	128
+#define MLX4_EN_RX_COAL_TIME_HIGH	5
+#define MLX4_EN_RX_COAL_TARGET_HIGH	22
 #define MLX4_EN_RX_SIZE_THRESH		1024
 #define MLX4_EN_RX_RATE_THRESH		(1000000 / MLX4_EN_RX_COAL_TIME_HIGH)
 #define MLX4_EN_SAMPLE_INTERVAL		0
@@ -504,6 +505,7 @@ struct mlx4_en_priv {
 	u16 rx_usecs_low;
 	u32 pkt_rate_high;
 	u16 rx_usecs_high;
+	u16 rx_frames_high;
 	u16 sample_interval;
 	u16 adaptive_rx_coal;
 	u32 msg_enable;
-- 
1.5.3.7

