Backports: rhel U7: patches for mlx4_en, mainly for sysfs.

Based on patches developed by Yevgeny Petrilin of Mellanox.

Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>

Index: ofed_kernel-2.6.9_U7/drivers/net/mlx4/en_netdev.c
===================================================================
--- ofed_kernel-2.6.9_U7.orig/drivers/net/mlx4/en_netdev.c      2009-06-10 16:13:08.000000000 +0300
+++ ofed_kernel-2.6.9_U7/drivers/net/mlx4/en_netdev.c   2009-06-10 17:16:50.000000000 +0300
@@ -31,6 +31,7 @@
  *
  */

+#include <linux/netdevice.h>
 #include <linux/etherdevice.h>
 #include <linux/tcp.h>
 #include <linux/if_vlan.h>
Index: ofed_kernel-2.6.9_U7/drivers/net/mlx4/en_rx.c
===================================================================
--- ofed_kernel-2.6.9_U7.orig/drivers/net/mlx4/en_rx.c  2009-06-10 16:13:07.000000000 +0300
+++ ofed_kernel-2.6.9_U7/drivers/net/mlx4/en_rx.c       2009-06-10 17:15:12.000000000 +0300
@@ -37,6 +37,7 @@
 #include <linux/if_ether.h>
 #include <linux/if_vlan.h>
 #include <linux/vmalloc.h>
+#include <linux/etherdevice.h>

 #include "mlx4_en.h"

Index: ofed_kernel-2.6.9_U7/drivers/net/mlx4/main.c
===================================================================
--- ofed_kernel-2.6.9_U7.orig/drivers/net/mlx4/main.c	2009-06-10 17:40:18.000000000 +0300
+++ ofed_kernel-2.6.9_U7/drivers/net/mlx4/main.c	2009-06-11 09:34:13.000000000 +0300
@@ -364,19 +364,14 @@ out:
 	return err;
 }
 
-static ssize_t show_port_type(struct device *dev,
-			      struct device_attribute *attr,
-			      char *buf)
-{
-	struct mlx4_port_info *info = container_of(attr, struct mlx4_port_info,
-						   port_attr);
-	struct mlx4_dev *mdev = info->dev;
+static ssize_t show_port(struct mlx4_dev *dev, int port, char *buf)
+{
 	char type[8];
 
 	sprintf(type, "%s",
-		(mdev->caps.port_type[info->port] == MLX4_PORT_TYPE_IB) ?
+		(dev->caps.port_type[port] == MLX4_PORT_TYPE_IB) ?
 		"ib" : "eth");
-	if (mdev->caps.possible_type[info->port] == MLX4_PORT_TYPE_AUTO)
+	if (dev->caps.possible_type[port] == MLX4_PORT_TYPE_AUTO)
 		sprintf(buf, "auto (%s)\n", type);
 	else
 		sprintf(buf, "%s\n", type);
@@ -384,14 +379,33 @@ static ssize_t show_port_type(struct dev
 	return strlen(buf);
 }
 
-static ssize_t set_port_type(struct device *dev,
-			     struct device_attribute *attr,
-			     const char *buf, size_t count)
-{
-	struct mlx4_port_info *info = container_of(attr, struct mlx4_port_info,
-						   port_attr);
-	struct mlx4_dev *mdev = info->dev;
+static ssize_t show_port_type1(struct device *dev, char *buf)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	if (mdev)
+		return show_port(mdev, 1, buf);
+	else
+		return -ENODEV;
+}
+
+static ssize_t show_port_type2(struct device *dev, char *buf)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	if (mdev)
+		return show_port(mdev, 2, buf);
+	else
+		return -ENODEV;
+}
+
+static ssize_t store_port(struct mlx4_dev *mdev, int port,
+			  const char *buf, size_t count)
+{
 	struct mlx4_priv *priv = mlx4_priv(mdev);
+	struct mlx4_port_info *info = &priv->port[port];
 	enum mlx4_port_type types[MLX4_MAX_PORTS];
 	enum mlx4_port_type new_types[MLX4_MAX_PORTS];
 	int i;
@@ -455,6 +469,24 @@ out:
 	return err ? err : count;
 }
 
+static ssize_t set_port_type1(struct device *dev,
+			      const char *buf, size_t count)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	return store_port(mdev, 1, buf, count);
+}
+
+static ssize_t set_port_type2(struct device *dev,
+			      const char *buf, size_t count)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct mlx4_dev *mdev = pci_get_drvdata(pdev);
+
+	return store_port(mdev, 2, buf, count);
+}
+
 static int mlx4_load_fw(struct mlx4_dev *dev)
 {
 	struct mlx4_priv *priv = mlx4_priv(dev);
@@ -1084,8 +1116,8 @@ static int mlx4_init_port_info(struct ml
 	sprintf(info->dev_name, "mlx4_port%d", port);
 	info->port_attr.attr.name = info->dev_name;
 	info->port_attr.attr.mode = S_IRUGO | S_IWUSR;
-	info->port_attr.show      = show_port_type;
-	info->port_attr.store     = set_port_type;
+	info->port_attr.show = (port == 1) ? show_port_type1 : show_port_type2;
+	info->port_attr.store = (port == 1) ? set_port_type1 : set_port_type2;
 
 	err = device_create_file(&dev->pdev->dev, &info->port_attr);
 	if (err) {
